// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_attention_get_qk (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        in_qk,
        in_q,
        in_k
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] in_qk;
input  [63:0] in_q;
input  [63:0] in_k;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg   [0:0] icmp_ln37_reg_1500;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter4_reg;
reg   [0:0] or_ln45_reg_1631;
reg   [0:0] and_ln45_reg_1640;
reg   [0:0] or_ln43_5_reg_1626;
reg   [0:0] and_ln41_5_reg_1609;
reg    ap_predicate_op177_readreq_state6;
reg    ap_block_state6_io;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
reg    ap_block_state13_pp0_stage0_iter12;
reg   [0:0] select_ln37_2_reg_1580;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter11_reg;
reg    ap_block_state13_io;
wire    ap_block_state14_pp0_stage0_iter13;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter12_reg;
reg    ap_block_state14_io;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter17_reg;
reg    ap_block_state19_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln37_fu_355_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_R;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg   [0:0] first_iter_0_reg_244;
reg   [0:0] first_iter_02_reg_255;
reg   [0:0] first_iter_03_reg_266;
reg   [0:0] first_iter_04_reg_277;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] b_2_reg_1490;
reg   [2:0] b_2_reg_1490_pp0_iter2_reg;
reg   [2:0] b_2_reg_1490_pp0_iter3_reg;
reg   [2:0] b_2_reg_1490_pp0_iter4_reg;
reg   [2:0] b_2_reg_1490_pp0_iter5_reg;
reg   [2:0] b_2_reg_1490_pp0_iter6_reg;
reg   [2:0] b_2_reg_1490_pp0_iter7_reg;
reg   [2:0] b_2_reg_1490_pp0_iter8_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter2_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter3_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter5_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter6_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter7_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter8_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter9_reg;
reg   [0:0] icmp_ln37_reg_1500_pp0_iter10_reg;
wire   [0:0] icmp_ln39_fu_373_p2;
reg   [0:0] icmp_ln39_reg_1504;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter2_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter3_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter4_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter5_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter6_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter7_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter8_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter9_reg;
reg   [0:0] icmp_ln39_reg_1504_pp0_iter10_reg;
wire   [0:0] xor_ln37_fu_387_p2;
reg   [0:0] xor_ln37_reg_1523;
reg   [0:0] xor_ln37_reg_1523_pp0_iter2_reg;
reg   [0:0] xor_ln37_reg_1523_pp0_iter3_reg;
wire   [0:0] icmp_ln41_fu_393_p2;
reg   [0:0] icmp_ln41_reg_1530;
reg   [0:0] icmp_ln41_reg_1530_pp0_iter2_reg;
reg   [0:0] icmp_ln41_reg_1530_pp0_iter3_reg;
wire   [0:0] and_ln37_3_fu_399_p2;
reg   [0:0] and_ln37_3_reg_1535;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter2_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter3_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter4_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter5_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter6_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter7_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter8_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter9_reg;
reg   [0:0] and_ln37_3_reg_1535_pp0_iter10_reg;
wire   [2:0] add_ln39_fu_405_p2;
reg   [2:0] add_ln39_reg_1549;
reg   [2:0] add_ln39_reg_1549_pp0_iter2_reg;
reg   [2:0] add_ln39_reg_1549_pp0_iter3_reg;
reg   [2:0] add_ln39_reg_1549_pp0_iter4_reg;
reg   [2:0] add_ln39_reg_1549_pp0_iter5_reg;
reg   [2:0] add_ln39_reg_1549_pp0_iter6_reg;
reg   [2:0] add_ln39_reg_1549_pp0_iter7_reg;
reg   [2:0] add_ln39_reg_1549_pp0_iter8_reg;
wire   [0:0] or_ln41_1_fu_411_p2;
reg   [0:0] or_ln41_1_reg_1554;
reg   [0:0] or_ln41_1_reg_1554_pp0_iter2_reg;
reg   [0:0] or_ln41_1_reg_1554_pp0_iter3_reg;
reg   [0:0] or_ln41_1_reg_1554_pp0_iter4_reg;
reg   [0:0] or_ln41_1_reg_1554_pp0_iter5_reg;
reg   [0:0] or_ln41_1_reg_1554_pp0_iter6_reg;
wire   [13:0] p_mid1183_fu_510_p2;
reg   [13:0] p_mid1183_reg_1570;
wire   [0:0] select_ln37_2_fu_539_p3;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter4_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter5_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter6_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter7_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter8_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter9_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter10_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter13_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter14_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter15_reg;
reg   [0:0] select_ln37_2_reg_1580_pp0_iter16_reg;
reg   [61:0] sext_ln41_mid2_v_reg_1584;
wire   [0:0] and_ln41_2_fu_704_p2;
reg   [0:0] and_ln41_2_reg_1589;
reg   [0:0] and_ln41_2_reg_1589_pp0_iter5_reg;
reg   [0:0] and_ln41_2_reg_1589_pp0_iter6_reg;
reg   [0:0] and_ln41_2_reg_1589_pp0_iter7_reg;
reg   [0:0] and_ln41_2_reg_1589_pp0_iter8_reg;
reg   [0:0] and_ln41_2_reg_1589_pp0_iter9_reg;
reg   [0:0] and_ln41_2_reg_1589_pp0_iter10_reg;
wire   [0:0] or_ln41_7_fu_715_p2;
reg   [0:0] or_ln41_7_reg_1597;
reg   [0:0] or_ln41_7_reg_1597_pp0_iter5_reg;
reg   [0:0] or_ln41_7_reg_1597_pp0_iter6_reg;
reg   [0:0] or_ln41_7_reg_1597_pp0_iter7_reg;
wire   [0:0] and_ln41_4_fu_744_p2;
reg   [0:0] and_ln41_4_reg_1602;
reg   [0:0] and_ln41_4_reg_1602_pp0_iter5_reg;
reg   [0:0] and_ln41_4_reg_1602_pp0_iter6_reg;
reg   [0:0] and_ln41_4_reg_1602_pp0_iter7_reg;
reg   [0:0] and_ln41_4_reg_1602_pp0_iter8_reg;
reg   [0:0] and_ln41_4_reg_1602_pp0_iter9_reg;
reg   [0:0] and_ln41_4_reg_1602_pp0_iter10_reg;
wire   [0:0] and_ln41_5_fu_750_p2;
wire   [0:0] or_ln43_3_fu_768_p2;
reg   [0:0] or_ln43_3_reg_1614;
reg   [0:0] or_ln43_3_reg_1614_pp0_iter5_reg;
reg   [0:0] or_ln43_3_reg_1614_pp0_iter6_reg;
reg   [0:0] or_ln43_3_reg_1614_pp0_iter7_reg;
reg   [0:0] or_ln43_3_reg_1614_pp0_iter8_reg;
reg   [0:0] or_ln43_3_reg_1614_pp0_iter9_reg;
reg   [0:0] or_ln43_3_reg_1614_pp0_iter10_reg;
wire   [0:0] and_ln43_fu_791_p2;
reg   [0:0] and_ln43_reg_1620;
reg   [0:0] and_ln43_reg_1620_pp0_iter5_reg;
reg   [0:0] and_ln43_reg_1620_pp0_iter6_reg;
reg   [0:0] and_ln43_reg_1620_pp0_iter7_reg;
reg   [0:0] and_ln43_reg_1620_pp0_iter8_reg;
reg   [0:0] and_ln43_reg_1620_pp0_iter9_reg;
reg   [0:0] and_ln43_reg_1620_pp0_iter10_reg;
wire   [0:0] or_ln43_5_fu_803_p2;
wire   [0:0] or_ln45_fu_809_p2;
wire   [2:0] select_ln45_fu_832_p3;
reg   [2:0] select_ln45_reg_1635;
reg   [2:0] select_ln45_reg_1635_pp0_iter5_reg;
reg   [2:0] select_ln45_reg_1635_pp0_iter6_reg;
reg   [2:0] select_ln45_reg_1635_pp0_iter7_reg;
reg   [2:0] select_ln45_reg_1635_pp0_iter8_reg;
reg   [2:0] select_ln45_reg_1635_pp0_iter9_reg;
reg   [2:0] select_ln45_reg_1635_pp0_iter10_reg;
wire   [0:0] and_ln45_fu_846_p2;
reg   [4:0] dh_1_reg_1665;
reg   [4:0] dh_1_reg_1665_pp0_iter9_reg;
wire   [4:0] add_ln43_fu_973_p2;
reg   [4:0] add_ln43_reg_1675;
reg   [4:0] add_ln43_reg_1675_pp0_iter9_reg;
wire   [13:0] mul_ln41_fu_998_p2;
wire   [13:0] mul_ln41_1_fu_1014_p2;
reg   [13:0] mul_ln41_1_reg_1690;
reg   [13:0] mul_ln41_1_reg_1690_pp0_iter10_reg;
wire   [13:0] grp_fu_1356_p3;
wire   [13:0] grp_fu_1366_p3;
reg   [13:0] add_ln50_6_reg_1707;
wire   [13:0] select_ln41_7_fu_1060_p3;
wire   [13:0] select_ln43_2_fu_1081_p3;
reg   [13:0] select_ln43_2_reg_1717;
reg   [63:0] gmem_addr_20_reg_1722;
reg   [63:0] gmem_addr_19_reg_1728;
reg   [31:0] gmem_addr85_read_reg_1734;
reg    ap_condition_exit_pp0_iter11_stage0;
reg   [0:0] ap_phi_mux_first_iter_0_phi_fu_248_p4;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_first_iter_02_phi_fu_259_p4;
reg   [0:0] ap_phi_mux_first_iter_03_phi_fu_270_p4;
reg   [0:0] ap_phi_mux_first_iter_04_phi_fu_282_p4;
wire  signed [63:0] sext_ln41_fu_907_p1;
wire  signed [63:0] sext_ln58_fu_1246_p1;
wire  signed [63:0] sext_ln51_fu_1323_p1;
reg    ap_block_pp0_stage0_01001;
reg   [2:0] w_fu_138;
wire   [2:0] add_ln47_fu_858_p2;
reg   [2:0] h_fu_142;
wire   [2:0] select_ln45_2_fu_1193_p3;
reg   [5:0] indvar_flatten_fu_146;
wire   [5:0] select_ln45_3_fu_870_p3;
reg   [4:0] dh_fu_150;
wire   [4:0] select_ln43_4_fu_983_p3;
reg   [10:0] indvar_flatten30_fu_154;
wire   [10:0] select_ln43_5_fu_884_p3;
reg   [2:0] c_fu_158;
wire   [2:0] select_ln41_10_fu_947_p3;
reg   [12:0] indvar_flatten82_fu_162;
wire   [12:0] select_ln41_11_fu_441_p3;
reg   [2:0] b_fu_166;
wire   [2:0] select_ln39_fu_421_p3;
reg   [14:0] indvar_flatten162_fu_170;
wire   [14:0] select_ln39_1_fu_455_p3;
reg   [1:0] qk_fu_174;
wire   [1:0] select_ln37_7_fu_546_p3;
reg   [14:0] indvar_flatten263_fu_178;
wire   [14:0] add_ln37_fu_361_p2;
wire   [2:0] select_ln37_fu_379_p3;
wire   [12:0] add_ln41_2_fu_435_p2;
wire   [14:0] add_ln39_1_fu_449_p2;
wire   [1:0] empty_fu_490_p0;
wire   [12:0] empty_fu_490_p1;
wire   [13:0] empty_fu_490_p2;
wire   [1:0] add_ln37_1_fu_500_p2;
wire   [1:0] p_mid1183_fu_510_p0;
wire   [12:0] p_mid1183_fu_510_p1;
wire   [13:0] select_ln37_1_fu_516_p3;
wire   [0:0] cmp26_mid1_fu_527_p2;
wire   [0:0] cmp26294_fu_533_p2;
wire   [0:0] icmp_ln47_fu_590_p2;
wire   [0:0] icmp_ln45_fu_601_p2;
wire   [0:0] icmp_ln43_fu_612_p2;
wire   [0:0] or_ln37_fu_567_p2;
wire   [0:0] or_ln37_1_fu_572_p2;
wire   [0:0] or_ln37_2_fu_577_p2;
wire   [0:0] or_ln37_3_fu_582_p2;
wire   [14:0] p_cast3_mid1_fu_587_p1;
wire   [14:0] grp_fu_1338_p3;
wire   [14:0] grp_fu_1347_p3;
wire   [14:0] select_ln37_8_fu_643_p3;
wire   [14:0] select_ln41_2_fu_649_p3;
wire   [16:0] sext_ln41_mid2_v_v_v_v_v_fu_655_p3;
wire   [63:0] zext_ln41_3_fu_663_p1;
wire   [63:0] add_ln41_1_fu_667_p2;
wire   [0:0] xor_ln41_fu_682_p2;
wire   [0:0] and_ln37_fu_596_p2;
wire   [0:0] or_ln41_5_fu_687_p2;
wire   [0:0] and_ln37_1_fu_607_p2;
wire   [0:0] and_ln37_2_fu_618_p2;
wire   [0:0] or_ln41_6_fu_710_p2;
wire   [0:0] or_ln41_3_fu_633_p2;
wire   [0:0] or_ln41_4_fu_638_p2;
wire   [0:0] and_ln41_fu_692_p2;
wire   [0:0] xor_ln41_1_fu_732_p2;
wire   [0:0] and_ln41_1_fu_698_p2;
wire   [0:0] or_ln41_fu_623_p2;
wire   [0:0] or_ln41_8_fu_720_p2;
wire   [0:0] or_ln43_1_fu_762_p2;
wire   [0:0] or_ln41_9_fu_726_p2;
wire   [0:0] xor_ln43_fu_779_p2;
wire   [0:0] and_ln41_3_fu_738_p2;
wire   [0:0] or_ln43_4_fu_785_p2;
wire   [0:0] or_ln41_2_fu_628_p2;
wire   [0:0] and_ln43_1_fu_797_p2;
wire   [0:0] or_ln43_2_fu_773_p2;
wire   [0:0] or_ln45_1_fu_815_p2;
wire   [0:0] or_ln45_2_fu_821_p2;
wire   [0:0] or_ln45_3_fu_827_p2;
wire   [0:0] or_ln43_fu_756_p2;
wire   [0:0] xor_ln45_fu_840_p2;
wire   [5:0] add_ln45_1_fu_864_p2;
wire   [10:0] add_ln43_1_fu_878_p2;
wire   [2:0] select_ln41_fu_930_p3;
wire   [2:0] add_ln41_fu_937_p2;
wire   [4:0] select_ln41_6_fu_966_p3;
wire   [2:0] mul_ln41_fu_998_p0;
wire   [12:0] mul_ln41_fu_998_p1;
wire   [2:0] mul_ln41_1_fu_1014_p0;
wire   [12:0] mul_ln41_1_fu_1014_p1;
wire   [13:0] select_ln37_3_fu_1004_p3;
wire   [13:0] trunc_ln50_3_cast_fu_1027_p1;
(* use_dsp48 = "no" *) wire   [13:0] add_ln50_2_fu_1030_p2;
wire   [13:0] select_ln37_4_fu_1035_p3;
wire   [13:0] select_ln37_6_fu_1041_p3;
wire   [13:0] select_ln41_3_fu_1048_p3;
wire   [13:0] select_ln41_5_fu_1054_p3;
wire   [13:0] trunc_ln50_3_cast_mid1_fu_1072_p1;
wire   [13:0] add_ln50_7_fu_1075_p2;
wire   [13:0] select_ln41_9_fu_1066_p3;
wire   [5:0] p_shl_fu_1095_p3;
wire   [6:0] p_shl_cast_fu_1103_p1;
wire   [6:0] zext_ln45_fu_1091_p1;
wire   [13:0] grp_fu_1376_p3;
wire   [13:0] select_ln37_5_fu_1113_p3;
wire   [13:0] select_ln41_4_fu_1119_p3;
wire   [13:0] grp_fu_1385_p3;
wire   [13:0] select_ln41_8_fu_1125_p3;
wire   [13:0] select_ln43_1_fu_1138_p3;
wire   [6:0] sub_ln50_fu_1107_p2;
wire   [2:0] select_ln43_fu_1131_p3;
wire   [2:0] add_ln45_fu_1158_p2;
wire   [5:0] p_shl_mid1_fu_1168_p3;
wire   [6:0] p_shl_cast_mid1_fu_1176_p1;
wire   [6:0] zext_ln45_1_fu_1164_p1;
wire   [6:0] sub_ln50_1_fu_1180_p2;
wire   [6:0] select_ln43_3_fu_1151_p3;
wire   [6:0] zext_ln50_1_fu_1200_p1;
wire   [6:0] select_ln45_1_fu_1186_p3;
wire  signed [6:0] add_ln50_fu_1203_p2;
wire  signed [14:0] sext_ln57_fu_1209_p1;
wire   [14:0] zext_ln50_3_fu_1144_p1;
wire   [14:0] add_ln57_fu_1213_p2;
wire   [16:0] tmp_s_fu_1219_p3;
wire  signed [63:0] sext_ln57_1_fu_1227_p1;
wire   [63:0] add_ln57_1_fu_1231_p2;
wire   [61:0] trunc_ln6_fu_1236_p4;
wire   [8:0] shl_ln_fu_1256_p3;
wire   [10:0] shl_ln50_1_fu_1268_p3;
wire  signed [11:0] sext_ln50_fu_1264_p1;
wire  signed [11:0] sext_ln50_1_fu_1276_p1;
wire   [11:0] add_ln50_5_fu_1280_p2;
wire  signed [14:0] sext_ln50_2_fu_1286_p1;
wire   [14:0] zext_ln43_2_fu_1148_p1;
wire   [14:0] add_ln50_4_fu_1290_p2;
wire   [16:0] tmp_fu_1296_p3;
wire  signed [63:0] sext_ln50_3_fu_1304_p1;
wire   [63:0] add_ln50_3_fu_1308_p2;
wire   [61:0] trunc_ln_fu_1313_p4;
wire   [2:0] grp_fu_1338_p0;
wire   [12:0] grp_fu_1338_p1;
wire   [13:0] grp_fu_1338_p2;
wire   [2:0] grp_fu_1347_p0;
wire   [12:0] grp_fu_1347_p1;
wire   [13:0] grp_fu_1347_p2;
wire   [2:0] grp_fu_1356_p0;
wire   [9:0] grp_fu_1356_p1;
wire   [2:0] grp_fu_1366_p0;
wire   [9:0] grp_fu_1366_p1;
wire   [13:0] grp_fu_1366_p2;
wire   [4:0] grp_fu_1376_p0;
wire   [5:0] grp_fu_1376_p1;
wire   [4:0] grp_fu_1385_p0;
wire   [5:0] grp_fu_1385_p1;
reg    grp_fu_1338_ce;
reg    grp_fu_1347_ce;
reg    grp_fu_1356_ce;
reg    grp_fu_1366_ce;
reg    grp_fu_1376_ce;
reg    grp_fu_1385_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [13:0] empty_fu_490_p00;
wire   [14:0] grp_fu_1338_p00;
wire   [14:0] grp_fu_1338_p20;
wire   [14:0] grp_fu_1347_p00;
wire   [14:0] grp_fu_1347_p20;
wire   [12:0] grp_fu_1356_p00;
wire   [12:0] grp_fu_1366_p00;
wire   [10:0] grp_fu_1376_p00;
wire   [10:0] grp_fu_1385_p00;
wire   [13:0] mul_ln41_1_fu_1014_p00;
wire   [13:0] mul_ln41_fu_998_p00;
wire   [13:0] p_mid1183_fu_510_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_attention_mul_2ns_13ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
mul_2ns_13ns_14_1_1_U80(
    .din0(empty_fu_490_p0),
    .din1(empty_fu_490_p1),
    .dout(empty_fu_490_p2)
);

kernel_attention_mul_2ns_13ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
mul_2ns_13ns_14_1_1_U81(
    .din0(p_mid1183_fu_510_p0),
    .din1(p_mid1183_fu_510_p1),
    .dout(p_mid1183_fu_510_p2)
);

kernel_attention_mul_3ns_13ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
mul_3ns_13ns_14_1_1_U82(
    .din0(mul_ln41_fu_998_p0),
    .din1(mul_ln41_fu_998_p1),
    .dout(mul_ln41_fu_998_p2)
);

kernel_attention_mul_3ns_13ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
mul_3ns_13ns_14_1_1_U83(
    .din0(mul_ln41_1_fu_1014_p0),
    .din1(mul_ln41_1_fu_1014_p1),
    .dout(mul_ln41_1_fu_1014_p2)
);

kernel_attention_mac_muladd_3ns_13ns_14ns_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 15 ))
mac_muladd_3ns_13ns_14ns_15_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1338_p0),
    .din1(grp_fu_1338_p1),
    .din2(grp_fu_1338_p2),
    .ce(grp_fu_1338_ce),
    .dout(grp_fu_1338_p3)
);

kernel_attention_mac_muladd_3ns_13ns_14ns_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 15 ))
mac_muladd_3ns_13ns_14ns_15_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1347_p0),
    .din1(grp_fu_1347_p1),
    .din2(grp_fu_1347_p2),
    .ce(grp_fu_1347_ce),
    .dout(grp_fu_1347_p3)
);

kernel_attention_mac_muladd_3ns_10ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_3ns_10ns_14ns_14_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1356_p0),
    .din1(grp_fu_1356_p1),
    .din2(mul_ln41_fu_998_p2),
    .ce(grp_fu_1356_ce),
    .dout(grp_fu_1356_p3)
);

kernel_attention_mac_muladd_3ns_10ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_3ns_10ns_14ns_14_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1366_p0),
    .din1(grp_fu_1366_p1),
    .din2(grp_fu_1366_p2),
    .ce(grp_fu_1366_ce),
    .dout(grp_fu_1366_p3)
);

kernel_attention_mac_muladd_5ns_6ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_5ns_6ns_14ns_14_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1376_p0),
    .din1(grp_fu_1376_p1),
    .din2(grp_fu_1356_p3),
    .ce(grp_fu_1376_ce),
    .dout(grp_fu_1376_p3)
);

kernel_attention_mac_muladd_5ns_6ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_5ns_6ns_14ns_14_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1385_p0),
    .din1(grp_fu_1385_p1),
    .din2(select_ln41_7_fu_1060_p3),
    .ce(grp_fu_1385_ce),
    .dout(grp_fu_1385_p3)
);

kernel_attention_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter11_stage0)) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            b_fu_166 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_fu_355_p2 == 1'd0))) begin
            b_fu_166 <= select_ln39_fu_421_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c_fu_158 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln37_reg_1500_pp0_iter6_reg == 1'd0))) begin
            c_fu_158 <= select_ln41_10_fu_947_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dh_fu_150 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln37_reg_1500_pp0_iter7_reg == 1'd0))) begin
            dh_fu_150 <= select_ln43_4_fu_983_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        first_iter_02_reg_255 <= or_ln43_5_reg_1626;
    end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_02_reg_255 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        first_iter_03_reg_266 <= and_ln45_reg_1640;
    end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_03_reg_266 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        first_iter_04_reg_277 <= 1'd0;
    end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_04_reg_277 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        first_iter_0_reg_244 <= and_ln41_5_reg_1609;
    end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_0_reg_244 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            h_fu_142 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln37_reg_1500_pp0_iter10_reg == 1'd0))) begin
            h_fu_142 <= select_ln45_2_fu_1193_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten162_fu_170 <= 15'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_fu_355_p2 == 1'd0))) begin
            indvar_flatten162_fu_170 <= select_ln39_1_fu_455_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten263_fu_178 <= 15'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_fu_355_p2 == 1'd0))) begin
            indvar_flatten263_fu_178 <= add_ln37_fu_361_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten30_fu_154 <= 11'd0;
        end else if (((icmp_ln37_reg_1500_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            indvar_flatten30_fu_154 <= select_ln43_5_fu_884_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten82_fu_162 <= 13'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_fu_355_p2 == 1'd0))) begin
            indvar_flatten82_fu_162 <= select_ln41_11_fu_441_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten_fu_146 <= 6'd0;
        end else if (((icmp_ln37_reg_1500_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            indvar_flatten_fu_146 <= select_ln45_3_fu_870_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            qk_fu_174 <= 2'd0;
        end else if (((icmp_ln37_reg_1500_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            qk_fu_174 <= select_ln37_7_fu_546_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w_fu_138 <= 3'd0;
        end else if (((icmp_ln37_reg_1500_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            w_fu_138 <= add_ln47_fu_858_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_355_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln39_reg_1549 <= add_ln39_fu_405_p2;
        and_ln37_3_reg_1535 <= and_ln37_3_fu_399_p2;
        icmp_ln39_reg_1504 <= icmp_ln39_fu_373_p2;
        icmp_ln41_reg_1530 <= icmp_ln41_fu_393_p2;
        or_ln41_1_reg_1554 <= or_ln41_1_fu_411_p2;
        xor_ln37_reg_1523 <= xor_ln37_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln39_reg_1549_pp0_iter2_reg <= add_ln39_reg_1549;
        add_ln39_reg_1549_pp0_iter3_reg <= add_ln39_reg_1549_pp0_iter2_reg;
        add_ln39_reg_1549_pp0_iter4_reg <= add_ln39_reg_1549_pp0_iter3_reg;
        add_ln39_reg_1549_pp0_iter5_reg <= add_ln39_reg_1549_pp0_iter4_reg;
        add_ln39_reg_1549_pp0_iter6_reg <= add_ln39_reg_1549_pp0_iter5_reg;
        add_ln39_reg_1549_pp0_iter7_reg <= add_ln39_reg_1549_pp0_iter6_reg;
        add_ln39_reg_1549_pp0_iter8_reg <= add_ln39_reg_1549_pp0_iter7_reg;
        add_ln43_reg_1675_pp0_iter9_reg <= add_ln43_reg_1675;
        and_ln37_3_reg_1535_pp0_iter10_reg <= and_ln37_3_reg_1535_pp0_iter9_reg;
        and_ln37_3_reg_1535_pp0_iter2_reg <= and_ln37_3_reg_1535;
        and_ln37_3_reg_1535_pp0_iter3_reg <= and_ln37_3_reg_1535_pp0_iter2_reg;
        and_ln37_3_reg_1535_pp0_iter4_reg <= and_ln37_3_reg_1535_pp0_iter3_reg;
        and_ln37_3_reg_1535_pp0_iter5_reg <= and_ln37_3_reg_1535_pp0_iter4_reg;
        and_ln37_3_reg_1535_pp0_iter6_reg <= and_ln37_3_reg_1535_pp0_iter5_reg;
        and_ln37_3_reg_1535_pp0_iter7_reg <= and_ln37_3_reg_1535_pp0_iter6_reg;
        and_ln37_3_reg_1535_pp0_iter8_reg <= and_ln37_3_reg_1535_pp0_iter7_reg;
        and_ln37_3_reg_1535_pp0_iter9_reg <= and_ln37_3_reg_1535_pp0_iter8_reg;
        and_ln41_2_reg_1589_pp0_iter10_reg <= and_ln41_2_reg_1589_pp0_iter9_reg;
        and_ln41_2_reg_1589_pp0_iter5_reg <= and_ln41_2_reg_1589;
        and_ln41_2_reg_1589_pp0_iter6_reg <= and_ln41_2_reg_1589_pp0_iter5_reg;
        and_ln41_2_reg_1589_pp0_iter7_reg <= and_ln41_2_reg_1589_pp0_iter6_reg;
        and_ln41_2_reg_1589_pp0_iter8_reg <= and_ln41_2_reg_1589_pp0_iter7_reg;
        and_ln41_2_reg_1589_pp0_iter9_reg <= and_ln41_2_reg_1589_pp0_iter8_reg;
        and_ln41_4_reg_1602_pp0_iter10_reg <= and_ln41_4_reg_1602_pp0_iter9_reg;
        and_ln41_4_reg_1602_pp0_iter5_reg <= and_ln41_4_reg_1602;
        and_ln41_4_reg_1602_pp0_iter6_reg <= and_ln41_4_reg_1602_pp0_iter5_reg;
        and_ln41_4_reg_1602_pp0_iter7_reg <= and_ln41_4_reg_1602_pp0_iter6_reg;
        and_ln41_4_reg_1602_pp0_iter8_reg <= and_ln41_4_reg_1602_pp0_iter7_reg;
        and_ln41_4_reg_1602_pp0_iter9_reg <= and_ln41_4_reg_1602_pp0_iter8_reg;
        and_ln43_reg_1620_pp0_iter10_reg <= and_ln43_reg_1620_pp0_iter9_reg;
        and_ln43_reg_1620_pp0_iter5_reg <= and_ln43_reg_1620;
        and_ln43_reg_1620_pp0_iter6_reg <= and_ln43_reg_1620_pp0_iter5_reg;
        and_ln43_reg_1620_pp0_iter7_reg <= and_ln43_reg_1620_pp0_iter6_reg;
        and_ln43_reg_1620_pp0_iter8_reg <= and_ln43_reg_1620_pp0_iter7_reg;
        and_ln43_reg_1620_pp0_iter9_reg <= and_ln43_reg_1620_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        b_2_reg_1490_pp0_iter2_reg <= b_2_reg_1490;
        b_2_reg_1490_pp0_iter3_reg <= b_2_reg_1490_pp0_iter2_reg;
        b_2_reg_1490_pp0_iter4_reg <= b_2_reg_1490_pp0_iter3_reg;
        b_2_reg_1490_pp0_iter5_reg <= b_2_reg_1490_pp0_iter4_reg;
        b_2_reg_1490_pp0_iter6_reg <= b_2_reg_1490_pp0_iter5_reg;
        b_2_reg_1490_pp0_iter7_reg <= b_2_reg_1490_pp0_iter6_reg;
        b_2_reg_1490_pp0_iter8_reg <= b_2_reg_1490_pp0_iter7_reg;
        dh_1_reg_1665 <= dh_fu_150;
        dh_1_reg_1665_pp0_iter9_reg <= dh_1_reg_1665;
        gmem_addr85_read_reg_1734 <= m_axi_gmem_RDATA;
        icmp_ln37_reg_1500_pp0_iter10_reg <= icmp_ln37_reg_1500_pp0_iter9_reg;
        icmp_ln37_reg_1500_pp0_iter2_reg <= icmp_ln37_reg_1500;
        icmp_ln37_reg_1500_pp0_iter3_reg <= icmp_ln37_reg_1500_pp0_iter2_reg;
        icmp_ln37_reg_1500_pp0_iter4_reg <= icmp_ln37_reg_1500_pp0_iter3_reg;
        icmp_ln37_reg_1500_pp0_iter5_reg <= icmp_ln37_reg_1500_pp0_iter4_reg;
        icmp_ln37_reg_1500_pp0_iter6_reg <= icmp_ln37_reg_1500_pp0_iter5_reg;
        icmp_ln37_reg_1500_pp0_iter7_reg <= icmp_ln37_reg_1500_pp0_iter6_reg;
        icmp_ln37_reg_1500_pp0_iter8_reg <= icmp_ln37_reg_1500_pp0_iter7_reg;
        icmp_ln37_reg_1500_pp0_iter9_reg <= icmp_ln37_reg_1500_pp0_iter8_reg;
        icmp_ln39_reg_1504_pp0_iter10_reg <= icmp_ln39_reg_1504_pp0_iter9_reg;
        icmp_ln39_reg_1504_pp0_iter2_reg <= icmp_ln39_reg_1504;
        icmp_ln39_reg_1504_pp0_iter3_reg <= icmp_ln39_reg_1504_pp0_iter2_reg;
        icmp_ln39_reg_1504_pp0_iter4_reg <= icmp_ln39_reg_1504_pp0_iter3_reg;
        icmp_ln39_reg_1504_pp0_iter5_reg <= icmp_ln39_reg_1504_pp0_iter4_reg;
        icmp_ln39_reg_1504_pp0_iter6_reg <= icmp_ln39_reg_1504_pp0_iter5_reg;
        icmp_ln39_reg_1504_pp0_iter7_reg <= icmp_ln39_reg_1504_pp0_iter6_reg;
        icmp_ln39_reg_1504_pp0_iter8_reg <= icmp_ln39_reg_1504_pp0_iter7_reg;
        icmp_ln39_reg_1504_pp0_iter9_reg <= icmp_ln39_reg_1504_pp0_iter8_reg;
        icmp_ln41_reg_1530_pp0_iter2_reg <= icmp_ln41_reg_1530;
        icmp_ln41_reg_1530_pp0_iter3_reg <= icmp_ln41_reg_1530_pp0_iter2_reg;
        mul_ln41_1_reg_1690_pp0_iter10_reg <= mul_ln41_1_reg_1690;
        or_ln41_1_reg_1554_pp0_iter2_reg <= or_ln41_1_reg_1554;
        or_ln41_1_reg_1554_pp0_iter3_reg <= or_ln41_1_reg_1554_pp0_iter2_reg;
        or_ln41_1_reg_1554_pp0_iter4_reg <= or_ln41_1_reg_1554_pp0_iter3_reg;
        or_ln41_1_reg_1554_pp0_iter5_reg <= or_ln41_1_reg_1554_pp0_iter4_reg;
        or_ln41_1_reg_1554_pp0_iter6_reg <= or_ln41_1_reg_1554_pp0_iter5_reg;
        or_ln41_7_reg_1597_pp0_iter5_reg <= or_ln41_7_reg_1597;
        or_ln41_7_reg_1597_pp0_iter6_reg <= or_ln41_7_reg_1597_pp0_iter5_reg;
        or_ln41_7_reg_1597_pp0_iter7_reg <= or_ln41_7_reg_1597_pp0_iter6_reg;
        or_ln43_3_reg_1614_pp0_iter10_reg <= or_ln43_3_reg_1614_pp0_iter9_reg;
        or_ln43_3_reg_1614_pp0_iter5_reg <= or_ln43_3_reg_1614;
        or_ln43_3_reg_1614_pp0_iter6_reg <= or_ln43_3_reg_1614_pp0_iter5_reg;
        or_ln43_3_reg_1614_pp0_iter7_reg <= or_ln43_3_reg_1614_pp0_iter6_reg;
        or_ln43_3_reg_1614_pp0_iter8_reg <= or_ln43_3_reg_1614_pp0_iter7_reg;
        or_ln43_3_reg_1614_pp0_iter9_reg <= or_ln43_3_reg_1614_pp0_iter8_reg;
        select_ln37_2_reg_1580_pp0_iter10_reg <= select_ln37_2_reg_1580_pp0_iter9_reg;
        select_ln37_2_reg_1580_pp0_iter11_reg <= select_ln37_2_reg_1580_pp0_iter10_reg;
        select_ln37_2_reg_1580_pp0_iter12_reg <= select_ln37_2_reg_1580_pp0_iter11_reg;
        select_ln37_2_reg_1580_pp0_iter13_reg <= select_ln37_2_reg_1580_pp0_iter12_reg;
        select_ln37_2_reg_1580_pp0_iter14_reg <= select_ln37_2_reg_1580_pp0_iter13_reg;
        select_ln37_2_reg_1580_pp0_iter15_reg <= select_ln37_2_reg_1580_pp0_iter14_reg;
        select_ln37_2_reg_1580_pp0_iter16_reg <= select_ln37_2_reg_1580_pp0_iter15_reg;
        select_ln37_2_reg_1580_pp0_iter17_reg <= select_ln37_2_reg_1580_pp0_iter16_reg;
        select_ln37_2_reg_1580_pp0_iter4_reg <= select_ln37_2_reg_1580;
        select_ln37_2_reg_1580_pp0_iter5_reg <= select_ln37_2_reg_1580_pp0_iter4_reg;
        select_ln37_2_reg_1580_pp0_iter6_reg <= select_ln37_2_reg_1580_pp0_iter5_reg;
        select_ln37_2_reg_1580_pp0_iter7_reg <= select_ln37_2_reg_1580_pp0_iter6_reg;
        select_ln37_2_reg_1580_pp0_iter8_reg <= select_ln37_2_reg_1580_pp0_iter7_reg;
        select_ln37_2_reg_1580_pp0_iter9_reg <= select_ln37_2_reg_1580_pp0_iter8_reg;
        select_ln45_reg_1635_pp0_iter10_reg <= select_ln45_reg_1635_pp0_iter9_reg;
        select_ln45_reg_1635_pp0_iter5_reg <= select_ln45_reg_1635;
        select_ln45_reg_1635_pp0_iter6_reg <= select_ln45_reg_1635_pp0_iter5_reg;
        select_ln45_reg_1635_pp0_iter7_reg <= select_ln45_reg_1635_pp0_iter6_reg;
        select_ln45_reg_1635_pp0_iter8_reg <= select_ln45_reg_1635_pp0_iter7_reg;
        select_ln45_reg_1635_pp0_iter9_reg <= select_ln45_reg_1635_pp0_iter8_reg;
        xor_ln37_reg_1523_pp0_iter2_reg <= xor_ln37_reg_1523;
        xor_ln37_reg_1523_pp0_iter3_reg <= xor_ln37_reg_1523_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_1500_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln43_reg_1675 <= add_ln43_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln37_reg_1500_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln50_6_reg_1707 <= grp_fu_1366_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_1500_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln41_2_reg_1589 <= and_ln41_2_fu_704_p2;
        and_ln41_4_reg_1602 <= and_ln41_4_fu_744_p2;
        and_ln43_reg_1620 <= and_ln43_fu_791_p2;
        or_ln41_7_reg_1597 <= or_ln41_7_fu_715_p2;
        or_ln43_3_reg_1614 <= or_ln43_3_fu_768_p2;
        or_ln45_reg_1631 <= or_ln45_fu_809_p2;
        select_ln45_reg_1635 <= select_ln45_fu_832_p3;
        sext_ln41_mid2_v_reg_1584 <= {{add_ln41_1_fu_667_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_1500_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln41_5_reg_1609 <= and_ln41_5_fu_750_p2;
        and_ln45_reg_1640 <= and_ln45_fu_846_p2;
        or_ln43_5_reg_1626 <= or_ln43_5_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        b_2_reg_1490 <= b_fu_166;
        icmp_ln37_reg_1500 <= icmp_ln37_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln37_2_reg_1580_pp0_iter10_reg == 1'd1) & (icmp_ln37_reg_1500_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_19_reg_1728 <= sext_ln51_fu_1323_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln37_2_reg_1580_pp0_iter10_reg == 1'd0) & (icmp_ln37_reg_1500_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_20_reg_1722 <= sext_ln58_fu_1246_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_1500_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln41_1_reg_1690 <= mul_ln41_1_fu_1014_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_1500_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_mid1183_reg_1570 <= p_mid1183_fu_510_p2;
        select_ln37_2_reg_1580 <= select_ln37_2_fu_539_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_1500_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln43_2_reg_1717 <= select_ln43_2_fu_1081_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln37_reg_1500_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter11_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter11_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_fu_355_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_first_iter_02_phi_fu_259_p4 = or_ln43_5_reg_1626;
    end else begin
        ap_phi_mux_first_iter_02_phi_fu_259_p4 = first_iter_02_reg_255;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_first_iter_03_phi_fu_270_p4 = and_ln45_reg_1640;
    end else begin
        ap_phi_mux_first_iter_03_phi_fu_270_p4 = first_iter_03_reg_266;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_first_iter_04_phi_fu_282_p4 = 1'd0;
    end else begin
        ap_phi_mux_first_iter_04_phi_fu_282_p4 = first_iter_04_reg_277;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_first_iter_0_phi_fu_248_p4 = and_ln41_5_reg_1609;
    end else begin
        ap_phi_mux_first_iter_0_phi_fu_248_p4 = first_iter_0_reg_244;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op177_readreq_state6 == 1'b1))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln37_2_reg_1580_pp0_iter11_reg == 1'd1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln37_2_reg_1580_pp0_iter11_reg == 1'd0)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln37_2_reg_1580_pp0_iter17_reg == 1'd1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln37_2_reg_1580_pp0_iter17_reg == 1'd0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln37_2_reg_1580_pp0_iter12_reg == 1'd1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln37_2_reg_1580_pp0_iter12_reg == 1'd0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1338_ce = 1'b1;
    end else begin
        grp_fu_1338_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1347_ce = 1'b1;
    end else begin
        grp_fu_1347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1356_ce = 1'b1;
    end else begin
        grp_fu_1356_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1366_ce = 1'b1;
    end else begin
        grp_fu_1366_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1376_ce = 1'b1;
    end else begin
        grp_fu_1376_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1385_ce = 1'b1;
    end else begin
        grp_fu_1385_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_readreq_state6 == 1'b1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((select_ln37_2_reg_1580_pp0_iter11_reg == 1'd1)) begin
            m_axi_gmem_AWADDR = gmem_addr_19_reg_1728;
        end else if ((select_ln37_2_reg_1580_pp0_iter11_reg == 1'd0)) begin
            m_axi_gmem_AWADDR = gmem_addr_20_reg_1722;
        end else begin
            m_axi_gmem_AWADDR = 'bx;
        end
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln37_2_reg_1580_pp0_iter11_reg == 1'd1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln37_2_reg_1580_pp0_iter11_reg == 1'd0)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln37_2_reg_1580_pp0_iter17_reg == 1'd1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln37_2_reg_1580_pp0_iter17_reg == 1'd0)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln37_2_reg_1580_pp0_iter12_reg == 1'd1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln37_2_reg_1580_pp0_iter12_reg == 1'd0)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_1_fu_500_p2 = (qk_fu_174 + 2'd1);

assign add_ln37_fu_361_p2 = (indvar_flatten263_fu_178 + 15'd1);

assign add_ln39_1_fu_449_p2 = (indvar_flatten162_fu_170 + 15'd1);

assign add_ln39_fu_405_p2 = (select_ln37_fu_379_p3 + 3'd1);

assign add_ln41_1_fu_667_p2 = (zext_ln41_3_fu_663_p1 + in_qk);

assign add_ln41_2_fu_435_p2 = (indvar_flatten82_fu_162 + 13'd1);

assign add_ln41_fu_937_p2 = (select_ln41_fu_930_p3 + 3'd1);

assign add_ln43_1_fu_878_p2 = (indvar_flatten30_fu_154 + 11'd1);

assign add_ln43_fu_973_p2 = (select_ln41_6_fu_966_p3 + 5'd1);

assign add_ln45_1_fu_864_p2 = (indvar_flatten_fu_146 + 6'd1);

assign add_ln45_fu_1158_p2 = (select_ln43_fu_1131_p3 + 3'd1);

assign add_ln47_fu_858_p2 = (select_ln45_fu_832_p3 + 3'd1);

assign add_ln50_2_fu_1030_p2 = (trunc_ln50_3_cast_fu_1027_p1 + grp_fu_1356_p3);

assign add_ln50_3_fu_1308_p2 = ($signed(sext_ln50_3_fu_1304_p1) + $signed(in_q));

assign add_ln50_4_fu_1290_p2 = ($signed(sext_ln50_2_fu_1286_p1) + $signed(zext_ln43_2_fu_1148_p1));

assign add_ln50_5_fu_1280_p2 = ($signed(sext_ln50_fu_1264_p1) + $signed(sext_ln50_1_fu_1276_p1));

assign add_ln50_7_fu_1075_p2 = (trunc_ln50_3_cast_mid1_fu_1072_p1 + select_ln41_7_fu_1060_p3);

assign add_ln50_fu_1203_p2 = (zext_ln50_1_fu_1200_p1 + select_ln45_1_fu_1186_p3);

assign add_ln57_1_fu_1231_p2 = ($signed(sext_ln57_1_fu_1227_p1) + $signed(in_k));

assign add_ln57_fu_1213_p2 = ($signed(sext_ln57_fu_1209_p1) + $signed(zext_ln50_3_fu_1144_p1));

assign and_ln37_1_fu_607_p2 = (xor_ln37_reg_1523_pp0_iter3_reg & icmp_ln45_fu_601_p2);

assign and_ln37_2_fu_618_p2 = (xor_ln37_reg_1523_pp0_iter3_reg & icmp_ln43_fu_612_p2);

assign and_ln37_3_fu_399_p2 = (xor_ln37_fu_387_p2 & icmp_ln41_fu_393_p2);

assign and_ln37_fu_596_p2 = (xor_ln37_reg_1523_pp0_iter3_reg & icmp_ln47_fu_590_p2);

assign and_ln41_1_fu_698_p2 = (or_ln41_5_fu_687_p2 & and_ln37_1_fu_607_p2);

assign and_ln41_2_fu_704_p2 = (or_ln41_5_fu_687_p2 & and_ln37_2_fu_618_p2);

assign and_ln41_3_fu_738_p2 = (xor_ln41_1_fu_732_p2 & and_ln41_fu_692_p2);

assign and_ln41_4_fu_744_p2 = (xor_ln41_1_fu_732_p2 & and_ln41_1_fu_698_p2);

assign and_ln41_5_fu_750_p2 = (xor_ln41_1_fu_732_p2 & or_ln41_fu_623_p2);

assign and_ln41_fu_692_p2 = (or_ln41_5_fu_687_p2 & and_ln37_fu_596_p2);

assign and_ln43_1_fu_797_p2 = (xor_ln43_fu_779_p2 & or_ln41_2_fu_628_p2);

assign and_ln43_fu_791_p2 = (or_ln43_4_fu_785_p2 & and_ln41_3_fu_738_p2);

assign and_ln45_fu_846_p2 = (xor_ln45_fu_840_p2 & or_ln43_fu_756_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter18 == 1'b1) & (((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd0) & (m_axi_gmem_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter18 == 1'b1) & (((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd0) & (m_axi_gmem_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_io)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & ((1'b1 == ap_block_state13_io) | (m_axi_gmem_RVALID == 1'b0))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter18 == 1'b1) & (((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd0) & (m_axi_gmem_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_io)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & ((1'b1 == ap_block_state13_io) | (m_axi_gmem_RVALID == 1'b0))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = (((m_axi_gmem_AWREADY == 1'b0) & (select_ln37_2_reg_1580_pp0_iter11_reg == 1'd1)) | ((m_axi_gmem_AWREADY == 1'b0) & (select_ln37_2_reg_1580_pp0_iter11_reg == 1'd0)));
end

always @ (*) begin
    ap_block_state13_pp0_stage0_iter12 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_io = (((select_ln37_2_reg_1580_pp0_iter12_reg == 1'd1) & (m_axi_gmem_WREADY == 1'b0)) | ((select_ln37_2_reg_1580_pp0_iter12_reg == 1'd0) & (m_axi_gmem_WREADY == 1'b0)));
end

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter18 = (((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((select_ln37_2_reg_1580_pp0_iter17_reg == 1'd0) & (m_axi_gmem_BVALID == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((ap_predicate_op177_readreq_state6 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op177_readreq_state6 = ((or_ln43_5_reg_1626 == 1'd1) & (1'd1 == and_ln41_5_reg_1609) & (1'd1 == and_ln45_reg_1640) & (or_ln45_reg_1631 == 1'd1) & (icmp_ln37_reg_1500_pp0_iter4_reg == 1'd0));
end

assign cmp26294_fu_533_p2 = ((qk_fu_174 == 2'd0) ? 1'b1 : 1'b0);

assign cmp26_mid1_fu_527_p2 = ((add_ln37_1_fu_500_p2 == 2'd0) ? 1'b1 : 1'b0);

assign empty_fu_490_p0 = empty_fu_490_p00;

assign empty_fu_490_p00 = qk_fu_174;

assign empty_fu_490_p1 = 14'd3920;

assign grp_fu_1338_p0 = grp_fu_1338_p00;

assign grp_fu_1338_p00 = b_fu_166;

assign grp_fu_1338_p1 = 15'd7840;

assign grp_fu_1338_p2 = grp_fu_1338_p20;

assign grp_fu_1338_p20 = empty_fu_490_p2;

assign grp_fu_1347_p0 = grp_fu_1347_p00;

assign grp_fu_1347_p00 = add_ln39_fu_405_p2;

assign grp_fu_1347_p1 = 15'd7840;

assign grp_fu_1347_p2 = grp_fu_1347_p20;

assign grp_fu_1347_p20 = select_ln37_1_fu_516_p3;

assign grp_fu_1356_p0 = grp_fu_1356_p00;

assign grp_fu_1356_p00 = c_fu_158;

assign grp_fu_1356_p1 = 13'd980;

assign grp_fu_1366_p0 = grp_fu_1366_p00;

assign grp_fu_1366_p00 = add_ln41_fu_937_p2;

assign grp_fu_1366_p1 = 13'd980;

assign grp_fu_1366_p2 = ((and_ln37_3_reg_1535_pp0_iter8_reg[0:0] == 1'b1) ? mul_ln41_1_fu_1014_p2 : select_ln37_3_fu_1004_p3);

assign grp_fu_1376_p0 = grp_fu_1376_p00;

assign grp_fu_1376_p00 = dh_fu_150;

assign grp_fu_1376_p1 = 11'd49;

assign grp_fu_1385_p0 = grp_fu_1385_p00;

assign grp_fu_1385_p00 = add_ln43_fu_973_p2;

assign grp_fu_1385_p1 = 11'd49;

assign icmp_ln37_fu_355_p2 = ((indvar_flatten263_fu_178 == 15'd31360) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_373_p2 = ((indvar_flatten162_fu_170 == 15'd15680) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_393_p2 = ((indvar_flatten82_fu_162 == 13'd3920) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_612_p2 = ((indvar_flatten30_fu_154 == 11'd980) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_601_p2 = ((indvar_flatten_fu_146 == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_590_p2 = ((w_fu_138 == 3'd7) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = sext_ln41_fu_907_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd3920;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = gmem_addr85_read_reg_1734;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln41_1_fu_1014_p0 = mul_ln41_1_fu_1014_p00;

assign mul_ln41_1_fu_1014_p00 = add_ln39_reg_1549_pp0_iter8_reg;

assign mul_ln41_1_fu_1014_p1 = 14'd3920;

assign mul_ln41_fu_998_p0 = mul_ln41_fu_998_p00;

assign mul_ln41_fu_998_p00 = b_2_reg_1490_pp0_iter8_reg;

assign mul_ln41_fu_998_p1 = 14'd3920;

assign or_ln37_1_fu_572_p2 = (icmp_ln39_reg_1504_pp0_iter3_reg | ap_phi_mux_first_iter_02_phi_fu_259_p4);

assign or_ln37_2_fu_577_p2 = (icmp_ln39_reg_1504_pp0_iter3_reg | ap_phi_mux_first_iter_03_phi_fu_270_p4);

assign or_ln37_3_fu_582_p2 = (icmp_ln39_reg_1504_pp0_iter3_reg | ap_phi_mux_first_iter_04_phi_fu_282_p4);

assign or_ln37_fu_567_p2 = (icmp_ln39_reg_1504_pp0_iter3_reg | ap_phi_mux_first_iter_0_phi_fu_248_p4);

assign or_ln41_1_fu_411_p2 = (icmp_ln39_fu_373_p2 | and_ln37_3_fu_399_p2);

assign or_ln41_2_fu_628_p2 = (or_ln37_1_fu_572_p2 | and_ln37_3_reg_1535_pp0_iter3_reg);

assign or_ln41_3_fu_633_p2 = (or_ln37_2_fu_577_p2 | and_ln37_3_reg_1535_pp0_iter3_reg);

assign or_ln41_4_fu_638_p2 = (or_ln37_3_fu_582_p2 | and_ln37_3_reg_1535_pp0_iter3_reg);

assign or_ln41_5_fu_687_p2 = (xor_ln41_fu_682_p2 | icmp_ln39_reg_1504_pp0_iter3_reg);

assign or_ln41_6_fu_710_p2 = (and_ln41_2_fu_704_p2 | and_ln37_3_reg_1535_pp0_iter3_reg);

assign or_ln41_7_fu_715_p2 = (or_ln41_6_fu_710_p2 | icmp_ln39_reg_1504_pp0_iter3_reg);

assign or_ln41_8_fu_720_p2 = (or_ln41_3_fu_633_p2 | and_ln41_2_fu_704_p2);

assign or_ln41_9_fu_726_p2 = (or_ln41_4_fu_638_p2 | and_ln41_2_fu_704_p2);

assign or_ln41_fu_623_p2 = (or_ln37_fu_567_p2 | and_ln37_3_reg_1535_pp0_iter3_reg);

assign or_ln43_1_fu_762_p2 = (and_ln41_4_fu_744_p2 | and_ln41_2_fu_704_p2);

assign or_ln43_2_fu_773_p2 = (or_ln41_9_fu_726_p2 | and_ln41_4_fu_744_p2);

assign or_ln43_3_fu_768_p2 = (or_ln43_1_fu_762_p2 | or_ln41_1_reg_1554_pp0_iter3_reg);

assign or_ln43_4_fu_785_p2 = (xor_ln43_fu_779_p2 | and_ln41_2_fu_704_p2);

assign or_ln43_5_fu_803_p2 = (and_ln43_1_fu_797_p2 | and_ln41_2_fu_704_p2);

assign or_ln43_fu_756_p2 = (or_ln41_8_fu_720_p2 | and_ln41_4_fu_744_p2);

assign or_ln45_1_fu_815_p2 = (and_ln43_fu_791_p2 | and_ln41_4_fu_744_p2);

assign or_ln45_2_fu_821_p2 = (or_ln45_1_fu_815_p2 | or_ln41_6_fu_710_p2);

assign or_ln45_3_fu_827_p2 = (or_ln45_2_fu_821_p2 | icmp_ln39_reg_1504_pp0_iter3_reg);

assign or_ln45_fu_809_p2 = (or_ln43_2_fu_773_p2 | and_ln43_fu_791_p2);

assign p_cast3_mid1_fu_587_p1 = p_mid1183_reg_1570;

assign p_mid1183_fu_510_p0 = p_mid1183_fu_510_p00;

assign p_mid1183_fu_510_p00 = add_ln37_1_fu_500_p2;

assign p_mid1183_fu_510_p1 = 14'd3920;

assign p_shl_cast_fu_1103_p1 = p_shl_fu_1095_p3;

assign p_shl_cast_mid1_fu_1176_p1 = p_shl_mid1_fu_1168_p3;

assign p_shl_fu_1095_p3 = {{h_fu_142}, {3'd0}};

assign p_shl_mid1_fu_1168_p3 = {{add_ln45_fu_1158_p2}, {3'd0}};

assign select_ln37_1_fu_516_p3 = ((icmp_ln39_reg_1504_pp0_iter2_reg[0:0] == 1'b1) ? p_mid1183_fu_510_p2 : empty_fu_490_p2);

assign select_ln37_2_fu_539_p3 = ((icmp_ln39_reg_1504_pp0_iter2_reg[0:0] == 1'b1) ? cmp26_mid1_fu_527_p2 : cmp26294_fu_533_p2);

assign select_ln37_3_fu_1004_p3 = ((icmp_ln39_reg_1504_pp0_iter8_reg[0:0] == 1'b1) ? 14'd0 : mul_ln41_fu_998_p2);

assign select_ln37_4_fu_1035_p3 = ((icmp_ln39_reg_1504_pp0_iter9_reg[0:0] == 1'b1) ? 14'd0 : grp_fu_1356_p3);

assign select_ln37_5_fu_1113_p3 = ((icmp_ln39_reg_1504_pp0_iter10_reg[0:0] == 1'b1) ? 14'd0 : grp_fu_1376_p3);

assign select_ln37_6_fu_1041_p3 = ((icmp_ln39_reg_1504_pp0_iter9_reg[0:0] == 1'b1) ? 14'd0 : add_ln50_2_fu_1030_p2);

assign select_ln37_7_fu_546_p3 = ((icmp_ln39_reg_1504_pp0_iter2_reg[0:0] == 1'b1) ? add_ln37_1_fu_500_p2 : qk_fu_174);

assign select_ln37_8_fu_643_p3 = ((icmp_ln39_reg_1504_pp0_iter3_reg[0:0] == 1'b1) ? p_cast3_mid1_fu_587_p1 : grp_fu_1338_p3);

assign select_ln37_fu_379_p3 = ((icmp_ln39_fu_373_p2[0:0] == 1'b1) ? 3'd0 : b_fu_166);

assign select_ln39_1_fu_455_p3 = ((icmp_ln39_fu_373_p2[0:0] == 1'b1) ? 15'd1 : add_ln39_1_fu_449_p2);

assign select_ln39_fu_421_p3 = ((and_ln37_3_fu_399_p2[0:0] == 1'b1) ? add_ln39_fu_405_p2 : select_ln37_fu_379_p3);

assign select_ln41_10_fu_947_p3 = ((and_ln41_2_reg_1589_pp0_iter6_reg[0:0] == 1'b1) ? add_ln41_fu_937_p2 : select_ln41_fu_930_p3);

assign select_ln41_11_fu_441_p3 = ((or_ln41_1_fu_411_p2[0:0] == 1'b1) ? 13'd1 : add_ln41_2_fu_435_p2);

assign select_ln41_2_fu_649_p3 = ((and_ln37_3_reg_1535_pp0_iter3_reg[0:0] == 1'b1) ? grp_fu_1347_p3 : select_ln37_8_fu_643_p3);

assign select_ln41_3_fu_1048_p3 = ((and_ln37_3_reg_1535_pp0_iter9_reg[0:0] == 1'b1) ? mul_ln41_1_reg_1690 : select_ln37_4_fu_1035_p3);

assign select_ln41_4_fu_1119_p3 = ((and_ln37_3_reg_1535_pp0_iter10_reg[0:0] == 1'b1) ? mul_ln41_1_reg_1690_pp0_iter10_reg : select_ln37_5_fu_1113_p3);

assign select_ln41_5_fu_1054_p3 = ((and_ln37_3_reg_1535_pp0_iter9_reg[0:0] == 1'b1) ? mul_ln41_1_reg_1690 : select_ln37_6_fu_1041_p3);

assign select_ln41_6_fu_966_p3 = ((or_ln41_7_reg_1597_pp0_iter7_reg[0:0] == 1'b1) ? 5'd0 : dh_fu_150);

assign select_ln41_7_fu_1060_p3 = ((and_ln41_2_reg_1589_pp0_iter9_reg[0:0] == 1'b1) ? grp_fu_1366_p3 : select_ln41_3_fu_1048_p3);

assign select_ln41_8_fu_1125_p3 = ((and_ln41_2_reg_1589_pp0_iter10_reg[0:0] == 1'b1) ? add_ln50_6_reg_1707 : select_ln41_4_fu_1119_p3);

assign select_ln41_9_fu_1066_p3 = ((and_ln41_2_reg_1589_pp0_iter9_reg[0:0] == 1'b1) ? grp_fu_1366_p3 : select_ln41_5_fu_1054_p3);

assign select_ln41_fu_930_p3 = ((or_ln41_1_reg_1554_pp0_iter6_reg[0:0] == 1'b1) ? 3'd0 : c_fu_158);

assign select_ln43_1_fu_1138_p3 = ((and_ln41_4_reg_1602_pp0_iter10_reg[0:0] == 1'b1) ? grp_fu_1385_p3 : select_ln41_8_fu_1125_p3);

assign select_ln43_2_fu_1081_p3 = ((and_ln41_4_reg_1602_pp0_iter9_reg[0:0] == 1'b1) ? add_ln50_7_fu_1075_p2 : select_ln41_9_fu_1066_p3);

assign select_ln43_3_fu_1151_p3 = ((or_ln43_3_reg_1614_pp0_iter10_reg[0:0] == 1'b1) ? 7'd0 : sub_ln50_fu_1107_p2);

assign select_ln43_4_fu_983_p3 = ((and_ln41_4_reg_1602_pp0_iter7_reg[0:0] == 1'b1) ? add_ln43_fu_973_p2 : select_ln41_6_fu_966_p3);

assign select_ln43_5_fu_884_p3 = ((or_ln41_7_fu_715_p2[0:0] == 1'b1) ? 11'd1 : add_ln43_1_fu_878_p2);

assign select_ln43_fu_1131_p3 = ((or_ln43_3_reg_1614_pp0_iter10_reg[0:0] == 1'b1) ? 3'd0 : h_fu_142);

assign select_ln45_1_fu_1186_p3 = ((and_ln43_reg_1620_pp0_iter10_reg[0:0] == 1'b1) ? sub_ln50_1_fu_1180_p2 : select_ln43_3_fu_1151_p3);

assign select_ln45_2_fu_1193_p3 = ((and_ln43_reg_1620_pp0_iter10_reg[0:0] == 1'b1) ? add_ln45_fu_1158_p2 : select_ln43_fu_1131_p3);

assign select_ln45_3_fu_870_p3 = ((or_ln43_3_fu_768_p2[0:0] == 1'b1) ? 6'd1 : add_ln45_1_fu_864_p2);

assign select_ln45_fu_832_p3 = ((or_ln45_3_fu_827_p2[0:0] == 1'b1) ? 3'd0 : w_fu_138);

assign sext_ln41_fu_907_p1 = $signed(sext_ln41_mid2_v_reg_1584);

assign sext_ln41_mid2_v_v_v_v_v_fu_655_p3 = {{select_ln41_2_fu_649_p3}, {2'd0}};

assign sext_ln50_1_fu_1276_p1 = $signed(shl_ln50_1_fu_1268_p3);

assign sext_ln50_2_fu_1286_p1 = $signed(add_ln50_5_fu_1280_p2);

assign sext_ln50_3_fu_1304_p1 = $signed(tmp_fu_1296_p3);

assign sext_ln50_fu_1264_p1 = $signed(shl_ln_fu_1256_p3);

assign sext_ln51_fu_1323_p1 = $signed(trunc_ln_fu_1313_p4);

assign sext_ln57_1_fu_1227_p1 = $signed(tmp_s_fu_1219_p3);

assign sext_ln57_fu_1209_p1 = add_ln50_fu_1203_p2;

assign sext_ln58_fu_1246_p1 = $signed(trunc_ln6_fu_1236_p4);

assign shl_ln50_1_fu_1268_p3 = {{add_ln50_fu_1203_p2}, {4'd0}};

assign shl_ln_fu_1256_p3 = {{add_ln50_fu_1203_p2}, {2'd0}};

assign sub_ln50_1_fu_1180_p2 = (p_shl_cast_mid1_fu_1176_p1 - zext_ln45_1_fu_1164_p1);

assign sub_ln50_fu_1107_p2 = (p_shl_cast_fu_1103_p1 - zext_ln45_fu_1091_p1);

assign tmp_fu_1296_p3 = {{add_ln50_4_fu_1290_p2}, {2'd0}};

assign tmp_s_fu_1219_p3 = {{add_ln57_fu_1213_p2}, {2'd0}};

assign trunc_ln50_3_cast_fu_1027_p1 = dh_1_reg_1665_pp0_iter9_reg;

assign trunc_ln50_3_cast_mid1_fu_1072_p1 = add_ln43_reg_1675_pp0_iter9_reg;

assign trunc_ln6_fu_1236_p4 = {{add_ln57_1_fu_1231_p2[63:2]}};

assign trunc_ln_fu_1313_p4 = {{add_ln50_3_fu_1308_p2[63:2]}};

assign xor_ln37_fu_387_p2 = (icmp_ln39_fu_373_p2 ^ 1'd1);

assign xor_ln41_1_fu_732_p2 = (1'd1 ^ and_ln41_2_fu_704_p2);

assign xor_ln41_fu_682_p2 = (icmp_ln41_reg_1530_pp0_iter3_reg ^ 1'd1);

assign xor_ln43_fu_779_p2 = (1'd1 ^ and_ln41_1_fu_698_p2);

assign xor_ln45_fu_840_p2 = (1'd1 ^ and_ln43_fu_791_p2);

assign zext_ln41_3_fu_663_p1 = sext_ln41_mid2_v_v_v_v_v_fu_655_p3;

assign zext_ln43_2_fu_1148_p1 = select_ln43_2_reg_1717;

assign zext_ln45_1_fu_1164_p1 = add_ln45_fu_1158_p2;

assign zext_ln45_fu_1091_p1 = h_fu_142;

assign zext_ln50_1_fu_1200_p1 = select_ln45_reg_1635_pp0_iter10_reg;

assign zext_ln50_3_fu_1144_p1 = select_ln43_1_fu_1138_p3;

endmodule //kernel_attention_get_qk
