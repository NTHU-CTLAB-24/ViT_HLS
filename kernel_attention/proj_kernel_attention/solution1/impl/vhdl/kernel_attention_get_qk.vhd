-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_attention_get_qk is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_qk : IN STD_LOGIC_VECTOR (63 downto 0);
    in_q : IN STD_LOGIC_VECTOR (63 downto 0);
    in_k : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of kernel_attention_get_qk is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_F50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000111101010000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_7A80 : STD_LOGIC_VECTOR (14 downto 0) := "111101010000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv15_3D40 : STD_LOGIC_VECTOR (14 downto 0) := "011110101000000";
    constant ap_const_lv13_F50 : STD_LOGIC_VECTOR (12 downto 0) := "0111101010000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv14_F50 : STD_LOGIC_VECTOR (13 downto 0) := "00111101010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv11_3D4 : STD_LOGIC_VECTOR (10 downto 0) := "01111010100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv15_1EA0 : STD_LOGIC_VECTOR (14 downto 0) := "001111010100000";
    constant ap_const_lv13_3D4 : STD_LOGIC_VECTOR (12 downto 0) := "0001111010100";
    constant ap_const_lv11_31 : STD_LOGIC_VECTOR (10 downto 0) := "00000110001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal icmp_ln37_reg_1500 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_reg_1631 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln45_reg_1640 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_5_reg_1626 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_5_reg_1609 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op177_readreq_state6 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal select_ln37_2_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal select_ln37_2_reg_1580_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal select_ln37_2_reg_1580_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln37_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal gmem_blk_n_B : STD_LOGIC;
    signal first_iter_0_reg_244 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_02_reg_255 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_03_reg_266 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_04_reg_277 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal b_2_reg_1490 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal b_2_reg_1490_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_1500_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1504_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_reg_1523 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_reg_1523_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_reg_1523_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1530_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1530_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_3_reg_1535_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln39_fu_405_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln39_reg_1549_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln41_1_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_reg_1554 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_reg_1554_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_reg_1554_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_reg_1554_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_reg_1554_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_reg_1554_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid1183_fu_510_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_mid1183_reg_1570 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln37_2_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_reg_1580_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln41_mid2_v_reg_1584 : STD_LOGIC_VECTOR (61 downto 0);
    signal and_ln41_2_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_2_reg_1589_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_7_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_7_reg_1597 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_7_reg_1597_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_7_reg_1597_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_7_reg_1597_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_4_reg_1602_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_5_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_3_reg_1614_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_1620_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_5_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln45_fu_832_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_reg_1635_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln45_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dh_1_reg_1665 : STD_LOGIC_VECTOR (4 downto 0);
    signal dh_1_reg_1665_pp0_iter9_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln43_fu_973_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln43_reg_1675 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln43_reg_1675_pp0_iter9_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln41_fu_998_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln41_1_fu_1014_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln41_1_reg_1690 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln41_1_reg_1690_pp0_iter10_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1356_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1366_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln50_6_reg_1707 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln41_7_fu_1060_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln43_2_fu_1081_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln43_2_reg_1717 : STD_LOGIC_VECTOR (13 downto 0);
    signal gmem_addr_20_reg_1722 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_19_reg_1728 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr85_read_reg_1734 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_exit_pp0_iter11_stage0 : STD_LOGIC;
    signal ap_phi_mux_first_iter_0_phi_fu_248_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_phi_mux_first_iter_02_phi_fu_259_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_first_iter_03_phi_fu_270_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_first_iter_04_phi_fu_282_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln41_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln58_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln51_fu_1323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal w_fu_138 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln47_fu_858_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_fu_142 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln45_2_fu_1193_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_fu_146 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln45_3_fu_870_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal dh_fu_150 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln43_4_fu_983_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten30_fu_154 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln43_5_fu_884_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_fu_158 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln41_10_fu_947_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten82_fu_162 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln41_11_fu_441_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal b_fu_166 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln39_fu_421_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten162_fu_170 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln39_1_fu_455_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal qk_fu_174 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln37_7_fu_546_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten263_fu_178 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln37_fu_361_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln37_fu_379_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln41_2_fu_435_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln39_1_fu_449_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_fu_490_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_fu_490_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_fu_490_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln37_1_fu_500_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_mid1183_fu_510_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_mid1183_fu_510_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln37_1_fu_516_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal cmp26_mid1_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp26294_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_1_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_2_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_3_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cast3_mid1_fu_587_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1338_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1347_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln37_8_fu_643_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln41_2_fu_649_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln41_mid2_v_v_v_v_v_fu_655_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln41_3_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln41_1_fu_667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln41_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_5_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_1_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_2_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_6_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_3_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_4_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln41_1_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_1_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_8_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_1_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_9_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln43_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_3_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_4_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_2_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_1_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_2_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_1_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_2_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_3_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln45_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln45_1_fu_864_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln43_1_fu_878_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln41_fu_930_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln41_fu_937_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln41_6_fu_966_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln41_fu_998_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln41_fu_998_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln41_1_fu_1014_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln41_1_fu_1014_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln37_3_fu_1004_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln50_3_cast_fu_1027_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln50_2_fu_1030_p2 : STD_LOGIC_VECTOR (13 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln50_2_fu_1030_p2 : signal is "no";
    signal select_ln37_4_fu_1035_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln37_6_fu_1041_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln41_3_fu_1048_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln41_5_fu_1054_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln50_3_cast_mid1_fu_1072_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln50_7_fu_1075_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln41_9_fu_1066_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_fu_1095_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_1103_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln45_fu_1091_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1376_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln37_5_fu_1113_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln41_4_fu_1119_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1385_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln41_8_fu_1125_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln43_1_fu_1138_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln50_fu_1107_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln43_fu_1131_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln45_fu_1158_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_mid1_fu_1168_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid1_fu_1176_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln45_1_fu_1164_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln50_1_fu_1180_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln43_3_fu_1151_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln50_1_fu_1200_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln45_1_fu_1186_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_fu_1203_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln57_fu_1209_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln50_3_fu_1144_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln57_fu_1213_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_s_fu_1219_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln57_1_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln57_1_fu_1231_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln6_fu_1236_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln_fu_1256_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln50_1_fu_1268_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln50_fu_1264_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln50_1_fu_1276_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln50_5_fu_1280_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln50_2_fu_1286_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln43_2_fu_1148_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln50_4_fu_1290_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_1296_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln50_3_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln50_3_fu_1308_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_1313_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1338_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1338_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1338_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1347_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1347_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1347_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1356_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1356_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1366_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1366_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1366_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1376_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1376_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1385_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1385_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1338_ce : STD_LOGIC;
    signal grp_fu_1347_ce : STD_LOGIC;
    signal grp_fu_1356_ce : STD_LOGIC;
    signal grp_fu_1366_ce : STD_LOGIC;
    signal grp_fu_1376_ce : STD_LOGIC;
    signal grp_fu_1385_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal empty_fu_490_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1338_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1338_p20 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1347_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1347_p20 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1356_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1366_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1376_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1385_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln41_1_fu_1014_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln41_fu_998_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_mid1183_fu_510_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_attention_mul_2ns_13ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component kernel_attention_mul_3ns_13ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component kernel_attention_mac_muladd_3ns_13ns_14ns_15_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component kernel_attention_mac_muladd_3ns_10ns_14ns_14_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component kernel_attention_mac_muladd_5ns_6ns_14ns_14_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component kernel_attention_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_2ns_13ns_14_1_1_U80 : component kernel_attention_mul_2ns_13ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => empty_fu_490_p0,
        din1 => empty_fu_490_p1,
        dout => empty_fu_490_p2);

    mul_2ns_13ns_14_1_1_U81 : component kernel_attention_mul_2ns_13ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => p_mid1183_fu_510_p0,
        din1 => p_mid1183_fu_510_p1,
        dout => p_mid1183_fu_510_p2);

    mul_3ns_13ns_14_1_1_U82 : component kernel_attention_mul_3ns_13ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln41_fu_998_p0,
        din1 => mul_ln41_fu_998_p1,
        dout => mul_ln41_fu_998_p2);

    mul_3ns_13ns_14_1_1_U83 : component kernel_attention_mul_3ns_13ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln41_1_fu_1014_p0,
        din1 => mul_ln41_1_fu_1014_p1,
        dout => mul_ln41_1_fu_1014_p2);

    mac_muladd_3ns_13ns_14ns_15_4_1_U84 : component kernel_attention_mac_muladd_3ns_13ns_14ns_15_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 13,
        din2_WIDTH => 14,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1338_p0,
        din1 => grp_fu_1338_p1,
        din2 => grp_fu_1338_p2,
        ce => grp_fu_1338_ce,
        dout => grp_fu_1338_p3);

    mac_muladd_3ns_13ns_14ns_15_4_1_U85 : component kernel_attention_mac_muladd_3ns_13ns_14ns_15_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 13,
        din2_WIDTH => 14,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1347_p0,
        din1 => grp_fu_1347_p1,
        din2 => grp_fu_1347_p2,
        ce => grp_fu_1347_ce,
        dout => grp_fu_1347_p3);

    mac_muladd_3ns_10ns_14ns_14_4_1_U86 : component kernel_attention_mac_muladd_3ns_10ns_14ns_14_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 10,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1356_p0,
        din1 => grp_fu_1356_p1,
        din2 => mul_ln41_fu_998_p2,
        ce => grp_fu_1356_ce,
        dout => grp_fu_1356_p3);

    mac_muladd_3ns_10ns_14ns_14_4_1_U87 : component kernel_attention_mac_muladd_3ns_10ns_14ns_14_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 10,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1366_p0,
        din1 => grp_fu_1366_p1,
        din2 => grp_fu_1366_p2,
        ce => grp_fu_1366_ce,
        dout => grp_fu_1366_p3);

    mac_muladd_5ns_6ns_14ns_14_4_1_U88 : component kernel_attention_mac_muladd_5ns_6ns_14ns_14_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1376_p0,
        din1 => grp_fu_1376_p1,
        din2 => grp_fu_1356_p3,
        ce => grp_fu_1376_ce,
        dout => grp_fu_1376_p3);

    mac_muladd_5ns_6ns_14ns_14_4_1_U89 : component kernel_attention_mac_muladd_5ns_6ns_14ns_14_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1385_p0,
        din1 => grp_fu_1385_p1,
        din2 => select_ln41_7_fu_1060_p3,
        ce => grp_fu_1385_ce,
        dout => grp_fu_1385_p3);

    flow_control_loop_pipe_sequential_init_U : component kernel_attention_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter17_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter11_stage0)) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    b_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    b_fu_166 <= ap_const_lv3_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln37_fu_355_p2 = ap_const_lv1_0))) then 
                    b_fu_166 <= select_ln39_fu_421_p3;
                end if;
            end if; 
        end if;
    end process;

    c_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    c_fu_158 <= ap_const_lv3_0;
                elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln37_reg_1500_pp0_iter6_reg = ap_const_lv1_0))) then 
                    c_fu_158 <= select_ln41_10_fu_947_p3;
                end if;
            end if; 
        end if;
    end process;

    dh_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    dh_fu_150 <= ap_const_lv5_0;
                elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln37_reg_1500_pp0_iter7_reg = ap_const_lv1_0))) then 
                    dh_fu_150 <= select_ln43_4_fu_983_p3;
                end if;
            end if; 
        end if;
    end process;

    first_iter_02_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
                first_iter_02_reg_255 <= or_ln43_5_reg_1626;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                first_iter_02_reg_255 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    first_iter_03_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
                first_iter_03_reg_266 <= and_ln45_reg_1640;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                first_iter_03_reg_266 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    first_iter_04_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
                first_iter_04_reg_277 <= ap_const_lv1_0;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                first_iter_04_reg_277 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    first_iter_0_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
                first_iter_0_reg_244 <= and_ln41_5_reg_1609;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                first_iter_0_reg_244 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    h_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    h_fu_142 <= ap_const_lv3_0;
                elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln37_reg_1500_pp0_iter10_reg = ap_const_lv1_0))) then 
                    h_fu_142 <= select_ln45_2_fu_1193_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten162_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten162_fu_170 <= ap_const_lv15_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln37_fu_355_p2 = ap_const_lv1_0))) then 
                    indvar_flatten162_fu_170 <= select_ln39_1_fu_455_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten263_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten263_fu_178 <= ap_const_lv15_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln37_fu_355_p2 = ap_const_lv1_0))) then 
                    indvar_flatten263_fu_178 <= add_ln37_fu_361_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten30_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    indvar_flatten30_fu_154 <= ap_const_lv11_0;
                elsif (((icmp_ln37_reg_1500_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    indvar_flatten30_fu_154 <= select_ln43_5_fu_884_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten82_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten82_fu_162 <= ap_const_lv13_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln37_fu_355_p2 = ap_const_lv1_0))) then 
                    indvar_flatten82_fu_162 <= select_ln41_11_fu_441_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    indvar_flatten_fu_146 <= ap_const_lv6_0;
                elsif (((icmp_ln37_reg_1500_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    indvar_flatten_fu_146 <= select_ln45_3_fu_870_p3;
                end if;
            end if; 
        end if;
    end process;

    qk_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    qk_fu_174 <= ap_const_lv2_0;
                elsif (((icmp_ln37_reg_1500_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    qk_fu_174 <= select_ln37_7_fu_546_p3;
                end if;
            end if; 
        end if;
    end process;

    w_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    w_fu_138 <= ap_const_lv3_0;
                elsif (((icmp_ln37_reg_1500_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    w_fu_138 <= add_ln47_fu_858_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_355_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln39_reg_1549 <= add_ln39_fu_405_p2;
                and_ln37_3_reg_1535 <= and_ln37_3_fu_399_p2;
                icmp_ln39_reg_1504 <= icmp_ln39_fu_373_p2;
                icmp_ln41_reg_1530 <= icmp_ln41_fu_393_p2;
                or_ln41_1_reg_1554 <= or_ln41_1_fu_411_p2;
                xor_ln37_reg_1523 <= xor_ln37_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln39_reg_1549_pp0_iter2_reg <= add_ln39_reg_1549;
                add_ln39_reg_1549_pp0_iter3_reg <= add_ln39_reg_1549_pp0_iter2_reg;
                add_ln39_reg_1549_pp0_iter4_reg <= add_ln39_reg_1549_pp0_iter3_reg;
                add_ln39_reg_1549_pp0_iter5_reg <= add_ln39_reg_1549_pp0_iter4_reg;
                add_ln39_reg_1549_pp0_iter6_reg <= add_ln39_reg_1549_pp0_iter5_reg;
                add_ln39_reg_1549_pp0_iter7_reg <= add_ln39_reg_1549_pp0_iter6_reg;
                add_ln39_reg_1549_pp0_iter8_reg <= add_ln39_reg_1549_pp0_iter7_reg;
                add_ln43_reg_1675_pp0_iter9_reg <= add_ln43_reg_1675;
                and_ln37_3_reg_1535_pp0_iter10_reg <= and_ln37_3_reg_1535_pp0_iter9_reg;
                and_ln37_3_reg_1535_pp0_iter2_reg <= and_ln37_3_reg_1535;
                and_ln37_3_reg_1535_pp0_iter3_reg <= and_ln37_3_reg_1535_pp0_iter2_reg;
                and_ln37_3_reg_1535_pp0_iter4_reg <= and_ln37_3_reg_1535_pp0_iter3_reg;
                and_ln37_3_reg_1535_pp0_iter5_reg <= and_ln37_3_reg_1535_pp0_iter4_reg;
                and_ln37_3_reg_1535_pp0_iter6_reg <= and_ln37_3_reg_1535_pp0_iter5_reg;
                and_ln37_3_reg_1535_pp0_iter7_reg <= and_ln37_3_reg_1535_pp0_iter6_reg;
                and_ln37_3_reg_1535_pp0_iter8_reg <= and_ln37_3_reg_1535_pp0_iter7_reg;
                and_ln37_3_reg_1535_pp0_iter9_reg <= and_ln37_3_reg_1535_pp0_iter8_reg;
                and_ln41_2_reg_1589_pp0_iter10_reg <= and_ln41_2_reg_1589_pp0_iter9_reg;
                and_ln41_2_reg_1589_pp0_iter5_reg <= and_ln41_2_reg_1589;
                and_ln41_2_reg_1589_pp0_iter6_reg <= and_ln41_2_reg_1589_pp0_iter5_reg;
                and_ln41_2_reg_1589_pp0_iter7_reg <= and_ln41_2_reg_1589_pp0_iter6_reg;
                and_ln41_2_reg_1589_pp0_iter8_reg <= and_ln41_2_reg_1589_pp0_iter7_reg;
                and_ln41_2_reg_1589_pp0_iter9_reg <= and_ln41_2_reg_1589_pp0_iter8_reg;
                and_ln41_4_reg_1602_pp0_iter10_reg <= and_ln41_4_reg_1602_pp0_iter9_reg;
                and_ln41_4_reg_1602_pp0_iter5_reg <= and_ln41_4_reg_1602;
                and_ln41_4_reg_1602_pp0_iter6_reg <= and_ln41_4_reg_1602_pp0_iter5_reg;
                and_ln41_4_reg_1602_pp0_iter7_reg <= and_ln41_4_reg_1602_pp0_iter6_reg;
                and_ln41_4_reg_1602_pp0_iter8_reg <= and_ln41_4_reg_1602_pp0_iter7_reg;
                and_ln41_4_reg_1602_pp0_iter9_reg <= and_ln41_4_reg_1602_pp0_iter8_reg;
                and_ln43_reg_1620_pp0_iter10_reg <= and_ln43_reg_1620_pp0_iter9_reg;
                and_ln43_reg_1620_pp0_iter5_reg <= and_ln43_reg_1620;
                and_ln43_reg_1620_pp0_iter6_reg <= and_ln43_reg_1620_pp0_iter5_reg;
                and_ln43_reg_1620_pp0_iter7_reg <= and_ln43_reg_1620_pp0_iter6_reg;
                and_ln43_reg_1620_pp0_iter8_reg <= and_ln43_reg_1620_pp0_iter7_reg;
                and_ln43_reg_1620_pp0_iter9_reg <= and_ln43_reg_1620_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                b_2_reg_1490_pp0_iter2_reg <= b_2_reg_1490;
                b_2_reg_1490_pp0_iter3_reg <= b_2_reg_1490_pp0_iter2_reg;
                b_2_reg_1490_pp0_iter4_reg <= b_2_reg_1490_pp0_iter3_reg;
                b_2_reg_1490_pp0_iter5_reg <= b_2_reg_1490_pp0_iter4_reg;
                b_2_reg_1490_pp0_iter6_reg <= b_2_reg_1490_pp0_iter5_reg;
                b_2_reg_1490_pp0_iter7_reg <= b_2_reg_1490_pp0_iter6_reg;
                b_2_reg_1490_pp0_iter8_reg <= b_2_reg_1490_pp0_iter7_reg;
                dh_1_reg_1665 <= dh_fu_150;
                dh_1_reg_1665_pp0_iter9_reg <= dh_1_reg_1665;
                gmem_addr85_read_reg_1734 <= m_axi_gmem_RDATA;
                icmp_ln37_reg_1500_pp0_iter10_reg <= icmp_ln37_reg_1500_pp0_iter9_reg;
                icmp_ln37_reg_1500_pp0_iter2_reg <= icmp_ln37_reg_1500;
                icmp_ln37_reg_1500_pp0_iter3_reg <= icmp_ln37_reg_1500_pp0_iter2_reg;
                icmp_ln37_reg_1500_pp0_iter4_reg <= icmp_ln37_reg_1500_pp0_iter3_reg;
                icmp_ln37_reg_1500_pp0_iter5_reg <= icmp_ln37_reg_1500_pp0_iter4_reg;
                icmp_ln37_reg_1500_pp0_iter6_reg <= icmp_ln37_reg_1500_pp0_iter5_reg;
                icmp_ln37_reg_1500_pp0_iter7_reg <= icmp_ln37_reg_1500_pp0_iter6_reg;
                icmp_ln37_reg_1500_pp0_iter8_reg <= icmp_ln37_reg_1500_pp0_iter7_reg;
                icmp_ln37_reg_1500_pp0_iter9_reg <= icmp_ln37_reg_1500_pp0_iter8_reg;
                icmp_ln39_reg_1504_pp0_iter10_reg <= icmp_ln39_reg_1504_pp0_iter9_reg;
                icmp_ln39_reg_1504_pp0_iter2_reg <= icmp_ln39_reg_1504;
                icmp_ln39_reg_1504_pp0_iter3_reg <= icmp_ln39_reg_1504_pp0_iter2_reg;
                icmp_ln39_reg_1504_pp0_iter4_reg <= icmp_ln39_reg_1504_pp0_iter3_reg;
                icmp_ln39_reg_1504_pp0_iter5_reg <= icmp_ln39_reg_1504_pp0_iter4_reg;
                icmp_ln39_reg_1504_pp0_iter6_reg <= icmp_ln39_reg_1504_pp0_iter5_reg;
                icmp_ln39_reg_1504_pp0_iter7_reg <= icmp_ln39_reg_1504_pp0_iter6_reg;
                icmp_ln39_reg_1504_pp0_iter8_reg <= icmp_ln39_reg_1504_pp0_iter7_reg;
                icmp_ln39_reg_1504_pp0_iter9_reg <= icmp_ln39_reg_1504_pp0_iter8_reg;
                icmp_ln41_reg_1530_pp0_iter2_reg <= icmp_ln41_reg_1530;
                icmp_ln41_reg_1530_pp0_iter3_reg <= icmp_ln41_reg_1530_pp0_iter2_reg;
                mul_ln41_1_reg_1690_pp0_iter10_reg <= mul_ln41_1_reg_1690;
                or_ln41_1_reg_1554_pp0_iter2_reg <= or_ln41_1_reg_1554;
                or_ln41_1_reg_1554_pp0_iter3_reg <= or_ln41_1_reg_1554_pp0_iter2_reg;
                or_ln41_1_reg_1554_pp0_iter4_reg <= or_ln41_1_reg_1554_pp0_iter3_reg;
                or_ln41_1_reg_1554_pp0_iter5_reg <= or_ln41_1_reg_1554_pp0_iter4_reg;
                or_ln41_1_reg_1554_pp0_iter6_reg <= or_ln41_1_reg_1554_pp0_iter5_reg;
                or_ln41_7_reg_1597_pp0_iter5_reg <= or_ln41_7_reg_1597;
                or_ln41_7_reg_1597_pp0_iter6_reg <= or_ln41_7_reg_1597_pp0_iter5_reg;
                or_ln41_7_reg_1597_pp0_iter7_reg <= or_ln41_7_reg_1597_pp0_iter6_reg;
                or_ln43_3_reg_1614_pp0_iter10_reg <= or_ln43_3_reg_1614_pp0_iter9_reg;
                or_ln43_3_reg_1614_pp0_iter5_reg <= or_ln43_3_reg_1614;
                or_ln43_3_reg_1614_pp0_iter6_reg <= or_ln43_3_reg_1614_pp0_iter5_reg;
                or_ln43_3_reg_1614_pp0_iter7_reg <= or_ln43_3_reg_1614_pp0_iter6_reg;
                or_ln43_3_reg_1614_pp0_iter8_reg <= or_ln43_3_reg_1614_pp0_iter7_reg;
                or_ln43_3_reg_1614_pp0_iter9_reg <= or_ln43_3_reg_1614_pp0_iter8_reg;
                select_ln37_2_reg_1580_pp0_iter10_reg <= select_ln37_2_reg_1580_pp0_iter9_reg;
                select_ln37_2_reg_1580_pp0_iter11_reg <= select_ln37_2_reg_1580_pp0_iter10_reg;
                select_ln37_2_reg_1580_pp0_iter12_reg <= select_ln37_2_reg_1580_pp0_iter11_reg;
                select_ln37_2_reg_1580_pp0_iter13_reg <= select_ln37_2_reg_1580_pp0_iter12_reg;
                select_ln37_2_reg_1580_pp0_iter14_reg <= select_ln37_2_reg_1580_pp0_iter13_reg;
                select_ln37_2_reg_1580_pp0_iter15_reg <= select_ln37_2_reg_1580_pp0_iter14_reg;
                select_ln37_2_reg_1580_pp0_iter16_reg <= select_ln37_2_reg_1580_pp0_iter15_reg;
                select_ln37_2_reg_1580_pp0_iter17_reg <= select_ln37_2_reg_1580_pp0_iter16_reg;
                select_ln37_2_reg_1580_pp0_iter4_reg <= select_ln37_2_reg_1580;
                select_ln37_2_reg_1580_pp0_iter5_reg <= select_ln37_2_reg_1580_pp0_iter4_reg;
                select_ln37_2_reg_1580_pp0_iter6_reg <= select_ln37_2_reg_1580_pp0_iter5_reg;
                select_ln37_2_reg_1580_pp0_iter7_reg <= select_ln37_2_reg_1580_pp0_iter6_reg;
                select_ln37_2_reg_1580_pp0_iter8_reg <= select_ln37_2_reg_1580_pp0_iter7_reg;
                select_ln37_2_reg_1580_pp0_iter9_reg <= select_ln37_2_reg_1580_pp0_iter8_reg;
                select_ln45_reg_1635_pp0_iter10_reg <= select_ln45_reg_1635_pp0_iter9_reg;
                select_ln45_reg_1635_pp0_iter5_reg <= select_ln45_reg_1635;
                select_ln45_reg_1635_pp0_iter6_reg <= select_ln45_reg_1635_pp0_iter5_reg;
                select_ln45_reg_1635_pp0_iter7_reg <= select_ln45_reg_1635_pp0_iter6_reg;
                select_ln45_reg_1635_pp0_iter8_reg <= select_ln45_reg_1635_pp0_iter7_reg;
                select_ln45_reg_1635_pp0_iter9_reg <= select_ln45_reg_1635_pp0_iter8_reg;
                xor_ln37_reg_1523_pp0_iter2_reg <= xor_ln37_reg_1523;
                xor_ln37_reg_1523_pp0_iter3_reg <= xor_ln37_reg_1523_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_reg_1500_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln43_reg_1675 <= add_ln43_fu_973_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln37_reg_1500_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln50_6_reg_1707 <= grp_fu_1366_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_reg_1500_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln41_2_reg_1589 <= and_ln41_2_fu_704_p2;
                and_ln41_4_reg_1602 <= and_ln41_4_fu_744_p2;
                and_ln43_reg_1620 <= and_ln43_fu_791_p2;
                or_ln41_7_reg_1597 <= or_ln41_7_fu_715_p2;
                or_ln43_3_reg_1614 <= or_ln43_3_fu_768_p2;
                or_ln45_reg_1631 <= or_ln45_fu_809_p2;
                select_ln45_reg_1635 <= select_ln45_fu_832_p3;
                sext_ln41_mid2_v_reg_1584 <= add_ln41_1_fu_667_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_reg_1500_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln41_5_reg_1609 <= and_ln41_5_fu_750_p2;
                and_ln45_reg_1640 <= and_ln45_fu_846_p2;
                or_ln43_5_reg_1626 <= or_ln43_5_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                b_2_reg_1490 <= b_fu_166;
                icmp_ln37_reg_1500 <= icmp_ln37_fu_355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln37_2_reg_1580_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln37_reg_1500_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_19_reg_1728 <= sext_ln51_fu_1323_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln37_2_reg_1580_pp0_iter10_reg = ap_const_lv1_0) and (icmp_ln37_reg_1500_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_20_reg_1722 <= sext_ln58_fu_1246_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_reg_1500_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln41_1_reg_1690 <= mul_ln41_1_fu_1014_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_reg_1500_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_mid1183_reg_1570 <= p_mid1183_fu_510_p2;
                select_ln37_2_reg_1580 <= select_ln37_2_fu_539_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_reg_1500_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln43_2_reg_1717 <= select_ln43_2_fu_1081_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln37_1_fu_500_p2 <= std_logic_vector(unsigned(qk_fu_174) + unsigned(ap_const_lv2_1));
    add_ln37_fu_361_p2 <= std_logic_vector(unsigned(indvar_flatten263_fu_178) + unsigned(ap_const_lv15_1));
    add_ln39_1_fu_449_p2 <= std_logic_vector(unsigned(indvar_flatten162_fu_170) + unsigned(ap_const_lv15_1));
    add_ln39_fu_405_p2 <= std_logic_vector(unsigned(select_ln37_fu_379_p3) + unsigned(ap_const_lv3_1));
    add_ln41_1_fu_667_p2 <= std_logic_vector(unsigned(zext_ln41_3_fu_663_p1) + unsigned(in_qk));
    add_ln41_2_fu_435_p2 <= std_logic_vector(unsigned(indvar_flatten82_fu_162) + unsigned(ap_const_lv13_1));
    add_ln41_fu_937_p2 <= std_logic_vector(unsigned(select_ln41_fu_930_p3) + unsigned(ap_const_lv3_1));
    add_ln43_1_fu_878_p2 <= std_logic_vector(unsigned(indvar_flatten30_fu_154) + unsigned(ap_const_lv11_1));
    add_ln43_fu_973_p2 <= std_logic_vector(unsigned(select_ln41_6_fu_966_p3) + unsigned(ap_const_lv5_1));
    add_ln45_1_fu_864_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_146) + unsigned(ap_const_lv6_1));
    add_ln45_fu_1158_p2 <= std_logic_vector(unsigned(select_ln43_fu_1131_p3) + unsigned(ap_const_lv3_1));
    add_ln47_fu_858_p2 <= std_logic_vector(unsigned(select_ln45_fu_832_p3) + unsigned(ap_const_lv3_1));
    add_ln50_2_fu_1030_p2 <= std_logic_vector(unsigned(trunc_ln50_3_cast_fu_1027_p1) + unsigned(grp_fu_1356_p3));
    add_ln50_3_fu_1308_p2 <= std_logic_vector(signed(sext_ln50_3_fu_1304_p1) + signed(in_q));
    add_ln50_4_fu_1290_p2 <= std_logic_vector(signed(sext_ln50_2_fu_1286_p1) + signed(zext_ln43_2_fu_1148_p1));
    add_ln50_5_fu_1280_p2 <= std_logic_vector(signed(sext_ln50_fu_1264_p1) + signed(sext_ln50_1_fu_1276_p1));
    add_ln50_7_fu_1075_p2 <= std_logic_vector(unsigned(trunc_ln50_3_cast_mid1_fu_1072_p1) + unsigned(select_ln41_7_fu_1060_p3));
    add_ln50_fu_1203_p2 <= std_logic_vector(unsigned(zext_ln50_1_fu_1200_p1) + unsigned(select_ln45_1_fu_1186_p3));
    add_ln57_1_fu_1231_p2 <= std_logic_vector(signed(sext_ln57_1_fu_1227_p1) + signed(in_k));
    add_ln57_fu_1213_p2 <= std_logic_vector(signed(sext_ln57_fu_1209_p1) + signed(zext_ln50_3_fu_1144_p1));
    and_ln37_1_fu_607_p2 <= (xor_ln37_reg_1523_pp0_iter3_reg and icmp_ln45_fu_601_p2);
    and_ln37_2_fu_618_p2 <= (xor_ln37_reg_1523_pp0_iter3_reg and icmp_ln43_fu_612_p2);
    and_ln37_3_fu_399_p2 <= (xor_ln37_fu_387_p2 and icmp_ln41_fu_393_p2);
    and_ln37_fu_596_p2 <= (xor_ln37_reg_1523_pp0_iter3_reg and icmp_ln47_fu_590_p2);
    and_ln41_1_fu_698_p2 <= (or_ln41_5_fu_687_p2 and and_ln37_1_fu_607_p2);
    and_ln41_2_fu_704_p2 <= (or_ln41_5_fu_687_p2 and and_ln37_2_fu_618_p2);
    and_ln41_3_fu_738_p2 <= (xor_ln41_1_fu_732_p2 and and_ln41_fu_692_p2);
    and_ln41_4_fu_744_p2 <= (xor_ln41_1_fu_732_p2 and and_ln41_1_fu_698_p2);
    and_ln41_5_fu_750_p2 <= (xor_ln41_1_fu_732_p2 and or_ln41_fu_623_p2);
    and_ln41_fu_692_p2 <= (or_ln41_5_fu_687_p2 and and_ln37_fu_596_p2);
    and_ln43_1_fu_797_p2 <= (xor_ln43_fu_779_p2 and or_ln41_2_fu_628_p2);
    and_ln43_fu_791_p2 <= (or_ln43_4_fu_785_p2 and and_ln41_3_fu_738_p2);
    and_ln45_fu_846_p2 <= (xor_ln45_fu_840_p2 and or_ln43_fu_756_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter18, m_axi_gmem_RVALID, m_axi_gmem_BVALID, select_ln37_2_reg_1580_pp0_iter17_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (m_axi_gmem_RVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter18, m_axi_gmem_RVALID, m_axi_gmem_BVALID, ap_block_state6_io, ap_block_state13_io, ap_block_state14_io, select_ln37_2_reg_1580_pp0_iter17_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_io)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (m_axi_gmem_RVALID = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter18, m_axi_gmem_RVALID, m_axi_gmem_BVALID, ap_block_state6_io, ap_block_state13_io, ap_block_state14_io, select_ln37_2_reg_1580_pp0_iter17_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_io)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (m_axi_gmem_RVALID = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_io_assign_proc : process(m_axi_gmem_AWREADY, select_ln37_2_reg_1580_pp0_iter11_reg)
    begin
                ap_block_state13_io <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_1)) or ((m_axi_gmem_AWREADY = ap_const_logic_0) and (select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_0)));
    end process;


    ap_block_state13_pp0_stage0_iter12_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state13_pp0_stage0_iter12 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem_WREADY, select_ln37_2_reg_1580_pp0_iter12_reg)
    begin
                ap_block_state14_io <= (((select_ln37_2_reg_1580_pp0_iter12_reg = ap_const_lv1_1) and (m_axi_gmem_WREADY = ap_const_logic_0)) or ((select_ln37_2_reg_1580_pp0_iter12_reg = ap_const_lv1_0) and (m_axi_gmem_WREADY = ap_const_logic_0)));
    end process;

        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp0_stage0_iter18_assign_proc : process(m_axi_gmem_BVALID, select_ln37_2_reg_1580_pp0_iter17_reg)
    begin
                ap_block_state19_pp0_stage0_iter18 <= (((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, ap_predicate_op177_readreq_state6)
    begin
                ap_block_state6_io <= ((ap_predicate_op177_readreq_state6 = ap_const_boolean_1) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter11_stage0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_subdone, icmp_ln37_reg_1500_pp0_iter10_reg)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln37_reg_1500_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter11_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter11_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln37_fu_355_p2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln37_fu_355_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter17_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter17_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_phi_mux_first_iter_02_phi_fu_259_p4_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln37_reg_1500_pp0_iter4_reg, or_ln43_5_reg_1626, ap_block_pp0_stage0, first_iter_02_reg_255)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_first_iter_02_phi_fu_259_p4 <= or_ln43_5_reg_1626;
        else 
            ap_phi_mux_first_iter_02_phi_fu_259_p4 <= first_iter_02_reg_255;
        end if; 
    end process;


    ap_phi_mux_first_iter_03_phi_fu_270_p4_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln37_reg_1500_pp0_iter4_reg, and_ln45_reg_1640, ap_block_pp0_stage0, first_iter_03_reg_266)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_first_iter_03_phi_fu_270_p4 <= and_ln45_reg_1640;
        else 
            ap_phi_mux_first_iter_03_phi_fu_270_p4 <= first_iter_03_reg_266;
        end if; 
    end process;


    ap_phi_mux_first_iter_04_phi_fu_282_p4_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln37_reg_1500_pp0_iter4_reg, ap_block_pp0_stage0, first_iter_04_reg_277)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_first_iter_04_phi_fu_282_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_first_iter_04_phi_fu_282_p4 <= first_iter_04_reg_277;
        end if; 
    end process;


    ap_phi_mux_first_iter_0_phi_fu_248_p4_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln37_reg_1500_pp0_iter4_reg, and_ln41_5_reg_1609, ap_block_pp0_stage0, first_iter_0_reg_244)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_first_iter_0_phi_fu_248_p4 <= and_ln41_5_reg_1609;
        else 
            ap_phi_mux_first_iter_0_phi_fu_248_p4 <= first_iter_0_reg_244;
        end if; 
    end process;


    ap_predicate_op177_readreq_state6_assign_proc : process(icmp_ln37_reg_1500_pp0_iter4_reg, or_ln45_reg_1631, and_ln45_reg_1640, or_ln43_5_reg_1626, and_ln41_5_reg_1609)
    begin
                ap_predicate_op177_readreq_state6 <= ((or_ln43_5_reg_1626 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln41_5_reg_1609) and (ap_const_lv1_1 = and_ln45_reg_1640) and (or_ln45_reg_1631 = ap_const_lv1_1) and (icmp_ln37_reg_1500_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    cmp26294_fu_533_p2 <= "1" when (qk_fu_174 = ap_const_lv2_0) else "0";
    cmp26_mid1_fu_527_p2 <= "1" when (add_ln37_1_fu_500_p2 = ap_const_lv2_0) else "0";
    empty_fu_490_p0 <= empty_fu_490_p00(2 - 1 downto 0);
    empty_fu_490_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qk_fu_174),14));
    empty_fu_490_p1 <= ap_const_lv14_F50(13 - 1 downto 0);

    gmem_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter5, m_axi_gmem_ARREADY, ap_predicate_op177_readreq_state6, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op177_readreq_state6 = ap_const_boolean_1))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter12, m_axi_gmem_AWREADY, select_ln37_2_reg_1580_pp0_iter11_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter18, m_axi_gmem_BVALID, select_ln37_2_reg_1580_pp0_iter17_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter12, m_axi_gmem_RVALID, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter13, m_axi_gmem_WREADY, select_ln37_2_reg_1580_pp0_iter12_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln37_2_reg_1580_pp0_iter12_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln37_2_reg_1580_pp0_iter12_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1338_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1338_ce <= ap_const_logic_1;
        else 
            grp_fu_1338_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1338_p0 <= grp_fu_1338_p00(3 - 1 downto 0);
    grp_fu_1338_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_fu_166),15));
    grp_fu_1338_p1 <= ap_const_lv15_1EA0(13 - 1 downto 0);
    grp_fu_1338_p2 <= grp_fu_1338_p20(14 - 1 downto 0);
    grp_fu_1338_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_490_p2),15));

    grp_fu_1347_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1347_ce <= ap_const_logic_1;
        else 
            grp_fu_1347_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1347_p0 <= grp_fu_1347_p00(3 - 1 downto 0);
    grp_fu_1347_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_fu_405_p2),15));
    grp_fu_1347_p1 <= ap_const_lv15_1EA0(13 - 1 downto 0);
    grp_fu_1347_p2 <= grp_fu_1347_p20(14 - 1 downto 0);
    grp_fu_1347_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_1_fu_516_p3),15));

    grp_fu_1356_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1356_ce <= ap_const_logic_1;
        else 
            grp_fu_1356_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1356_p0 <= grp_fu_1356_p00(3 - 1 downto 0);
    grp_fu_1356_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_fu_158),13));
    grp_fu_1356_p1 <= ap_const_lv13_3D4(10 - 1 downto 0);

    grp_fu_1366_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1366_ce <= ap_const_logic_1;
        else 
            grp_fu_1366_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1366_p0 <= grp_fu_1366_p00(3 - 1 downto 0);
    grp_fu_1366_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_fu_937_p2),13));
    grp_fu_1366_p1 <= ap_const_lv13_3D4(10 - 1 downto 0);
    grp_fu_1366_p2 <= 
        mul_ln41_1_fu_1014_p2 when (and_ln37_3_reg_1535_pp0_iter8_reg(0) = '1') else 
        select_ln37_3_fu_1004_p3;

    grp_fu_1376_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1376_ce <= ap_const_logic_1;
        else 
            grp_fu_1376_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1376_p0 <= grp_fu_1376_p00(5 - 1 downto 0);
    grp_fu_1376_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dh_fu_150),11));
    grp_fu_1376_p1 <= ap_const_lv11_31(6 - 1 downto 0);

    grp_fu_1385_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1385_ce <= ap_const_logic_1;
        else 
            grp_fu_1385_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1385_p0 <= grp_fu_1385_p00(5 - 1 downto 0);
    grp_fu_1385_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_fu_973_p2),11));
    grp_fu_1385_p1 <= ap_const_lv11_31(6 - 1 downto 0);
    icmp_ln37_fu_355_p2 <= "1" when (indvar_flatten263_fu_178 = ap_const_lv15_7A80) else "0";
    icmp_ln39_fu_373_p2 <= "1" when (indvar_flatten162_fu_170 = ap_const_lv15_3D40) else "0";
    icmp_ln41_fu_393_p2 <= "1" when (indvar_flatten82_fu_162 = ap_const_lv13_F50) else "0";
    icmp_ln43_fu_612_p2 <= "1" when (indvar_flatten30_fu_154 = ap_const_lv11_3D4) else "0";
    icmp_ln45_fu_601_p2 <= "1" when (indvar_flatten_fu_146 = ap_const_lv6_31) else "0";
    icmp_ln47_fu_590_p2 <= "1" when (w_fu_138 = ap_const_lv3_7) else "0";
    m_axi_gmem_ARADDR <= sext_ln41_fu_907_p1;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_F50;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op177_readreq_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_readreq_state6 = ap_const_boolean_1))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_AWADDR_assign_proc : process(ap_enable_reg_pp0_iter12, select_ln37_2_reg_1580_pp0_iter11_reg, ap_block_pp0_stage0_11001, gmem_addr_20_reg_1722, gmem_addr_19_reg_1728)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            if ((select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_1)) then 
                m_axi_gmem_AWADDR <= gmem_addr_19_reg_1728;
            elsif ((select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_0)) then 
                m_axi_gmem_AWADDR <= gmem_addr_20_reg_1722;
            else 
                m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter12, select_ln37_2_reg_1580_pp0_iter11_reg, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln37_2_reg_1580_pp0_iter11_reg = ap_const_lv1_0)))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_enable_reg_pp0_iter18, select_ln37_2_reg_1580_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln37_2_reg_1580_pp0_iter17_reg = ap_const_lv1_0)))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= gmem_addr85_read_reg_1734;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter13, select_ln37_2_reg_1580_pp0_iter12_reg, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln37_2_reg_1580_pp0_iter12_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln37_2_reg_1580_pp0_iter12_reg = ap_const_lv1_0)))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln41_1_fu_1014_p0 <= mul_ln41_1_fu_1014_p00(3 - 1 downto 0);
    mul_ln41_1_fu_1014_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_reg_1549_pp0_iter8_reg),14));
    mul_ln41_1_fu_1014_p1 <= ap_const_lv14_F50(13 - 1 downto 0);
    mul_ln41_fu_998_p0 <= mul_ln41_fu_998_p00(3 - 1 downto 0);
    mul_ln41_fu_998_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_2_reg_1490_pp0_iter8_reg),14));
    mul_ln41_fu_998_p1 <= ap_const_lv14_F50(13 - 1 downto 0);
    or_ln37_1_fu_572_p2 <= (icmp_ln39_reg_1504_pp0_iter3_reg or ap_phi_mux_first_iter_02_phi_fu_259_p4);
    or_ln37_2_fu_577_p2 <= (icmp_ln39_reg_1504_pp0_iter3_reg or ap_phi_mux_first_iter_03_phi_fu_270_p4);
    or_ln37_3_fu_582_p2 <= (icmp_ln39_reg_1504_pp0_iter3_reg or ap_phi_mux_first_iter_04_phi_fu_282_p4);
    or_ln37_fu_567_p2 <= (icmp_ln39_reg_1504_pp0_iter3_reg or ap_phi_mux_first_iter_0_phi_fu_248_p4);
    or_ln41_1_fu_411_p2 <= (icmp_ln39_fu_373_p2 or and_ln37_3_fu_399_p2);
    or_ln41_2_fu_628_p2 <= (or_ln37_1_fu_572_p2 or and_ln37_3_reg_1535_pp0_iter3_reg);
    or_ln41_3_fu_633_p2 <= (or_ln37_2_fu_577_p2 or and_ln37_3_reg_1535_pp0_iter3_reg);
    or_ln41_4_fu_638_p2 <= (or_ln37_3_fu_582_p2 or and_ln37_3_reg_1535_pp0_iter3_reg);
    or_ln41_5_fu_687_p2 <= (xor_ln41_fu_682_p2 or icmp_ln39_reg_1504_pp0_iter3_reg);
    or_ln41_6_fu_710_p2 <= (and_ln41_2_fu_704_p2 or and_ln37_3_reg_1535_pp0_iter3_reg);
    or_ln41_7_fu_715_p2 <= (or_ln41_6_fu_710_p2 or icmp_ln39_reg_1504_pp0_iter3_reg);
    or_ln41_8_fu_720_p2 <= (or_ln41_3_fu_633_p2 or and_ln41_2_fu_704_p2);
    or_ln41_9_fu_726_p2 <= (or_ln41_4_fu_638_p2 or and_ln41_2_fu_704_p2);
    or_ln41_fu_623_p2 <= (or_ln37_fu_567_p2 or and_ln37_3_reg_1535_pp0_iter3_reg);
    or_ln43_1_fu_762_p2 <= (and_ln41_4_fu_744_p2 or and_ln41_2_fu_704_p2);
    or_ln43_2_fu_773_p2 <= (or_ln41_9_fu_726_p2 or and_ln41_4_fu_744_p2);
    or_ln43_3_fu_768_p2 <= (or_ln43_1_fu_762_p2 or or_ln41_1_reg_1554_pp0_iter3_reg);
    or_ln43_4_fu_785_p2 <= (xor_ln43_fu_779_p2 or and_ln41_2_fu_704_p2);
    or_ln43_5_fu_803_p2 <= (and_ln43_1_fu_797_p2 or and_ln41_2_fu_704_p2);
    or_ln43_fu_756_p2 <= (or_ln41_8_fu_720_p2 or and_ln41_4_fu_744_p2);
    or_ln45_1_fu_815_p2 <= (and_ln43_fu_791_p2 or and_ln41_4_fu_744_p2);
    or_ln45_2_fu_821_p2 <= (or_ln45_1_fu_815_p2 or or_ln41_6_fu_710_p2);
    or_ln45_3_fu_827_p2 <= (or_ln45_2_fu_821_p2 or icmp_ln39_reg_1504_pp0_iter3_reg);
    or_ln45_fu_809_p2 <= (or_ln43_2_fu_773_p2 or and_ln43_fu_791_p2);
    p_cast3_mid1_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid1183_reg_1570),15));
    p_mid1183_fu_510_p0 <= p_mid1183_fu_510_p00(2 - 1 downto 0);
    p_mid1183_fu_510_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln37_1_fu_500_p2),14));
    p_mid1183_fu_510_p1 <= ap_const_lv14_F50(13 - 1 downto 0);
    p_shl_cast_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_1095_p3),7));
    p_shl_cast_mid1_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_1168_p3),7));
    p_shl_fu_1095_p3 <= (h_fu_142 & ap_const_lv3_0);
    p_shl_mid1_fu_1168_p3 <= (add_ln45_fu_1158_p2 & ap_const_lv3_0);
    select_ln37_1_fu_516_p3 <= 
        p_mid1183_fu_510_p2 when (icmp_ln39_reg_1504_pp0_iter2_reg(0) = '1') else 
        empty_fu_490_p2;
    select_ln37_2_fu_539_p3 <= 
        cmp26_mid1_fu_527_p2 when (icmp_ln39_reg_1504_pp0_iter2_reg(0) = '1') else 
        cmp26294_fu_533_p2;
    select_ln37_3_fu_1004_p3 <= 
        ap_const_lv14_0 when (icmp_ln39_reg_1504_pp0_iter8_reg(0) = '1') else 
        mul_ln41_fu_998_p2;
    select_ln37_4_fu_1035_p3 <= 
        ap_const_lv14_0 when (icmp_ln39_reg_1504_pp0_iter9_reg(0) = '1') else 
        grp_fu_1356_p3;
    select_ln37_5_fu_1113_p3 <= 
        ap_const_lv14_0 when (icmp_ln39_reg_1504_pp0_iter10_reg(0) = '1') else 
        grp_fu_1376_p3;
    select_ln37_6_fu_1041_p3 <= 
        ap_const_lv14_0 when (icmp_ln39_reg_1504_pp0_iter9_reg(0) = '1') else 
        add_ln50_2_fu_1030_p2;
    select_ln37_7_fu_546_p3 <= 
        add_ln37_1_fu_500_p2 when (icmp_ln39_reg_1504_pp0_iter2_reg(0) = '1') else 
        qk_fu_174;
    select_ln37_8_fu_643_p3 <= 
        p_cast3_mid1_fu_587_p1 when (icmp_ln39_reg_1504_pp0_iter3_reg(0) = '1') else 
        grp_fu_1338_p3;
    select_ln37_fu_379_p3 <= 
        ap_const_lv3_0 when (icmp_ln39_fu_373_p2(0) = '1') else 
        b_fu_166;
    select_ln39_1_fu_455_p3 <= 
        ap_const_lv15_1 when (icmp_ln39_fu_373_p2(0) = '1') else 
        add_ln39_1_fu_449_p2;
    select_ln39_fu_421_p3 <= 
        add_ln39_fu_405_p2 when (and_ln37_3_fu_399_p2(0) = '1') else 
        select_ln37_fu_379_p3;
    select_ln41_10_fu_947_p3 <= 
        add_ln41_fu_937_p2 when (and_ln41_2_reg_1589_pp0_iter6_reg(0) = '1') else 
        select_ln41_fu_930_p3;
    select_ln41_11_fu_441_p3 <= 
        ap_const_lv13_1 when (or_ln41_1_fu_411_p2(0) = '1') else 
        add_ln41_2_fu_435_p2;
    select_ln41_2_fu_649_p3 <= 
        grp_fu_1347_p3 when (and_ln37_3_reg_1535_pp0_iter3_reg(0) = '1') else 
        select_ln37_8_fu_643_p3;
    select_ln41_3_fu_1048_p3 <= 
        mul_ln41_1_reg_1690 when (and_ln37_3_reg_1535_pp0_iter9_reg(0) = '1') else 
        select_ln37_4_fu_1035_p3;
    select_ln41_4_fu_1119_p3 <= 
        mul_ln41_1_reg_1690_pp0_iter10_reg when (and_ln37_3_reg_1535_pp0_iter10_reg(0) = '1') else 
        select_ln37_5_fu_1113_p3;
    select_ln41_5_fu_1054_p3 <= 
        mul_ln41_1_reg_1690 when (and_ln37_3_reg_1535_pp0_iter9_reg(0) = '1') else 
        select_ln37_6_fu_1041_p3;
    select_ln41_6_fu_966_p3 <= 
        ap_const_lv5_0 when (or_ln41_7_reg_1597_pp0_iter7_reg(0) = '1') else 
        dh_fu_150;
    select_ln41_7_fu_1060_p3 <= 
        grp_fu_1366_p3 when (and_ln41_2_reg_1589_pp0_iter9_reg(0) = '1') else 
        select_ln41_3_fu_1048_p3;
    select_ln41_8_fu_1125_p3 <= 
        add_ln50_6_reg_1707 when (and_ln41_2_reg_1589_pp0_iter10_reg(0) = '1') else 
        select_ln41_4_fu_1119_p3;
    select_ln41_9_fu_1066_p3 <= 
        grp_fu_1366_p3 when (and_ln41_2_reg_1589_pp0_iter9_reg(0) = '1') else 
        select_ln41_5_fu_1054_p3;
    select_ln41_fu_930_p3 <= 
        ap_const_lv3_0 when (or_ln41_1_reg_1554_pp0_iter6_reg(0) = '1') else 
        c_fu_158;
    select_ln43_1_fu_1138_p3 <= 
        grp_fu_1385_p3 when (and_ln41_4_reg_1602_pp0_iter10_reg(0) = '1') else 
        select_ln41_8_fu_1125_p3;
    select_ln43_2_fu_1081_p3 <= 
        add_ln50_7_fu_1075_p2 when (and_ln41_4_reg_1602_pp0_iter9_reg(0) = '1') else 
        select_ln41_9_fu_1066_p3;
    select_ln43_3_fu_1151_p3 <= 
        ap_const_lv7_0 when (or_ln43_3_reg_1614_pp0_iter10_reg(0) = '1') else 
        sub_ln50_fu_1107_p2;
    select_ln43_4_fu_983_p3 <= 
        add_ln43_fu_973_p2 when (and_ln41_4_reg_1602_pp0_iter7_reg(0) = '1') else 
        select_ln41_6_fu_966_p3;
    select_ln43_5_fu_884_p3 <= 
        ap_const_lv11_1 when (or_ln41_7_fu_715_p2(0) = '1') else 
        add_ln43_1_fu_878_p2;
    select_ln43_fu_1131_p3 <= 
        ap_const_lv3_0 when (or_ln43_3_reg_1614_pp0_iter10_reg(0) = '1') else 
        h_fu_142;
    select_ln45_1_fu_1186_p3 <= 
        sub_ln50_1_fu_1180_p2 when (and_ln43_reg_1620_pp0_iter10_reg(0) = '1') else 
        select_ln43_3_fu_1151_p3;
    select_ln45_2_fu_1193_p3 <= 
        add_ln45_fu_1158_p2 when (and_ln43_reg_1620_pp0_iter10_reg(0) = '1') else 
        select_ln43_fu_1131_p3;
    select_ln45_3_fu_870_p3 <= 
        ap_const_lv6_1 when (or_ln43_3_fu_768_p2(0) = '1') else 
        add_ln45_1_fu_864_p2;
    select_ln45_fu_832_p3 <= 
        ap_const_lv3_0 when (or_ln45_3_fu_827_p2(0) = '1') else 
        w_fu_138;
        sext_ln41_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln41_mid2_v_reg_1584),64));

    sext_ln41_mid2_v_v_v_v_v_fu_655_p3 <= (select_ln41_2_fu_649_p3 & ap_const_lv2_0);
        sext_ln50_1_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln50_1_fu_1268_p3),12));

        sext_ln50_2_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln50_5_fu_1280_p2),15));

        sext_ln50_3_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1296_p3),64));

        sext_ln50_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1256_p3),12));

        sext_ln51_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_1313_p4),64));

        sext_ln57_1_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1219_p3),64));

        sext_ln57_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln50_fu_1203_p2),15));

        sext_ln58_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_fu_1236_p4),64));

    shl_ln50_1_fu_1268_p3 <= (add_ln50_fu_1203_p2 & ap_const_lv4_0);
    shl_ln_fu_1256_p3 <= (add_ln50_fu_1203_p2 & ap_const_lv2_0);
    sub_ln50_1_fu_1180_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_1176_p1) - unsigned(zext_ln45_1_fu_1164_p1));
    sub_ln50_fu_1107_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1103_p1) - unsigned(zext_ln45_fu_1091_p1));
    tmp_fu_1296_p3 <= (add_ln50_4_fu_1290_p2 & ap_const_lv2_0);
    tmp_s_fu_1219_p3 <= (add_ln57_fu_1213_p2 & ap_const_lv2_0);
    trunc_ln50_3_cast_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dh_1_reg_1665_pp0_iter9_reg),14));
    trunc_ln50_3_cast_mid1_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_reg_1675_pp0_iter9_reg),14));
    trunc_ln6_fu_1236_p4 <= add_ln57_1_fu_1231_p2(63 downto 2);
    trunc_ln_fu_1313_p4 <= add_ln50_3_fu_1308_p2(63 downto 2);
    xor_ln37_fu_387_p2 <= (icmp_ln39_fu_373_p2 xor ap_const_lv1_1);
    xor_ln41_1_fu_732_p2 <= (ap_const_lv1_1 xor and_ln41_2_fu_704_p2);
    xor_ln41_fu_682_p2 <= (icmp_ln41_reg_1530_pp0_iter3_reg xor ap_const_lv1_1);
    xor_ln43_fu_779_p2 <= (ap_const_lv1_1 xor and_ln41_1_fu_698_p2);
    xor_ln45_fu_840_p2 <= (ap_const_lv1_1 xor and_ln43_fu_791_p2);
    zext_ln41_3_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln41_mid2_v_v_v_v_v_fu_655_p3),64));
    zext_ln43_2_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_2_reg_1717),15));
    zext_ln45_1_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_fu_1158_p2),7));
    zext_ln45_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_142),7));
    zext_ln50_1_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln45_reg_1635_pp0_iter10_reg),7));
    zext_ln50_3_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_1_fu_1138_p3),15));
end behav;
