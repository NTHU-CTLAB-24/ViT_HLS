-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_attention_DW_conv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel : IN STD_LOGIC_VECTOR (63 downto 0);
    bias : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of kernel_attention_DW_conv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (53 downto 0) := "000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (53 downto 0) := "000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (53 downto 0) := "000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (53 downto 0) := "000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (53 downto 0) := "000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (53 downto 0) := "000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (53 downto 0) := "000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (53 downto 0) := "000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (53 downto 0) := "000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (53 downto 0) := "001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (53 downto 0) := "010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (53 downto 0) := "100000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv14_F50 : STD_LOGIC_VECTOR (13 downto 0) := "00111101010000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln335_reg_1864 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal targetBlock_reg_1905 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal or_ln317_2_reg_1873 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read4_cast_fu_358_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_read4_cast_reg_1606 : STD_LOGIC_VECTOR (9 downto 0);
    signal cast1_fu_362_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal cast1_reg_1612 : STD_LOGIC_VECTOR (8 downto 0);
    signal bound31_cast_fu_388_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal bound31_cast_reg_1617 : STD_LOGIC_VECTOR (12 downto 0);
    signal bound80_fu_408_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound80_reg_1622 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_414_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_13_reg_1627 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln330_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_reg_1632 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_330_fu_515_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_330_reg_1648 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln327_fu_521_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln327_reg_1653 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln339_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln339_reg_1658 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln309_fu_536_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln309_reg_1666 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln312_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln312_reg_1671 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid2154_v_v_fu_556_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_mid2154_v_v_reg_1689 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_332_fu_568_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_332_reg_1699 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln317_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_reg_1704 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_1_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_1_reg_1709 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln315_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln315_reg_1714 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten134_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten134_reg_1720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_flatten77_mid2204_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten77_mid2204_reg_1727 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln312_6_fu_635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln312_6_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln315_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln315_reg_1747 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln315_5_fu_655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln315_5_reg_1752 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_4_fu_662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_4_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_1_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_1_reg_1773 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_5_fu_686_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln317_5_reg_1778 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln312_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln312_reg_1791 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal or_ln312_1_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln312_1_reg_1797 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln312_1_fu_766_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln312_1_reg_1802 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln315_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln315_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln315_1_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln315_1_reg_1812 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln315_1_fu_846_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln315_1_reg_1818 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln317_fu_968_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln317_reg_1823 : STD_LOGIC_VECTOR (6 downto 0);
    signal kernel_row_mid2_fu_989_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_row_mid2_reg_1828 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_6_fu_1026_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln317_6_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln317_7_fu_1044_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln317_7_reg_1839 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln317_8_fu_1057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_8_reg_1844 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_col_mid2_fu_1064_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_col_mid2_reg_1849 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_ch_fu_1127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_ch_reg_1854 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_333_fu_1151_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_333_reg_1859 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln335_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid2156_fu_1168_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_mid2156_reg_1868 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln317_2_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal biasFlag_1_mid2_fu_1220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal biasFlag_1_mid2_reg_1877 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_reg_1882 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln339_4_fu_1260_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln339_4_reg_1890 : STD_LOGIC_VECTOR (14 downto 0);
    signal gmem_addr_read_reg_1895 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln339_fu_1266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln339_reg_1900 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal gmem_addr_26_reg_1915 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_27_reg_1921 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_26_read_reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_27_read_reg_1933 : STD_LOGIC_VECTOR (31 downto 0);
    signal add1_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add1_reg_1938 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln346_fu_1342_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_ap_idle : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_ap_ready : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out_ap_vld : STD_LOGIC;
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_add_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_add_out_ap_vld : STD_LOGIC;
    signal kernel_row_reg_292 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal kernel_col_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg : STD_LOGIC := '0';
    signal add8122_loc_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_loc_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln339_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln345_fu_1306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln345_1_fu_1316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_predicate_op284_writeresp_state22 : BOOLEAN;
    signal ap_predicate_op286_writeresp_state22 : BOOLEAN;
    signal ap_block_state22 : BOOLEAN;
    signal bitcast_ln339_4_fu_1276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln339_3_fu_1326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state43 : BOOLEAN;
    signal bitcast_ln345_2_fu_1338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal groupIndex_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal groupIndex_1_fu_1470_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_ch_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal biasFlag_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_158 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln317_9_fu_1367_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten26_fu_162 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln317_10_fu_1381_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_fu_166 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten75_fu_170 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln315_6_fu_1394_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_fu_174 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten132_fu_178 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln312_7_fu_1407_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal batch_fu_182 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten205_fu_186 : STD_LOGIC_VECTOR (17 downto 0);
    signal add1_fu_333_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add1_fu_333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_370_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_cast_fu_378_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_read4_cast265_fu_366_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal bound31_fu_382_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl1_fu_396_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl10_cast_fu_404_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal cast79_cast_cast_fu_392_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_row_cast_fu_489_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_fu_493_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_fu_503_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_511_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast2_fu_499_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln309_1_fu_550_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_mid2192_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid2196_fu_606_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten28_mid2200_fu_611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln312_4_fu_621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln312_5_fu_628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln315_4_fu_648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_3_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_mid2142_fu_704_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln312_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_row_mid2146_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_col_mid2149_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln312_fu_726_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_mid_fu_781_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid1104_fu_789_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast2_mid198_fu_777_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_mid1106_fu_793_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln338_mid2180_fu_720_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln327_fu_806_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln312_fu_736_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln312_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln312_1_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln315_fu_819_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_mid2_fu_861_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid151_fu_869_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast2_mid145_fu_857_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_mid153_fu_873_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln312_2_fu_799_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln312_3_fu_811_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln315_1_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln319_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln319_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln319_1_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln315_1_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln317_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln319_2_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_row_cast_mid1_fu_936_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_mid1_fu_940_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_mid1_fu_950_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid1_fu_958_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast2_mid1_fu_946_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_mid112_fu_962_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln315_2_fu_879_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln315_3_fu_886_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln315_3_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln315_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln322_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln322_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln322_1_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln322_2_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_5_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln322_3_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln327_1_fu_1034_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln327_1_fu_1038_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln317_1_fu_975_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln339_1_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_3_fu_982_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln317_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1482_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_1074_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln332_1_fu_1081_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln332_fu_1071_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln332_fu_1085_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln319_fu_773_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln332_1_fu_1091_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln332_1_fu_1101_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln332_fu_1097_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln335_fu_1115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln335_1_fu_1121_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln332_1_fu_1109_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln315_3_cast_fu_853_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln332_214_fu_1133_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_1139_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_41_cast_fu_1147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_mid2156_fu_1168_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_mid2156_fu_1168_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tobool87_not263_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool87_not_mid2186_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln312_2_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln315_fu_1190_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tobool87_not_mid118_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln315_2_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_2_fu_1208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1227_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_1238_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_349_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast8_fu_1245_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_cast9_fu_1234_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln4_fu_1280_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln345_fu_1287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln345_fu_1291_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln8_fu_1296_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1347_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln317_4_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_6_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln317_fu_1352_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln317_1_fu_1375_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln315_1_fu_1388_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln312_1_fu_1401_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln346_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln347_fu_1465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1482_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1482_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1482_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1347_ap_start : STD_LOGIC;
    signal grp_fu_1347_ap_done : STD_LOGIC;
    signal grp_fu_1347_ce : STD_LOGIC;
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal grp_fu_1482_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1482_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid2156_fu_1168_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_attention_DW_conv_Pipeline_In_Channel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln335 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln339 : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln317 : IN STD_LOGIC_VECTOR (6 downto 0);
        p_mid2156 : IN STD_LOGIC_VECTOR (13 downto 0);
        select_ln317_7 : IN STD_LOGIC_VECTOR (2 downto 0);
        in_r : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        select_ln317_8 : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln339_2 : IN STD_LOGIC_VECTOR (14 downto 0);
        kernel : IN STD_LOGIC_VECTOR (63 downto 0);
        add8122_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add8122_out_ap_vld : OUT STD_LOGIC;
        add_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kernel_attention_fadd_32ns_32ns_32_1_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_attention_mul_2ns_13ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component kernel_attention_urem_8ns_8ns_8_12_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kernel_attention_mac_muladd_3ns_8ns_8ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_DW_conv_Pipeline_In_Channel_fu_316 : component kernel_attention_DW_conv_Pipeline_In_Channel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start,
        ap_done => grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done,
        ap_idle => grp_DW_conv_Pipeline_In_Channel_fu_316_ap_idle,
        ap_ready => grp_DW_conv_Pipeline_In_Channel_fu_316_ap_ready,
        sext_ln335 => in_ch_reg_1854,
        bitcast_ln339 => bitcast_ln339_reg_1900,
        select_ln317 => select_ln317_reg_1823,
        p_mid2156 => p_mid2156_reg_1868,
        select_ln317_7 => select_ln317_7_reg_1839,
        in_r => in_r,
        m_axi_gmem_AWVALID => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        select_ln317_8 => select_ln317_8_reg_1844,
        zext_ln339_2 => add_ln339_4_reg_1890,
        kernel => kernel,
        add8122_out => grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out,
        add8122_out_ap_vld => grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out_ap_vld,
        add_out => grp_DW_conv_Pipeline_In_Channel_fu_316_add_out,
        add_out_ap_vld => grp_DW_conv_Pipeline_In_Channel_fu_316_add_out_ap_vld,
        ap_return => grp_DW_conv_Pipeline_In_Channel_fu_316_ap_return);

    fadd_32ns_32ns_32_1_full_dsp_1_U52 : component kernel_attention_fadd_32ns_32ns_32_1_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => add1_fu_333_p0,
        din1 => add1_fu_333_p1,
        dout => add1_fu_333_p2);

    mul_2ns_13ns_14_1_1_U53 : component kernel_attention_mul_2ns_13ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => p_mid2156_fu_1168_p0,
        din1 => p_mid2156_fu_1168_p1,
        dout => p_mid2156_fu_1168_p2);

    urem_8ns_8ns_8_12_seq_1_U54 : component kernel_attention_urem_8ns_8ns_8_12_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1347_ap_start,
        done => grp_fu_1347_ap_done,
        din0 => grp_fu_1347_p0,
        din1 => p_read4,
        ce => grp_fu_1347_ce,
        dout => grp_fu_1347_p2);

    mac_muladd_3ns_8ns_8ns_10_4_1_U55 : component kernel_attention_mac_muladd_3ns_8ns_8ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1482_p0,
        din1 => grp_fu_1482_p1,
        din2 => grp_fu_1482_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1482_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DW_conv_Pipeline_In_Channel_fu_316_ap_ready = ap_const_logic_1)) then 
                    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    batch_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                batch_fu_182 <= ap_const_lv3_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                batch_fu_182 <= p_mid2154_v_v_reg_1689;
            end if; 
        end if;
    end process;

    biasFlag_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                biasFlag_fu_154 <= ap_const_lv32_1;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                biasFlag_fu_154 <= biasFlag_1_mid2_reg_1877;
            end if; 
        end if;
    end process;

    col_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_fu_166 <= ap_const_lv3_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                col_fu_166 <= select_ln315_1_reg_1818;
            end if; 
        end if;
    end process;

    groupIndex_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                groupIndex_fu_146 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                groupIndex_fu_146 <= groupIndex_1_fu_1470_p3;
            end if; 
        end if;
    end process;

    indvar_flatten132_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten132_fu_178 <= ap_const_lv16_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                indvar_flatten132_fu_178 <= select_ln312_7_fu_1407_p3;
            end if; 
        end if;
    end process;

    indvar_flatten205_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten205_fu_186 <= ap_const_lv18_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                indvar_flatten205_fu_186 <= add_ln309_reg_1666;
            end if; 
        end if;
    end process;

    indvar_flatten26_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten26_fu_162 <= ap_const_lv10_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                indvar_flatten26_fu_162 <= select_ln317_10_fu_1381_p3;
            end if; 
        end if;
    end process;

    indvar_flatten75_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten75_fu_170 <= ap_const_lv13_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                indvar_flatten75_fu_170 <= select_ln315_6_fu_1394_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_158 <= ap_const_lv9_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                indvar_flatten_fu_158 <= select_ln317_9_fu_1367_p3;
            end if; 
        end if;
    end process;

    kernel_col_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                kernel_col_reg_304 <= kernel_col_mid2_reg_1849;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_col_reg_304 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    kernel_row_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                kernel_row_reg_292 <= kernel_row_mid2_reg_1828;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_row_reg_292 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    out_ch_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                out_ch_fu_150 <= ap_const_lv8_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                out_ch_fu_150 <= add_ln346_fu_1342_p2;
            end if; 
        end if;
    end process;

    row_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_fu_174 <= ap_const_lv3_0;
            elsif ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                row_fu_174 <= select_ln312_1_reg_1802;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                add1_reg_1938 <= add1_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                add8122_loc_fu_194 <= grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln309_reg_1666 <= add_ln309_fu_536_p2;
                empty_330_reg_1648 <= empty_330_fu_515_p2;
                xor_ln339_reg_1658 <= xor_ln339_fu_525_p2;
                    zext_ln327_reg_1653(0) <= zext_ln327_fu_521_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_1))) then
                    add_ln339_4_reg_1890(14 downto 4) <= add_ln339_4_fu_1260_p2(14 downto 4);
                gmem_addr_reg_1882 <= sext_ln339_fu_1249_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DW_conv_Pipeline_In_Channel_fu_316_add_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                add_loc_fu_190 <= grp_DW_conv_Pipeline_In_Channel_fu_316_add_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                biasFlag_1_mid2_reg_1877 <= biasFlag_1_mid2_fu_1220_p3;
                or_ln317_2_reg_1873 <= or_ln317_2_fu_1215_p2;
                p_mid2156_reg_1868 <= p_mid2156_fu_1168_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                bitcast_ln339_reg_1900 <= bitcast_ln339_fu_1266_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bound31_cast_reg_1617 <= bound31_cast_fu_388_p1;
                bound80_reg_1622 <= bound80_fu_408_p2;
                    cast1_reg_1612(7 downto 0) <= cast1_fu_362_p1(7 downto 0);
                icmp_ln330_reg_1632 <= icmp_ln330_fu_422_p2;
                    p_read4_cast_reg_1606(7 downto 0) <= p_read4_cast_fu_358_p1(7 downto 0);
                    tmp_13_reg_1627(17 downto 2) <= tmp_13_fu_414_p3(17 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln309_fu_531_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                empty_332_reg_1699 <= empty_332_fu_568_p1;
                icmp_ln312_reg_1671 <= icmp_ln312_fu_545_p2;
                icmp_ln315_reg_1714 <= icmp_ln315_fu_582_p2;
                icmp_ln317_1_reg_1709 <= icmp_ln317_1_fu_577_p2;
                icmp_ln317_reg_1704 <= icmp_ln317_fu_572_p2;
                p_mid2154_v_v_reg_1689 <= p_mid2154_v_v_fu_556_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                empty_333_reg_1859 <= empty_333_fu_1151_p2;
                icmp_ln335_reg_1864 <= icmp_ln335_fu_1156_p2;
                    in_ch_reg_1854(31 downto 4) <= in_ch_fu_1127_p2(31 downto 4);
                kernel_col_mid2_reg_1849 <= kernel_col_mid2_fu_1064_p3;
                kernel_row_mid2_reg_1828 <= kernel_row_mid2_fu_989_p3;
                or_ln312_1_reg_1797 <= or_ln312_1_fu_749_p2;
                or_ln312_reg_1791 <= or_ln312_fu_732_p2;
                or_ln315_1_reg_1812 <= or_ln315_1_fu_842_p2;
                select_ln312_1_reg_1802 <= select_ln312_1_fu_766_p3;
                select_ln315_1_reg_1818 <= select_ln315_1_fu_846_p3;
                select_ln317_6_reg_1833 <= select_ln317_6_fu_1026_p3;
                select_ln317_7_reg_1839 <= select_ln317_7_fu_1044_p3;
                select_ln317_8_reg_1844 <= select_ln317_8_fu_1057_p3;
                select_ln317_reg_1823 <= select_ln317_fu_968_p3;
                xor_ln315_reg_1807 <= xor_ln315_fu_825_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                exitcond_flatten77_mid2204_reg_1727 <= exitcond_flatten77_mid2204_fu_616_p2;
                not_exitcond_flatten134_reg_1720 <= not_exitcond_flatten134_fu_590_p2;
                or_ln315_reg_1747 <= or_ln315_fu_642_p2;
                or_ln317_1_reg_1773 <= or_ln317_1_fu_675_p2;
                select_ln312_6_reg_1736 <= select_ln312_6_fu_635_p3;
                select_ln315_5_reg_1752 <= select_ln315_5_fu_655_p3;
                select_ln317_4_reg_1764 <= select_ln317_4_fu_662_p3;
                select_ln317_5_reg_1778 <= select_ln317_5_fu_686_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                gmem_addr_26_read_reg_1928 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln317_2_reg_1873 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                gmem_addr_26_reg_1915 <= sext_ln345_fu_1306_p1;
                gmem_addr_27_reg_1921 <= sext_ln345_1_fu_1316_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                gmem_addr_27_read_reg_1933 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                gmem_addr_read_reg_1895 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                targetBlock_reg_1905 <= grp_DW_conv_Pipeline_In_Channel_fu_316_ap_return;
            end if;
        end if;
    end process;
    p_read4_cast_reg_1606(9 downto 8) <= "00";
    cast1_reg_1612(8) <= '0';
    tmp_13_reg_1627(1 downto 0) <= "00";
    zext_ln327_reg_1653(2 downto 1) <= "00";
    in_ch_reg_1854(3 downto 0) <= "0000";
    add_ln339_4_reg_1890(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_AWREADY, m_axi_gmem_WREADY, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, m_axi_gmem_BVALID, ap_CS_fsm_state6, icmp_ln335_reg_1864, ap_CS_fsm_state13, ap_CS_fsm_state16, targetBlock_reg_1905, ap_CS_fsm_state23, ap_CS_fsm_state22, ap_CS_fsm_state17, ap_CS_fsm_state28, ap_CS_fsm_state35, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state43, or_ln317_2_reg_1873, ap_CS_fsm_state2, icmp_ln309_fu_531_p2, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done, ap_block_state6_io, ap_block_state16_io, ap_predicate_op284_writeresp_state22, ap_predicate_op286_writeresp_state22)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln309_fu_531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_boolean_0 = ap_block_state16_io) and (ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_const_boolean_0 = ap_block_state16_io) and (ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if ((not((((ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)))) and (or_ln317_2_reg_1873 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                elsif ((not((((ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)))) and (or_ln317_2_reg_1873 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state28 => 
                if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state35) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add1_fu_333_p0 <= gmem_addr_27_read_reg_1933;
    add1_fu_333_p1 <= gmem_addr_26_read_reg_1928;
    add_ln309_1_fu_550_p2 <= std_logic_vector(unsigned(batch_fu_182) + unsigned(ap_const_lv3_1));
    add_ln309_fu_536_p2 <= std_logic_vector(unsigned(indvar_flatten205_fu_186) + unsigned(ap_const_lv18_1));
    add_ln312_1_fu_1401_p2 <= std_logic_vector(unsigned(indvar_flatten132_fu_178) + unsigned(ap_const_lv16_1));
    add_ln312_fu_726_p2 <= std_logic_vector(unsigned(row_mid2142_fu_704_p3) + unsigned(ap_const_lv3_1));
    add_ln315_1_fu_1388_p2 <= std_logic_vector(unsigned(indvar_flatten75_fu_170) + unsigned(ap_const_lv13_1));
    add_ln315_fu_819_p2 <= std_logic_vector(unsigned(select_ln312_fu_736_p3) + unsigned(ap_const_lv3_1));
    add_ln317_1_fu_1375_p2 <= std_logic_vector(unsigned(indvar_flatten26_fu_162) + unsigned(ap_const_lv10_1));
    add_ln317_fu_1352_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_158) + unsigned(ap_const_lv9_1));
    add_ln327_1_fu_1038_p2 <= std_logic_vector(unsigned(zext_ln327_1_fu_1034_p1) + unsigned(select_ln315_1_fu_846_p3));
    add_ln327_fu_806_p2 <= std_logic_vector(unsigned(zext_ln327_reg_1653) + unsigned(col_fu_166));
    add_ln332_1_fu_1091_p2 <= std_logic_vector(unsigned(sub_ln332_fu_1085_p2) + unsigned(zext_ln319_fu_773_p1));
    add_ln332_214_fu_1133_p2 <= std_logic_vector(unsigned(sub_ln332_1_fu_1109_p2) + unsigned(select_ln315_3_cast_fu_853_p1));
    add_ln339_4_fu_1260_p2 <= std_logic_vector(unsigned(p_cast8_fu_1245_p1) + unsigned(p_cast9_fu_1234_p1));
    add_ln345_fu_1291_p2 <= std_logic_vector(unsigned(zext_ln345_fu_1287_p1) + unsigned(bias));
    add_ln346_fu_1342_p2 <= std_logic_vector(unsigned(select_ln317_5_reg_1778) + unsigned(ap_const_lv8_1));
    add_ln347_fu_1465_p2 <= std_logic_vector(unsigned(select_ln317_6_reg_1833) + unsigned(ap_const_lv32_1));
    and_ln312_1_fu_760_p2 <= (or_ln312_1_fu_749_p2 and kernel_col_mid2149_fu_715_p2);
    and_ln312_2_fu_1185_p2 <= (tobool87_not_mid2186_fu_1180_p2 and or_ln312_1_reg_1797);
    and_ln312_fu_754_p2 <= (or_ln312_1_fu_749_p2 and kernel_row_mid2146_fu_710_p2);
    and_ln315_1_fu_836_p2 <= (xor_ln315_fu_825_p2 and and_ln312_1_fu_760_p2);
    and_ln315_2_fu_1197_p2 <= (xor_ln315_reg_1807 and and_ln312_2_fu_1185_p2);
    and_ln315_3_fu_899_p2 <= (xor_ln339_reg_1658 and xor_ln315_1_fu_893_p2);
    and_ln315_fu_830_p2 <= (xor_ln315_fu_825_p2 and and_ln312_fu_754_p2);
    and_ln317_fu_930_p2 <= (xor_ln317_fu_925_p2 and and_ln315_1_fu_836_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done)
    begin
        if ((grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(ap_block_state16_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state16_io)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(m_axi_gmem_BVALID, ap_predicate_op284_writeresp_state22, ap_predicate_op286_writeresp_state22)
    begin
        if ((((ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)))) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state23_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state29_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state36_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state37_blk_assign_proc : process(m_axi_gmem_AWREADY)
    begin
        if ((m_axi_gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state38_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state43_blk_assign_proc : process(m_axi_gmem_BVALID, or_ln317_2_reg_1873)
    begin
        if (((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state6_io)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state16_io_assign_proc : process(m_axi_gmem_AWREADY, targetBlock_reg_1905)
    begin
                ap_block_state16_io <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (targetBlock_reg_1905 = ap_const_lv1_0)) or ((m_axi_gmem_AWREADY = ap_const_logic_0) and (targetBlock_reg_1905 = ap_const_lv1_1)));
    end process;


    ap_block_state22_assign_proc : process(m_axi_gmem_BVALID, ap_predicate_op284_writeresp_state22, ap_predicate_op286_writeresp_state22)
    begin
                ap_block_state22 <= (((ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)));
    end process;


    ap_block_state43_assign_proc : process(m_axi_gmem_BVALID, or_ln317_2_reg_1873)
    begin
                ap_block_state43 <= ((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;


    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln335_reg_1864)
    begin
                ap_block_state6_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln335_reg_1864 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln309_fu_531_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln309_fu_531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op284_writeresp_state22_assign_proc : process(icmp_ln335_reg_1864, targetBlock_reg_1905)
    begin
                ap_predicate_op284_writeresp_state22 <= ((targetBlock_reg_1905 = ap_const_lv1_0) and (icmp_ln335_reg_1864 = ap_const_lv1_1));
    end process;


    ap_predicate_op286_writeresp_state22_assign_proc : process(icmp_ln335_reg_1864, targetBlock_reg_1905)
    begin
                ap_predicate_op286_writeresp_state22 <= ((targetBlock_reg_1905 = ap_const_lv1_1) and (icmp_ln335_reg_1864 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln309_fu_531_p2)
    begin
        if (((icmp_ln309_fu_531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    biasFlag_1_mid2_fu_1220_p3 <= 
        ap_const_lv32_0 when (select_ln317_4_reg_1764(0) = '1') else 
        select_ln315_fu_1190_p3;
    bitcast_ln339_3_fu_1326_p1 <= add8122_loc_fu_194;
    bitcast_ln339_4_fu_1276_p1 <= add_loc_fu_190;
    bitcast_ln339_fu_1266_p1 <= gmem_addr_read_reg_1895;
    bitcast_ln345_2_fu_1338_p1 <= add1_reg_1938;
        bound31_cast_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bound31_fu_382_p2),13));

    bound31_fu_382_p2 <= std_logic_vector(unsigned(tmp_35_cast_fu_378_p1) - unsigned(p_read4_cast265_fu_366_p1));
    bound80_fu_408_p2 <= std_logic_vector(signed(p_shl10_cast_fu_404_p1) - signed(cast79_cast_cast_fu_392_p1));
    cast1_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read4),9));
    cast79_cast_cast_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound31_cast_fu_388_p1),16));
    empty_330_fu_515_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_511_p1) - unsigned(p_cast2_fu_499_p1));
    empty_332_fu_568_p1 <= p_mid2154_v_v_fu_556_p3(2 - 1 downto 0);
    empty_333_fu_1151_p2 <= std_logic_vector(signed(tmp_41_cast_fu_1147_p1) + signed(out_r));
    empty_fu_493_p2 <= std_logic_vector(unsigned(kernel_row_cast_fu_489_p1) + unsigned(row_fu_174));
    exitcond_flatten28_mid2200_fu_611_p3 <= 
        icmp_ln330_reg_1632 when (icmp_ln312_reg_1671(0) = '1') else 
        icmp_ln317_1_reg_1709;
    exitcond_flatten77_mid2204_fu_616_p2 <= (not_exitcond_flatten134_fu_590_p2 and icmp_ln315_reg_1714);
    exitcond_flatten_mid2196_fu_606_p3 <= 
        icmp_ln330_reg_1632 when (icmp_ln312_reg_1671(0) = '1') else 
        icmp_ln317_reg_1704;

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state6, icmp_ln335_reg_1864, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, targetBlock_reg_1905, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_1)))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, icmp_ln335_reg_1864, targetBlock_reg_1905, ap_CS_fsm_state22, ap_CS_fsm_state43, or_ln317_2_reg_1873)
    begin
        if ((((or_ln317_2_reg_1873 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (targetBlock_reg_1905 = ap_const_lv1_0) and (icmp_ln335_reg_1864 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (targetBlock_reg_1905 = ap_const_lv1_1) and (icmp_ln335_reg_1864 = ap_const_lv1_1)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state35, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state23, ap_CS_fsm_state17, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    groupIndex_1_fu_1470_p3 <= 
        add_ln347_fu_1465_p2 when (icmp_ln346_fu_1459_p2(0) = '1') else 
        select_ln317_6_reg_1833;
    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start <= grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg;

    grp_fu_1347_ap_start_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state43, or_ln317_2_reg_1873)
    begin
        if ((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            grp_fu_1347_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1347_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1347_ce_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state54, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_1347_ce <= ap_const_logic_1;
        else 
            grp_fu_1347_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1347_p0 <= std_logic_vector(unsigned(select_ln317_5_reg_1778) + unsigned(ap_const_lv8_1));
    grp_fu_1482_p0 <= grp_fu_1482_p00(3 - 1 downto 0);
    grp_fu_1482_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2154_v_v_fu_556_p3),10));
    grp_fu_1482_p1 <= p_read4_cast_reg_1606(8 - 1 downto 0);
    grp_fu_1482_p2 <= grp_fu_1482_p20(8 - 1 downto 0);
    grp_fu_1482_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln317_5_fu_686_p3),10));
    grp_fu_349_p4 <= empty_333_reg_1859(63 downto 2);
    icmp_ln309_fu_531_p2 <= "1" when (indvar_flatten205_fu_186 = tmp_13_reg_1627) else "0";
    icmp_ln312_fu_545_p2 <= "1" when (indvar_flatten132_fu_178 = bound80_reg_1622) else "0";
    icmp_ln315_fu_582_p2 <= "1" when (indvar_flatten75_fu_170 = bound31_cast_reg_1617) else "0";
    icmp_ln317_1_fu_577_p2 <= "1" when (indvar_flatten26_fu_162 = p_read4_cast_reg_1606) else "0";
    icmp_ln317_fu_572_p2 <= "1" when (indvar_flatten_fu_158 = cast1_reg_1612) else "0";
    icmp_ln330_1_fu_595_p2 <= "1" when (out_ch_fu_150 = p_read4) else "0";
    icmp_ln330_fu_422_p2 <= "1" when (p_read4 = ap_const_lv8_0) else "0";
    icmp_ln330_mid2192_fu_600_p3 <= 
        icmp_ln330_reg_1632 when (icmp_ln312_reg_1671(0) = '1') else 
        icmp_ln330_1_fu_595_p2;
    icmp_ln335_fu_1156_p2 <= "1" when (signed(in_ch_fu_1127_p2) < signed(ap_const_lv32_50)) else "0";
    icmp_ln346_fu_1459_p2 <= "1" when (grp_fu_1347_p2 = ap_const_lv8_0) else "0";
    in_ch_fu_1127_p2 <= std_logic_vector(unsigned(shl_ln335_fu_1115_p2) + unsigned(shl_ln335_1_fu_1121_p2));
    kernel_col_mid2149_fu_715_p2 <= (not_exitcond_flatten134_reg_1720 and kernel_col_reg_304);
    kernel_col_mid2_fu_1064_p3 <= 
        or_ln322_3_fu_1017_p2 when (select_ln317_4_reg_1764(0) = '1') else 
        and_ln317_fu_930_p2;
    kernel_row_cast_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_row_reg_292),3));
    kernel_row_cast_mid1_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln319_2_fu_920_p2),3));
    kernel_row_mid2146_fu_710_p2 <= (not_exitcond_flatten134_reg_1720 and kernel_row_reg_292);
    kernel_row_mid2_fu_989_p3 <= 
        or_ln319_2_fu_920_p2 when (select_ln315_5_reg_1752(0) = '1') else 
        and_ln315_fu_830_p2;

    m_axi_gmem_ARADDR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state6, icmp_ln335_reg_1864, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state14, ap_CS_fsm_state15, gmem_addr_26_reg_1915, gmem_addr_27_reg_1921, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR, sext_ln339_fu_1249_p1, ap_block_state6_io)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            m_axi_gmem_ARADDR <= gmem_addr_27_reg_1921;
        elsif (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_gmem_ARADDR <= gmem_addr_26_reg_1915;
        elsif (((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_1))) then 
            m_axi_gmem_ARADDR <= sext_ln339_fu_1249_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARADDR <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARBURST_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARBURST <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST;
        else 
            m_axi_gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARCACHE_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARCACHE <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE;
        else 
            m_axi_gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARID_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARID <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID;
        else 
            m_axi_gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARLEN_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state6, icmp_ln335_reg_1864, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN, ap_block_state6_io)
    begin
        if ((((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARLEN <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN;
        else 
            m_axi_gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARLOCK_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARLOCK <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK;
        else 
            m_axi_gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARPROT_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARPROT <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT;
        else 
            m_axi_gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARQOS_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARQOS <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS;
        else 
            m_axi_gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARREGION_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARREGION <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION;
        else 
            m_axi_gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARSIZE_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARSIZE <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE;
        else 
            m_axi_gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARUSER_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARUSER <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER;
        else 
            m_axi_gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARVALID_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state6, icmp_ln335_reg_1864, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID, ap_block_state6_io)
    begin
        if ((((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln335_reg_1864 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_ARVALID <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_AWADDR_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, targetBlock_reg_1905, ap_CS_fsm_state37, gmem_addr_reg_1882, gmem_addr_27_reg_1921, ap_block_state16_io)
    begin
        if (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            m_axi_gmem_AWADDR <= gmem_addr_27_reg_1921;
        elsif ((((ap_const_boolean_0 = ap_block_state16_io) and (ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state16_io) and (ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_1)))) then 
            m_axi_gmem_AWADDR <= gmem_addr_reg_1882;
        else 
            m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, targetBlock_reg_1905, ap_CS_fsm_state37, ap_block_state16_io)
    begin
        if ((((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((ap_const_boolean_0 = ap_block_state16_io) and (ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state16_io) and (ap_const_logic_1 = ap_CS_fsm_state16) and (targetBlock_reg_1905 = ap_const_lv1_1)))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state22, ap_CS_fsm_state43, or_ln317_2_reg_1873, ap_predicate_op284_writeresp_state22, ap_predicate_op286_writeresp_state22)
    begin
        if (((not(((or_ln317_2_reg_1873 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (or_ln317_2_reg_1873 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or (not((((ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)))) and (ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or (not((((ap_predicate_op286_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (m_axi_gmem_BVALID = ap_const_logic_0)))) and (ap_predicate_op284_writeresp_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state14, ap_CS_fsm_state15, grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state36) and (m_axi_gmem_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state35) and (m_axi_gmem_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_gmem_RVALID = ap_const_logic_1)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem_RREADY <= grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_WDATA_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state17, ap_CS_fsm_state38, bitcast_ln339_4_fu_1276_p1, bitcast_ln339_3_fu_1326_p1, bitcast_ln345_2_fu_1338_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            m_axi_gmem_WDATA <= bitcast_ln345_2_fu_1338_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            m_axi_gmem_WDATA <= bitcast_ln339_3_fu_1326_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            m_axi_gmem_WDATA <= bitcast_ln339_4_fu_1276_p1;
        else 
            m_axi_gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state23, ap_CS_fsm_state17, ap_CS_fsm_state38)
    begin
        if ((((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    not_exitcond_flatten134_fu_590_p2 <= (icmp_ln312_reg_1671 xor ap_const_lv1_1);
    or_ln312_1_fu_749_p2 <= (xor_ln312_fu_744_p2 or icmp_ln312_reg_1671);
    or_ln312_fu_732_p2 <= (icmp_ln312_reg_1671 or exitcond_flatten77_mid2204_reg_1727);
    or_ln315_1_fu_842_p2 <= (or_ln315_reg_1747 or icmp_ln312_reg_1671);
    or_ln315_fu_642_p2 <= (select_ln312_6_fu_635_p3 or exitcond_flatten77_mid2204_fu_616_p2);
    or_ln317_1_fu_675_p2 <= (or_ln317_fu_669_p2 or or_ln315_fu_642_p2);
    or_ln317_2_fu_1215_p2 <= (select_ln317_4_reg_1764 or select_ln317_2_fu_1208_p3);
    or_ln317_3_fu_681_p2 <= (or_ln317_1_fu_675_p2 or icmp_ln312_reg_1671);
    or_ln317_4_fu_1358_p2 <= (select_ln315_5_reg_1752 or select_ln312_6_reg_1736);
    or_ln317_5_fu_1022_p2 <= (or_ln317_1_reg_1773 or icmp_ln312_reg_1671);
    or_ln317_6_fu_1362_p2 <= (or_ln317_4_fu_1358_p2 or or_ln312_reg_1791);
    or_ln317_fu_669_p2 <= (select_ln317_4_fu_662_p3 or select_ln315_5_fu_655_p3);
    or_ln319_1_fu_915_p2 <= (or_ln319_fu_910_p2 or exitcond_flatten77_mid2204_reg_1727);
    or_ln319_2_fu_920_p2 <= (select_ln312_6_reg_1736 or or_ln319_1_fu_915_p2);
    or_ln319_fu_910_p2 <= (xor_ln319_fu_904_p2 or icmp_ln312_reg_1671);
    or_ln322_1_fu_1007_p2 <= (or_ln322_fu_1002_p2 or exitcond_flatten77_mid2204_reg_1727);
    or_ln322_2_fu_1012_p2 <= (select_ln312_6_reg_1736 or or_ln322_1_fu_1007_p2);
    or_ln322_3_fu_1017_p2 <= (select_ln315_5_reg_1752 or or_ln322_2_fu_1012_p2);
    or_ln322_fu_1002_p2 <= (xor_ln322_fu_996_p2 or icmp_ln312_reg_1671);
    p_cast2_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_493_p2),7));
    p_cast2_mid145_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln312_1_fu_766_p3),7));
    p_cast2_mid198_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln312_fu_726_p2),7));
    p_cast2_mid1_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid1_fu_940_p2),7));
    p_cast8_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1238_p3),15));
    p_cast9_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_1227_p3),15));
    p_mid1106_fu_793_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1104_fu_789_p1) - unsigned(p_cast2_mid198_fu_777_p1));
    p_mid112_fu_962_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_958_p1) - unsigned(p_cast2_mid1_fu_946_p1));
    p_mid153_fu_873_p2 <= std_logic_vector(unsigned(p_shl_cast_mid151_fu_869_p1) - unsigned(p_cast2_mid145_fu_857_p1));
    p_mid1_fu_940_p2 <= std_logic_vector(unsigned(kernel_row_cast_mid1_fu_936_p1) + unsigned(select_ln312_1_fu_766_p3));
    p_mid2154_v_v_fu_556_p3 <= 
        add_ln309_1_fu_550_p2 when (icmp_ln312_fu_545_p2(0) = '1') else 
        batch_fu_182;
    p_mid2156_fu_1168_p0 <= p_mid2156_fu_1168_p00(2 - 1 downto 0);
    p_mid2156_fu_1168_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_332_reg_1699),14));
    p_mid2156_fu_1168_p1 <= ap_const_lv14_F50(13 - 1 downto 0);
    p_read4_cast265_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read4),12));
    p_read4_cast_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read4),10));
        p_shl10_cast_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_fu_396_p3),16));

    p_shl1_fu_396_p3 <= (bound31_fu_382_p2 & ap_const_lv3_0);
    p_shl_cast_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_503_p3),7));
    p_shl_cast_mid1104_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid_fu_781_p3),7));
    p_shl_cast_mid151_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid2_fu_861_p3),7));
    p_shl_cast_mid1_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_950_p3),7));
    p_shl_fu_503_p3 <= (empty_fu_493_p2 & ap_const_lv3_0);
    p_shl_mid1_fu_950_p3 <= (p_mid1_fu_940_p2 & ap_const_lv3_0);
    p_shl_mid2_fu_861_p3 <= (select_ln312_1_fu_766_p3 & ap_const_lv3_0);
    p_shl_mid_fu_781_p3 <= (add_ln312_fu_726_p2 & ap_const_lv3_0);
    row_mid2142_fu_704_p3 <= 
        ap_const_lv3_0 when (icmp_ln312_reg_1671(0) = '1') else 
        row_fu_174;
    select_ln312_1_fu_766_p3 <= 
        add_ln312_fu_726_p2 when (exitcond_flatten77_mid2204_reg_1727(0) = '1') else 
        row_mid2142_fu_704_p3;
    select_ln312_2_fu_799_p3 <= 
        p_mid1106_fu_793_p2 when (exitcond_flatten77_mid2204_reg_1727(0) = '1') else 
        zext_ln338_mid2180_fu_720_p3;
    select_ln312_3_fu_811_p3 <= 
        ap_const_lv3_0 when (or_ln312_fu_732_p2(0) = '1') else 
        add_ln327_fu_806_p2;
    select_ln312_4_fu_621_p3 <= 
        icmp_ln330_reg_1632 when (exitcond_flatten77_mid2204_fu_616_p2(0) = '1') else 
        icmp_ln330_mid2192_fu_600_p3;
    select_ln312_5_fu_628_p3 <= 
        icmp_ln330_reg_1632 when (exitcond_flatten77_mid2204_fu_616_p2(0) = '1') else 
        exitcond_flatten_mid2196_fu_606_p3;
    select_ln312_6_fu_635_p3 <= 
        icmp_ln330_reg_1632 when (exitcond_flatten77_mid2204_fu_616_p2(0) = '1') else 
        exitcond_flatten28_mid2200_fu_611_p3;
    select_ln312_7_fu_1407_p3 <= 
        ap_const_lv16_1 when (icmp_ln312_reg_1671(0) = '1') else 
        add_ln312_1_fu_1401_p2;
    select_ln312_fu_736_p3 <= 
        ap_const_lv3_0 when (or_ln312_fu_732_p2(0) = '1') else 
        col_fu_166;
    select_ln315_1_fu_846_p3 <= 
        add_ln315_fu_819_p2 when (select_ln312_6_reg_1736(0) = '1') else 
        select_ln312_fu_736_p3;
    select_ln315_2_fu_879_p3 <= 
        p_mid153_fu_873_p2 when (select_ln312_6_reg_1736(0) = '1') else 
        select_ln312_2_fu_799_p3;
    select_ln315_3_cast_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln315_1_fu_846_p3),17));
    select_ln315_3_fu_886_p3 <= 
        add_ln315_fu_819_p2 when (select_ln312_6_reg_1736(0) = '1') else 
        select_ln312_3_fu_811_p3;
    select_ln315_4_fu_648_p3 <= 
        icmp_ln330_reg_1632 when (select_ln312_6_fu_635_p3(0) = '1') else 
        select_ln312_4_fu_621_p3;
    select_ln315_5_fu_655_p3 <= 
        icmp_ln330_reg_1632 when (select_ln312_6_fu_635_p3(0) = '1') else 
        select_ln312_5_fu_628_p3;
    select_ln315_6_fu_1394_p3 <= 
        ap_const_lv13_1 when (or_ln312_reg_1791(0) = '1') else 
        add_ln315_1_fu_1388_p2;
    select_ln315_fu_1190_p3 <= 
        ap_const_lv32_1 when (or_ln315_1_reg_1812(0) = '1') else 
        biasFlag_fu_154;
    select_ln317_10_fu_1381_p3 <= 
        ap_const_lv10_1 when (or_ln315_1_reg_1812(0) = '1') else 
        add_ln317_1_fu_1375_p2;
    select_ln317_1_fu_975_p3 <= 
        select_ln315_1_fu_846_p3 when (select_ln315_5_reg_1752(0) = '1') else 
        select_ln315_3_fu_886_p3;
    select_ln317_2_fu_1208_p3 <= 
        tobool87_not_mid118_fu_1202_p2 when (select_ln315_5_reg_1752(0) = '1') else 
        and_ln315_2_fu_1197_p2;
    select_ln317_3_fu_982_p3 <= 
        or_ln319_2_fu_920_p2 when (select_ln315_5_reg_1752(0) = '1') else 
        and_ln315_3_fu_899_p2;
    select_ln317_4_fu_662_p3 <= 
        icmp_ln330_reg_1632 when (select_ln315_5_fu_655_p3(0) = '1') else 
        select_ln315_4_fu_648_p3;
    select_ln317_5_fu_686_p3 <= 
        ap_const_lv8_0 when (or_ln317_3_fu_681_p2(0) = '1') else 
        out_ch_fu_150;
    select_ln317_6_fu_1026_p3 <= 
        ap_const_lv32_0 when (or_ln317_5_fu_1022_p2(0) = '1') else 
        groupIndex_fu_146;
    select_ln317_7_fu_1044_p3 <= 
        add_ln327_1_fu_1038_p2 when (select_ln317_4_reg_1764(0) = '1') else 
        select_ln317_1_fu_975_p3;
    select_ln317_8_fu_1057_p3 <= 
        xor_ln339_1_fu_1051_p2 when (select_ln317_4_reg_1764(0) = '1') else 
        select_ln317_3_fu_982_p3;
    select_ln317_9_fu_1367_p3 <= 
        ap_const_lv9_1 when (or_ln317_6_fu_1362_p2(0) = '1') else 
        add_ln317_fu_1352_p2;
    select_ln317_fu_968_p3 <= 
        p_mid112_fu_962_p2 when (select_ln315_5_reg_1752(0) = '1') else 
        select_ln315_2_fu_879_p3;
        sext_ln332_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln332_1_fu_1091_p2),17));

        sext_ln339_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_349_p4),64));

        sext_ln345_1_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_349_p4),64));

        sext_ln345_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_fu_1296_p4),64));

    shl_ln332_1_fu_1101_p3 <= (add_ln332_1_fu_1091_p2 & ap_const_lv3_0);
    shl_ln335_1_fu_1121_p2 <= std_logic_vector(shift_left(unsigned(select_ln317_6_fu_1026_p3),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln335_fu_1115_p2 <= std_logic_vector(shift_left(unsigned(select_ln317_6_fu_1026_p3),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln4_fu_1280_p3 <= (select_ln317_5_reg_1778 & ap_const_lv2_0);
    shl_ln_fu_1074_p3 <= (grp_fu_1482_p3 & ap_const_lv3_0);
    sub_ln332_1_fu_1109_p2 <= std_logic_vector(unsigned(shl_ln332_1_fu_1101_p3) - unsigned(sext_ln332_fu_1097_p1));
    sub_ln332_fu_1085_p2 <= std_logic_vector(unsigned(zext_ln332_1_fu_1081_p1) - unsigned(zext_ln332_fu_1071_p1));
    tmp_13_fu_414_p3 <= (bound80_fu_408_p2 & ap_const_lv2_0);
    tmp_14_fu_1227_p3 <= (select_ln317_5_reg_1778 & ap_const_lv4_0);
    tmp_15_fu_1238_p3 <= (select_ln317_5_reg_1778 & ap_const_lv6_0);
    tmp_16_fu_1139_p3 <= (add_ln332_214_fu_1133_p2 & ap_const_lv2_0);
    tmp_35_cast_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_370_p3),12));
        tmp_41_cast_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_fu_1139_p3),64));

    tmp_s_fu_370_p3 <= (p_read4 & ap_const_lv3_0);
    tobool87_not263_fu_1174_p2 <= "1" when (biasFlag_fu_154 = ap_const_lv32_0) else "0";
    tobool87_not_mid118_fu_1202_p2 <= "1" when (select_ln315_fu_1190_p3 = ap_const_lv32_0) else "0";
    tobool87_not_mid2186_fu_1180_p2 <= (tobool87_not263_fu_1174_p2 and not_exitcond_flatten134_reg_1720);
    trunc_ln8_fu_1296_p4 <= add_ln345_fu_1291_p2(63 downto 2);
    xor_ln312_fu_744_p2 <= (icmp_ln315_reg_1714 xor ap_const_lv1_1);
    xor_ln315_1_fu_893_p2 <= (or_ln315_1_fu_842_p2 xor ap_const_lv1_1);
    xor_ln315_fu_825_p2 <= (select_ln312_6_reg_1736 xor ap_const_lv1_1);
    xor_ln317_fu_925_p2 <= (select_ln315_5_reg_1752 xor ap_const_lv1_1);
    xor_ln319_fu_904_p2 <= (kernel_row_reg_292 xor ap_const_lv1_1);
    xor_ln322_fu_996_p2 <= (kernel_col_reg_304 xor ap_const_lv1_1);
    xor_ln339_1_fu_1051_p2 <= (or_ln322_3_fu_1017_p2 xor kernel_row_mid2_fu_989_p3);
    xor_ln339_fu_525_p2 <= (kernel_row_reg_292 xor kernel_col_reg_304);
    zext_ln319_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln312_1_fu_766_p3),14));
    zext_ln327_1_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln322_3_fu_1017_p2),3));
    zext_ln327_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_col_reg_304),3));
    zext_ln332_1_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1074_p3),14));
    zext_ln332_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1482_p3),14));
    zext_ln338_mid2180_fu_720_p3 <= 
        ap_const_lv7_0 when (icmp_ln312_reg_1671(0) = '1') else 
        empty_330_reg_1648;
    zext_ln345_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_1280_p3),64));
end behav;
