-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_attention_compute_skip is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    afterAct : IN STD_LOGIC_VECTOR (63 downto 0);
    buffer_result : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of kernel_attention_compute_skip is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv14_31 : STD_LOGIC_VECTOR (13 downto 0) := "00000000110001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal bound21_fu_73_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal bound21_reg_92 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_79_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_108 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_idle : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_ready : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal bound21_fu_73_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound21_fu_73_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal bound21_fu_73_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_attention_compute_skip_Pipeline_VITIS_LOOP_584_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln580 : IN STD_LOGIC_VECTOR (7 downto 0);
        bound66 : IN STD_LOGIC_VECTOR (15 downto 0);
        bound21 : IN STD_LOGIC_VECTOR (13 downto 0);
        afterAct : IN STD_LOGIC_VECTOR (63 downto 0);
        buffer_result : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_attention_mul_8ns_7ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56 : component kernel_attention_compute_skip_Pipeline_VITIS_LOOP_584_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start,
        ap_done => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done,
        ap_idle => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_idle,
        ap_ready => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_ready,
        m_axi_gmem_AWVALID => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => m_axi_gmem_WREADY,
        m_axi_gmem_WDATA => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => m_axi_gmem_BVALID,
        m_axi_gmem_BREADY => grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => m_axi_gmem_BRESP,
        m_axi_gmem_BID => m_axi_gmem_BID,
        m_axi_gmem_BUSER => m_axi_gmem_BUSER,
        zext_ln580 => p_read1,
        bound66 => tmp_reg_108,
        bound21 => bound21_reg_92,
        afterAct => afterAct,
        buffer_result => buffer_result);

    mul_8ns_7ns_14_1_1_U74 : component kernel_attention_mul_8ns_7ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 14)
    port map (
        din0 => bound21_fu_73_p0,
        din1 => bound21_fu_73_p1,
        dout => bound21_fu_73_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_ready = ap_const_logic_1)) then 
                    grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bound21_reg_92 <= bound21_fu_73_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    tmp_reg_108(15 downto 2) <= tmp_fu_79_p3(15 downto 2);
            end if;
        end if;
    end process;
    tmp_reg_108(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done)
    begin
        if ((grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done, ap_CS_fsm_state3)
    begin
        if ((((grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done, ap_CS_fsm_state3)
    begin
        if (((grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound21_fu_73_p0 <= bound21_fu_73_p00(8 - 1 downto 0);
    bound21_fu_73_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),14));
    bound21_fu_73_p1 <= ap_const_lv14_31(7 - 1 downto 0);
    grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_ap_start_reg;
    m_axi_gmem_ARADDR <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARADDR;
    m_axi_gmem_ARBURST <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARBURST;
    m_axi_gmem_ARCACHE <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARCACHE;
    m_axi_gmem_ARID <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARID;
    m_axi_gmem_ARLEN <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARLEN;
    m_axi_gmem_ARLOCK <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARLOCK;
    m_axi_gmem_ARPROT <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARPROT;
    m_axi_gmem_ARQOS <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARQOS;
    m_axi_gmem_ARREGION <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARREGION;
    m_axi_gmem_ARSIZE <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARSIZE;
    m_axi_gmem_ARUSER <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARUSER;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_ARVALID <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWADDR;
    m_axi_gmem_AWBURST <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWBURST;
    m_axi_gmem_AWCACHE <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWCACHE;
    m_axi_gmem_AWID <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWID;
    m_axi_gmem_AWLEN <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWLEN;
    m_axi_gmem_AWLOCK <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWLOCK;
    m_axi_gmem_AWPROT <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWPROT;
    m_axi_gmem_AWQOS <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWQOS;
    m_axi_gmem_AWREGION <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWREGION;
    m_axi_gmem_AWSIZE <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWSIZE;
    m_axi_gmem_AWUSER <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWUSER;

    m_axi_gmem_AWVALID_assign_proc : process(ap_CS_fsm_state2, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_AWVALID <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_AWVALID;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_CS_fsm_state2, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_BREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_BREADY <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_BREADY;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_state2, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_RREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_RREADY <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WDATA;
    m_axi_gmem_WID <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WID;
    m_axi_gmem_WLAST <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WLAST;
    m_axi_gmem_WSTRB <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WSTRB;
    m_axi_gmem_WUSER <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WUSER;

    m_axi_gmem_WVALID_assign_proc : process(ap_CS_fsm_state2, grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_WVALID <= grp_compute_skip_Pipeline_VITIS_LOOP_584_3_fu_56_m_axi_gmem_WVALID;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_79_p3 <= (bound21_reg_92 & ap_const_lv2_0);
end behav;
