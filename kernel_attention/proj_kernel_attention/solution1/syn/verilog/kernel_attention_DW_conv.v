// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_attention_DW_conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        in_r,
        kernel,
        bias,
        p_read4,
        out_r
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_state5 = 54'd16;
parameter    ap_ST_fsm_state6 = 54'd32;
parameter    ap_ST_fsm_state7 = 54'd64;
parameter    ap_ST_fsm_state8 = 54'd128;
parameter    ap_ST_fsm_state9 = 54'd256;
parameter    ap_ST_fsm_state10 = 54'd512;
parameter    ap_ST_fsm_state11 = 54'd1024;
parameter    ap_ST_fsm_state12 = 54'd2048;
parameter    ap_ST_fsm_state13 = 54'd4096;
parameter    ap_ST_fsm_state14 = 54'd8192;
parameter    ap_ST_fsm_state15 = 54'd16384;
parameter    ap_ST_fsm_state16 = 54'd32768;
parameter    ap_ST_fsm_state17 = 54'd65536;
parameter    ap_ST_fsm_state18 = 54'd131072;
parameter    ap_ST_fsm_state19 = 54'd262144;
parameter    ap_ST_fsm_state20 = 54'd524288;
parameter    ap_ST_fsm_state21 = 54'd1048576;
parameter    ap_ST_fsm_state22 = 54'd2097152;
parameter    ap_ST_fsm_state23 = 54'd4194304;
parameter    ap_ST_fsm_state24 = 54'd8388608;
parameter    ap_ST_fsm_state25 = 54'd16777216;
parameter    ap_ST_fsm_state26 = 54'd33554432;
parameter    ap_ST_fsm_state27 = 54'd67108864;
parameter    ap_ST_fsm_state28 = 54'd134217728;
parameter    ap_ST_fsm_state29 = 54'd268435456;
parameter    ap_ST_fsm_state30 = 54'd536870912;
parameter    ap_ST_fsm_state31 = 54'd1073741824;
parameter    ap_ST_fsm_state32 = 54'd2147483648;
parameter    ap_ST_fsm_state33 = 54'd4294967296;
parameter    ap_ST_fsm_state34 = 54'd8589934592;
parameter    ap_ST_fsm_state35 = 54'd17179869184;
parameter    ap_ST_fsm_state36 = 54'd34359738368;
parameter    ap_ST_fsm_state37 = 54'd68719476736;
parameter    ap_ST_fsm_state38 = 54'd137438953472;
parameter    ap_ST_fsm_state39 = 54'd274877906944;
parameter    ap_ST_fsm_state40 = 54'd549755813888;
parameter    ap_ST_fsm_state41 = 54'd1099511627776;
parameter    ap_ST_fsm_state42 = 54'd2199023255552;
parameter    ap_ST_fsm_state43 = 54'd4398046511104;
parameter    ap_ST_fsm_state44 = 54'd8796093022208;
parameter    ap_ST_fsm_state45 = 54'd17592186044416;
parameter    ap_ST_fsm_state46 = 54'd35184372088832;
parameter    ap_ST_fsm_state47 = 54'd70368744177664;
parameter    ap_ST_fsm_state48 = 54'd140737488355328;
parameter    ap_ST_fsm_state49 = 54'd281474976710656;
parameter    ap_ST_fsm_state50 = 54'd562949953421312;
parameter    ap_ST_fsm_state51 = 54'd1125899906842624;
parameter    ap_ST_fsm_state52 = 54'd2251799813685248;
parameter    ap_ST_fsm_state53 = 54'd4503599627370496;
parameter    ap_ST_fsm_state54 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] in_r;
input  [63:0] kernel;
input  [63:0] bias;
input  [7:0] p_read4;
input  [63:0] out_r;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg[31:0] m_axi_gmem_WDATA;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg[0:0] m_axi_gmem_ARID;
reg[31:0] m_axi_gmem_ARLEN;
reg[2:0] m_axi_gmem_ARSIZE;
reg[1:0] m_axi_gmem_ARBURST;
reg[1:0] m_axi_gmem_ARLOCK;
reg[3:0] m_axi_gmem_ARCACHE;
reg[2:0] m_axi_gmem_ARPROT;
reg[3:0] m_axi_gmem_ARQOS;
reg[3:0] m_axi_gmem_ARREGION;
reg[0:0] m_axi_gmem_ARUSER;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln335_reg_1864;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state13;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state16;
reg   [0:0] targetBlock_reg_1905;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state23;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
reg   [0:0] or_ln317_2_reg_1873;
wire   [9:0] p_read4_cast_fu_358_p1;
reg   [9:0] p_read4_cast_reg_1606;
wire   [8:0] cast1_fu_362_p1;
reg   [8:0] cast1_reg_1612;
wire  signed [12:0] bound31_cast_fu_388_p1;
reg  signed [12:0] bound31_cast_reg_1617;
wire   [15:0] bound80_fu_408_p2;
reg   [15:0] bound80_reg_1622;
wire   [17:0] tmp_13_fu_414_p3;
reg   [17:0] tmp_13_reg_1627;
wire   [0:0] icmp_ln330_fu_422_p2;
reg   [0:0] icmp_ln330_reg_1632;
wire   [6:0] empty_330_fu_515_p2;
reg   [6:0] empty_330_reg_1648;
wire    ap_CS_fsm_state2;
wire   [2:0] zext_ln327_fu_521_p1;
reg   [2:0] zext_ln327_reg_1653;
wire   [0:0] xor_ln339_fu_525_p2;
reg   [0:0] xor_ln339_reg_1658;
wire   [17:0] add_ln309_fu_536_p2;
reg   [17:0] add_ln309_reg_1666;
wire   [0:0] icmp_ln312_fu_545_p2;
reg   [0:0] icmp_ln312_reg_1671;
wire   [0:0] icmp_ln309_fu_531_p2;
wire   [2:0] p_mid2154_v_v_fu_556_p3;
reg   [2:0] p_mid2154_v_v_reg_1689;
wire   [1:0] empty_332_fu_568_p1;
reg   [1:0] empty_332_reg_1699;
wire   [0:0] icmp_ln317_fu_572_p2;
reg   [0:0] icmp_ln317_reg_1704;
wire   [0:0] icmp_ln317_1_fu_577_p2;
reg   [0:0] icmp_ln317_1_reg_1709;
wire   [0:0] icmp_ln315_fu_582_p2;
reg   [0:0] icmp_ln315_reg_1714;
wire   [0:0] not_exitcond_flatten134_fu_590_p2;
reg   [0:0] not_exitcond_flatten134_reg_1720;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_flatten77_mid2204_fu_616_p2;
reg   [0:0] exitcond_flatten77_mid2204_reg_1727;
wire   [0:0] select_ln312_6_fu_635_p3;
reg   [0:0] select_ln312_6_reg_1736;
wire   [0:0] or_ln315_fu_642_p2;
reg   [0:0] or_ln315_reg_1747;
wire   [0:0] select_ln315_5_fu_655_p3;
reg   [0:0] select_ln315_5_reg_1752;
wire   [0:0] select_ln317_4_fu_662_p3;
reg   [0:0] select_ln317_4_reg_1764;
wire   [0:0] or_ln317_1_fu_675_p2;
reg   [0:0] or_ln317_1_reg_1773;
wire   [7:0] select_ln317_5_fu_686_p3;
reg   [7:0] select_ln317_5_reg_1778;
wire   [0:0] or_ln312_fu_732_p2;
reg   [0:0] or_ln312_reg_1791;
wire    ap_CS_fsm_state5;
wire   [0:0] or_ln312_1_fu_749_p2;
reg   [0:0] or_ln312_1_reg_1797;
wire   [2:0] select_ln312_1_fu_766_p3;
reg   [2:0] select_ln312_1_reg_1802;
wire   [0:0] xor_ln315_fu_825_p2;
reg   [0:0] xor_ln315_reg_1807;
wire   [0:0] or_ln315_1_fu_842_p2;
reg   [0:0] or_ln315_1_reg_1812;
wire   [2:0] select_ln315_1_fu_846_p3;
reg   [2:0] select_ln315_1_reg_1818;
wire   [6:0] select_ln317_fu_968_p3;
reg   [6:0] select_ln317_reg_1823;
wire   [0:0] kernel_row_mid2_fu_989_p3;
reg   [0:0] kernel_row_mid2_reg_1828;
wire   [31:0] select_ln317_6_fu_1026_p3;
reg   [31:0] select_ln317_6_reg_1833;
wire   [2:0] select_ln317_7_fu_1044_p3;
reg   [2:0] select_ln317_7_reg_1839;
wire   [0:0] select_ln317_8_fu_1057_p3;
reg   [0:0] select_ln317_8_reg_1844;
wire   [0:0] kernel_col_mid2_fu_1064_p3;
reg   [0:0] kernel_col_mid2_reg_1849;
wire   [31:0] in_ch_fu_1127_p2;
reg   [31:0] in_ch_reg_1854;
wire   [63:0] empty_333_fu_1151_p2;
reg   [63:0] empty_333_reg_1859;
wire   [0:0] icmp_ln335_fu_1156_p2;
wire   [13:0] p_mid2156_fu_1168_p2;
reg   [13:0] p_mid2156_reg_1868;
wire   [0:0] or_ln317_2_fu_1215_p2;
wire   [31:0] biasFlag_1_mid2_fu_1220_p3;
reg   [31:0] biasFlag_1_mid2_reg_1877;
reg   [63:0] gmem_addr_reg_1882;
wire   [14:0] add_ln339_4_fu_1260_p2;
reg   [14:0] add_ln339_4_reg_1890;
reg   [31:0] gmem_addr_read_reg_1895;
wire   [31:0] bitcast_ln339_fu_1266_p1;
reg   [31:0] bitcast_ln339_reg_1900;
wire    ap_CS_fsm_state14;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_ap_return;
wire    ap_CS_fsm_state15;
reg   [63:0] gmem_addr_26_reg_1915;
reg   [63:0] gmem_addr_27_reg_1921;
reg   [31:0] gmem_addr_26_read_reg_1928;
reg   [31:0] gmem_addr_27_read_reg_1933;
wire   [31:0] add1_fu_333_p2;
reg   [31:0] add1_reg_1938;
wire   [7:0] add_ln346_fu_1342_p2;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_idle;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_ready;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWVALID;
wire   [63:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWADDR;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWID;
wire   [31:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLEN;
wire   [2:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWSIZE;
wire   [1:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWBURST;
wire   [1:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLOCK;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWCACHE;
wire   [2:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWPROT;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWQOS;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWREGION;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWUSER;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WVALID;
wire   [31:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WDATA;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WSTRB;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WLAST;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WID;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WUSER;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID;
wire   [63:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID;
wire   [31:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN;
wire   [2:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE;
wire   [1:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST;
wire   [1:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE;
wire   [2:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS;
wire   [3:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION;
wire   [0:0] grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_BREADY;
wire   [31:0] grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out_ap_vld;
wire   [31:0] grp_DW_conv_Pipeline_In_Channel_fu_316_add_out;
wire    grp_DW_conv_Pipeline_In_Channel_fu_316_add_out_ap_vld;
reg   [0:0] kernel_row_reg_292;
wire    ap_CS_fsm_state54;
reg   [0:0] kernel_col_reg_304;
reg    grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg;
reg   [31:0] add8122_loc_fu_194;
reg   [31:0] add_loc_fu_190;
wire  signed [63:0] sext_ln339_fu_1249_p1;
wire  signed [63:0] sext_ln345_fu_1306_p1;
wire  signed [63:0] sext_ln345_1_fu_1316_p1;
reg    ap_block_state6_io;
reg    ap_block_state16_io;
reg    ap_predicate_op284_writeresp_state22;
reg    ap_predicate_op286_writeresp_state22;
reg    ap_block_state22;
wire   [31:0] bitcast_ln339_4_fu_1276_p1;
wire   [31:0] bitcast_ln339_3_fu_1326_p1;
reg    ap_block_state43;
wire   [31:0] bitcast_ln345_2_fu_1338_p1;
reg   [31:0] groupIndex_fu_146;
wire   [31:0] groupIndex_1_fu_1470_p3;
reg   [7:0] out_ch_fu_150;
reg   [31:0] biasFlag_fu_154;
reg   [8:0] indvar_flatten_fu_158;
wire   [8:0] select_ln317_9_fu_1367_p3;
reg   [9:0] indvar_flatten26_fu_162;
wire   [9:0] select_ln317_10_fu_1381_p3;
reg   [2:0] col_fu_166;
reg   [12:0] indvar_flatten75_fu_170;
wire   [12:0] select_ln315_6_fu_1394_p3;
reg   [2:0] row_fu_174;
reg   [15:0] indvar_flatten132_fu_178;
wire   [15:0] select_ln312_7_fu_1407_p3;
reg   [2:0] batch_fu_182;
reg   [17:0] indvar_flatten205_fu_186;
wire   [31:0] add1_fu_333_p0;
wire   [31:0] add1_fu_333_p1;
wire   [10:0] tmp_s_fu_370_p3;
wire   [11:0] tmp_35_cast_fu_378_p1;
wire   [11:0] p_read4_cast265_fu_366_p1;
wire  signed [11:0] bound31_fu_382_p2;
wire   [14:0] p_shl1_fu_396_p3;
wire  signed [15:0] p_shl10_cast_fu_404_p1;
wire   [15:0] cast79_cast_cast_fu_392_p1;
wire   [2:0] kernel_row_cast_fu_489_p1;
wire   [2:0] empty_fu_493_p2;
wire   [5:0] p_shl_fu_503_p3;
wire   [6:0] p_shl_cast_fu_511_p1;
wire   [6:0] p_cast2_fu_499_p1;
wire   [2:0] add_ln309_1_fu_550_p2;
wire   [0:0] icmp_ln330_1_fu_595_p2;
wire   [0:0] icmp_ln330_mid2192_fu_600_p3;
wire   [0:0] exitcond_flatten_mid2196_fu_606_p3;
wire   [0:0] exitcond_flatten28_mid2200_fu_611_p3;
wire   [0:0] select_ln312_4_fu_621_p3;
wire   [0:0] select_ln312_5_fu_628_p3;
wire   [0:0] select_ln315_4_fu_648_p3;
wire   [0:0] or_ln317_fu_669_p2;
wire   [0:0] or_ln317_3_fu_681_p2;
wire   [2:0] row_mid2142_fu_704_p3;
wire   [0:0] xor_ln312_fu_744_p2;
wire   [0:0] kernel_row_mid2146_fu_710_p2;
wire   [0:0] kernel_col_mid2149_fu_715_p2;
wire   [2:0] add_ln312_fu_726_p2;
wire   [5:0] p_shl_mid_fu_781_p3;
wire   [6:0] p_shl_cast_mid1104_fu_789_p1;
wire   [6:0] p_cast2_mid198_fu_777_p1;
wire   [6:0] p_mid1106_fu_793_p2;
wire   [6:0] zext_ln338_mid2180_fu_720_p3;
wire   [2:0] add_ln327_fu_806_p2;
wire   [2:0] select_ln312_fu_736_p3;
wire   [0:0] and_ln312_fu_754_p2;
wire   [0:0] and_ln312_1_fu_760_p2;
wire   [2:0] add_ln315_fu_819_p2;
wire   [5:0] p_shl_mid2_fu_861_p3;
wire   [6:0] p_shl_cast_mid151_fu_869_p1;
wire   [6:0] p_cast2_mid145_fu_857_p1;
wire   [6:0] p_mid153_fu_873_p2;
wire   [6:0] select_ln312_2_fu_799_p3;
wire   [2:0] select_ln312_3_fu_811_p3;
wire   [0:0] xor_ln315_1_fu_893_p2;
wire   [0:0] xor_ln319_fu_904_p2;
wire   [0:0] or_ln319_fu_910_p2;
wire   [0:0] or_ln319_1_fu_915_p2;
wire   [0:0] and_ln315_1_fu_836_p2;
wire   [0:0] xor_ln317_fu_925_p2;
wire   [0:0] or_ln319_2_fu_920_p2;
wire   [2:0] kernel_row_cast_mid1_fu_936_p1;
wire   [2:0] p_mid1_fu_940_p2;
wire   [5:0] p_shl_mid1_fu_950_p3;
wire   [6:0] p_shl_cast_mid1_fu_958_p1;
wire   [6:0] p_cast2_mid1_fu_946_p1;
wire   [6:0] p_mid112_fu_962_p2;
wire   [6:0] select_ln315_2_fu_879_p3;
wire   [2:0] select_ln315_3_fu_886_p3;
wire   [0:0] and_ln315_3_fu_899_p2;
wire   [0:0] and_ln315_fu_830_p2;
wire   [0:0] xor_ln322_fu_996_p2;
wire   [0:0] or_ln322_fu_1002_p2;
wire   [0:0] or_ln322_1_fu_1007_p2;
wire   [0:0] or_ln322_2_fu_1012_p2;
wire   [0:0] or_ln317_5_fu_1022_p2;
wire   [0:0] or_ln322_3_fu_1017_p2;
wire   [2:0] zext_ln327_1_fu_1034_p1;
wire   [2:0] add_ln327_1_fu_1038_p2;
wire   [2:0] select_ln317_1_fu_975_p3;
wire   [0:0] xor_ln339_1_fu_1051_p2;
wire   [0:0] select_ln317_3_fu_982_p3;
wire   [0:0] and_ln317_fu_930_p2;
wire   [9:0] grp_fu_1482_p3;
wire   [12:0] shl_ln_fu_1074_p3;
wire   [13:0] zext_ln332_1_fu_1081_p1;
wire   [13:0] zext_ln332_fu_1071_p1;
wire   [13:0] sub_ln332_fu_1085_p2;
wire   [13:0] zext_ln319_fu_773_p1;
wire  signed [13:0] add_ln332_1_fu_1091_p2;
wire   [16:0] shl_ln332_1_fu_1101_p3;
wire  signed [16:0] sext_ln332_fu_1097_p1;
wire   [31:0] shl_ln335_fu_1115_p2;
wire   [31:0] shl_ln335_1_fu_1121_p2;
wire   [16:0] sub_ln332_1_fu_1109_p2;
wire   [16:0] select_ln315_3_cast_fu_853_p1;
wire   [16:0] add_ln332_214_fu_1133_p2;
wire   [18:0] tmp_16_fu_1139_p3;
wire  signed [63:0] tmp_41_cast_fu_1147_p1;
wire   [1:0] p_mid2156_fu_1168_p0;
wire   [12:0] p_mid2156_fu_1168_p1;
wire   [0:0] tobool87_not263_fu_1174_p2;
wire   [0:0] tobool87_not_mid2186_fu_1180_p2;
wire   [0:0] and_ln312_2_fu_1185_p2;
wire   [31:0] select_ln315_fu_1190_p3;
wire   [0:0] tobool87_not_mid118_fu_1202_p2;
wire   [0:0] and_ln315_2_fu_1197_p2;
wire   [0:0] select_ln317_2_fu_1208_p3;
wire   [11:0] tmp_14_fu_1227_p3;
wire   [13:0] tmp_15_fu_1238_p3;
wire   [61:0] grp_fu_349_p4;
wire   [14:0] p_cast8_fu_1245_p1;
wire   [14:0] p_cast9_fu_1234_p1;
wire   [9:0] shl_ln4_fu_1280_p3;
wire   [63:0] zext_ln345_fu_1287_p1;
wire   [63:0] add_ln345_fu_1291_p2;
wire   [61:0] trunc_ln8_fu_1296_p4;
wire   [7:0] grp_fu_1347_p0;
wire   [0:0] or_ln317_4_fu_1358_p2;
wire   [0:0] or_ln317_6_fu_1362_p2;
wire   [8:0] add_ln317_fu_1352_p2;
wire   [9:0] add_ln317_1_fu_1375_p2;
wire   [12:0] add_ln315_1_fu_1388_p2;
wire   [15:0] add_ln312_1_fu_1401_p2;
wire   [7:0] grp_fu_1347_p2;
wire   [0:0] icmp_ln346_fu_1459_p2;
wire   [31:0] add_ln347_fu_1465_p2;
wire   [2:0] grp_fu_1482_p0;
wire   [7:0] grp_fu_1482_p1;
wire   [7:0] grp_fu_1482_p2;
reg    grp_fu_1347_ap_start;
wire    grp_fu_1347_ap_done;
reg    grp_fu_1347_ce;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
reg   [53:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
reg    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
reg    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire   [9:0] grp_fu_1482_p00;
wire   [9:0] grp_fu_1482_p20;
wire   [13:0] p_mid2156_fu_1168_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
#0 grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg = 1'b0;
end

kernel_attention_DW_conv_Pipeline_In_Channel grp_DW_conv_Pipeline_In_Channel_fu_316(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start),
    .ap_done(grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done),
    .ap_idle(grp_DW_conv_Pipeline_In_Channel_fu_316_ap_idle),
    .ap_ready(grp_DW_conv_Pipeline_In_Channel_fu_316_ap_ready),
    .sext_ln335(in_ch_reg_1854),
    .bitcast_ln339(bitcast_ln339_reg_1900),
    .select_ln317(select_ln317_reg_1823),
    .p_mid2156(p_mid2156_reg_1868),
    .select_ln317_7(select_ln317_7_reg_1839),
    .in_r(in_r),
    .m_axi_gmem_AWVALID(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .select_ln317_8(select_ln317_8_reg_1844),
    .zext_ln339_2(add_ln339_4_reg_1890),
    .kernel(kernel),
    .add8122_out(grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out),
    .add8122_out_ap_vld(grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out_ap_vld),
    .add_out(grp_DW_conv_Pipeline_In_Channel_fu_316_add_out),
    .add_out_ap_vld(grp_DW_conv_Pipeline_In_Channel_fu_316_add_out_ap_vld),
    .ap_return(grp_DW_conv_Pipeline_In_Channel_fu_316_ap_return)
);

kernel_attention_fadd_32ns_32ns_32_1_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_1_full_dsp_1_U52(
    .din0(add1_fu_333_p0),
    .din1(add1_fu_333_p1),
    .dout(add1_fu_333_p2)
);

kernel_attention_mul_2ns_13ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
mul_2ns_13ns_14_1_1_U53(
    .din0(p_mid2156_fu_1168_p0),
    .din1(p_mid2156_fu_1168_p1),
    .dout(p_mid2156_fu_1168_p2)
);

kernel_attention_urem_8ns_8ns_8_12_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_8ns_8ns_8_12_seq_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1347_ap_start),
    .done(grp_fu_1347_ap_done),
    .din0(grp_fu_1347_p0),
    .din1(p_read4),
    .ce(grp_fu_1347_ce),
    .dout(grp_fu_1347_p2)
);

kernel_attention_mac_muladd_3ns_8ns_8ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_8ns_8ns_10_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1482_p0),
    .din1(grp_fu_1482_p1),
    .din2(grp_fu_1482_p2),
    .ce(1'b1),
    .dout(grp_fu_1482_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg <= 1'b1;
        end else if ((grp_DW_conv_Pipeline_In_Channel_fu_316_ap_ready == 1'b1)) begin
            grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        batch_fu_182 <= 3'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        batch_fu_182 <= p_mid2154_v_v_reg_1689;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        biasFlag_fu_154 <= 32'd1;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        biasFlag_fu_154 <= biasFlag_1_mid2_reg_1877;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_fu_166 <= 3'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        col_fu_166 <= select_ln315_1_reg_1818;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        groupIndex_fu_146 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        groupIndex_fu_146 <= groupIndex_1_fu_1470_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten132_fu_178 <= 16'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        indvar_flatten132_fu_178 <= select_ln312_7_fu_1407_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten205_fu_186 <= 18'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        indvar_flatten205_fu_186 <= add_ln309_reg_1666;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten26_fu_162 <= 10'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        indvar_flatten26_fu_162 <= select_ln317_10_fu_1381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten75_fu_170 <= 13'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        indvar_flatten75_fu_170 <= select_ln315_6_fu_1394_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_158 <= 9'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        indvar_flatten_fu_158 <= select_ln317_9_fu_1367_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        kernel_col_reg_304 <= kernel_col_mid2_reg_1849;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_col_reg_304 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        kernel_row_reg_292 <= kernel_row_mid2_reg_1828;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_row_reg_292 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_ch_fu_150 <= 8'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        out_ch_fu_150 <= add_ln346_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_fu_174 <= 3'd0;
    end else if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        row_fu_174 <= select_ln312_1_reg_1802;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add1_reg_1938 <= add1_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        add8122_loc_fu_194 <= grp_DW_conv_Pipeline_In_Channel_fu_316_add8122_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln309_reg_1666 <= add_ln309_fu_536_p2;
        empty_330_reg_1648 <= empty_330_fu_515_p2;
        xor_ln339_reg_1658 <= xor_ln339_fu_525_p2;
        zext_ln327_reg_1653[0] <= zext_ln327_fu_521_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd1))) begin
        add_ln339_4_reg_1890[14 : 4] <= add_ln339_4_fu_1260_p2[14 : 4];
        gmem_addr_reg_1882 <= sext_ln339_fu_1249_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_DW_conv_Pipeline_In_Channel_fu_316_add_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        add_loc_fu_190 <= grp_DW_conv_Pipeline_In_Channel_fu_316_add_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        biasFlag_1_mid2_reg_1877 <= biasFlag_1_mid2_fu_1220_p3;
        or_ln317_2_reg_1873 <= or_ln317_2_fu_1215_p2;
        p_mid2156_reg_1868 <= p_mid2156_fu_1168_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bitcast_ln339_reg_1900 <= bitcast_ln339_fu_1266_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bound31_cast_reg_1617 <= bound31_cast_fu_388_p1;
        bound80_reg_1622 <= bound80_fu_408_p2;
        cast1_reg_1612[7 : 0] <= cast1_fu_362_p1[7 : 0];
        icmp_ln330_reg_1632 <= icmp_ln330_fu_422_p2;
        p_read4_cast_reg_1606[7 : 0] <= p_read4_cast_fu_358_p1[7 : 0];
        tmp_13_reg_1627[17 : 2] <= tmp_13_fu_414_p3[17 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_fu_531_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_332_reg_1699 <= empty_332_fu_568_p1;
        icmp_ln312_reg_1671 <= icmp_ln312_fu_545_p2;
        icmp_ln315_reg_1714 <= icmp_ln315_fu_582_p2;
        icmp_ln317_1_reg_1709 <= icmp_ln317_1_fu_577_p2;
        icmp_ln317_reg_1704 <= icmp_ln317_fu_572_p2;
        p_mid2154_v_v_reg_1689 <= p_mid2154_v_v_fu_556_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_333_reg_1859 <= empty_333_fu_1151_p2;
        icmp_ln335_reg_1864 <= icmp_ln335_fu_1156_p2;
        in_ch_reg_1854[31 : 4] <= in_ch_fu_1127_p2[31 : 4];
        kernel_col_mid2_reg_1849 <= kernel_col_mid2_fu_1064_p3;
        kernel_row_mid2_reg_1828 <= kernel_row_mid2_fu_989_p3;
        or_ln312_1_reg_1797 <= or_ln312_1_fu_749_p2;
        or_ln312_reg_1791 <= or_ln312_fu_732_p2;
        or_ln315_1_reg_1812 <= or_ln315_1_fu_842_p2;
        select_ln312_1_reg_1802 <= select_ln312_1_fu_766_p3;
        select_ln315_1_reg_1818 <= select_ln315_1_fu_846_p3;
        select_ln317_6_reg_1833 <= select_ln317_6_fu_1026_p3;
        select_ln317_7_reg_1839 <= select_ln317_7_fu_1044_p3;
        select_ln317_8_reg_1844 <= select_ln317_8_fu_1057_p3;
        select_ln317_reg_1823 <= select_ln317_fu_968_p3;
        xor_ln315_reg_1807 <= xor_ln315_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exitcond_flatten77_mid2204_reg_1727 <= exitcond_flatten77_mid2204_fu_616_p2;
        not_exitcond_flatten134_reg_1720 <= not_exitcond_flatten134_fu_590_p2;
        or_ln315_reg_1747 <= or_ln315_fu_642_p2;
        or_ln317_1_reg_1773 <= or_ln317_1_fu_675_p2;
        select_ln312_6_reg_1736 <= select_ln312_6_fu_635_p3;
        select_ln315_5_reg_1752 <= select_ln315_5_fu_655_p3;
        select_ln317_4_reg_1764 <= select_ln317_4_fu_662_p3;
        select_ln317_5_reg_1778 <= select_ln317_5_fu_686_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        gmem_addr_26_read_reg_1928 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln317_2_reg_1873 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        gmem_addr_26_reg_1915 <= sext_ln345_fu_1306_p1;
        gmem_addr_27_reg_1921 <= sext_ln345_1_fu_1316_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        gmem_addr_27_read_reg_1933 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        gmem_addr_read_reg_1895 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        targetBlock_reg_1905 <= grp_DW_conv_Pipeline_In_Channel_fu_316_ap_return;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state16_io)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((((ap_predicate_op286_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_predicate_op284_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)))) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state36_blk = 1'b1;
    end else begin
        ap_ST_fsm_state36_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

always @ (*) begin
    if (((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0))) begin
        ap_ST_fsm_state43_blk = 1'b1;
    end else begin
        ap_ST_fsm_state43_blk = 1'b0;
    end
end

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state6_io)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln309_fu_531_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln309_fu_531_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | ((1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd1)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((or_ln317_2_reg_1873 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((1'b1 == ap_CS_fsm_state22) & (targetBlock_reg_1905 == 1'd0) & (icmp_ln335_reg_1864 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (targetBlock_reg_1905 == 1'd1) & (icmp_ln335_reg_1864 == 1'd1)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state13))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state23))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_1347_ap_start = 1'b1;
    end else begin
        grp_fu_1347_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1347_ce = 1'b1;
    end else begin
        grp_fu_1347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        m_axi_gmem_ARADDR = gmem_addr_27_reg_1921;
    end else if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        m_axi_gmem_ARADDR = gmem_addr_26_reg_1915;
    end else if (((1'b0 == ap_block_state6_io) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd1))) begin
        m_axi_gmem_ARADDR = sext_ln339_fu_1249_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARADDR = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARADDR;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARBURST = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARBURST;
    end else begin
        m_axi_gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARCACHE = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARCACHE;
    end else begin
        m_axi_gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARID = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARID;
    end else begin
        m_axi_gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if ((((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_state6_io) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd1)))) begin
        m_axi_gmem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARLEN = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLEN;
    end else begin
        m_axi_gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARLOCK = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARLOCK;
    end else begin
        m_axi_gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARPROT = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARPROT;
    end else begin
        m_axi_gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARQOS = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARQOS;
    end else begin
        m_axi_gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARREGION = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARREGION;
    end else begin
        m_axi_gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARSIZE = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARSIZE;
    end else begin
        m_axi_gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARUSER = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARUSER;
    end else begin
        m_axi_gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_state6_io) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_ARVALID = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_ARVALID;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        m_axi_gmem_AWADDR = gmem_addr_27_reg_1921;
    end else if ((((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd0)) | ((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd1)))) begin
        m_axi_gmem_AWADDR = gmem_addr_reg_1882;
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd0)) | ((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd1)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (or_ln317_2_reg_1873 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | (~(((ap_predicate_op286_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_predicate_op284_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (ap_predicate_op286_writeresp_state22 == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | (~(((ap_predicate_op286_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_predicate_op284_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (ap_predicate_op284_writeresp_state22 == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state36) & (m_axi_gmem_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state35) & (m_axi_gmem_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (m_axi_gmem_RVALID == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem_RREADY = grp_DW_conv_Pipeline_In_Channel_fu_316_m_axi_gmem_RREADY;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        m_axi_gmem_WDATA = bitcast_ln345_2_fu_1338_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        m_axi_gmem_WDATA = bitcast_ln339_3_fu_1326_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_axi_gmem_WDATA = bitcast_ln339_4_fu_1276_p1;
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln309_fu_531_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6_io) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((1'b0 == ap_block_state6_io) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln335_reg_1864 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_DW_conv_Pipeline_In_Channel_fu_316_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((1'b0 == ap_block_state16_io) & (1'b1 == ap_CS_fsm_state16) & (targetBlock_reg_1905 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if ((~(((ap_predicate_op286_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_predicate_op284_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (or_ln317_2_reg_1873 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else if ((~(((ap_predicate_op286_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_predicate_op284_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0))) & (or_ln317_2_reg_1873 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state28 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((m_axi_gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if ((~((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add1_fu_333_p0 = gmem_addr_27_read_reg_1933;

assign add1_fu_333_p1 = gmem_addr_26_read_reg_1928;

assign add_ln309_1_fu_550_p2 = (batch_fu_182 + 3'd1);

assign add_ln309_fu_536_p2 = (indvar_flatten205_fu_186 + 18'd1);

assign add_ln312_1_fu_1401_p2 = (indvar_flatten132_fu_178 + 16'd1);

assign add_ln312_fu_726_p2 = (row_mid2142_fu_704_p3 + 3'd1);

assign add_ln315_1_fu_1388_p2 = (indvar_flatten75_fu_170 + 13'd1);

assign add_ln315_fu_819_p2 = (select_ln312_fu_736_p3 + 3'd1);

assign add_ln317_1_fu_1375_p2 = (indvar_flatten26_fu_162 + 10'd1);

assign add_ln317_fu_1352_p2 = (indvar_flatten_fu_158 + 9'd1);

assign add_ln327_1_fu_1038_p2 = (zext_ln327_1_fu_1034_p1 + select_ln315_1_fu_846_p3);

assign add_ln327_fu_806_p2 = (zext_ln327_reg_1653 + col_fu_166);

assign add_ln332_1_fu_1091_p2 = (sub_ln332_fu_1085_p2 + zext_ln319_fu_773_p1);

assign add_ln332_214_fu_1133_p2 = (sub_ln332_1_fu_1109_p2 + select_ln315_3_cast_fu_853_p1);

assign add_ln339_4_fu_1260_p2 = (p_cast8_fu_1245_p1 + p_cast9_fu_1234_p1);

assign add_ln345_fu_1291_p2 = (zext_ln345_fu_1287_p1 + bias);

assign add_ln346_fu_1342_p2 = (select_ln317_5_reg_1778 + 8'd1);

assign add_ln347_fu_1465_p2 = (select_ln317_6_reg_1833 + 32'd1);

assign and_ln312_1_fu_760_p2 = (or_ln312_1_fu_749_p2 & kernel_col_mid2149_fu_715_p2);

assign and_ln312_2_fu_1185_p2 = (tobool87_not_mid2186_fu_1180_p2 & or_ln312_1_reg_1797);

assign and_ln312_fu_754_p2 = (or_ln312_1_fu_749_p2 & kernel_row_mid2146_fu_710_p2);

assign and_ln315_1_fu_836_p2 = (xor_ln315_fu_825_p2 & and_ln312_1_fu_760_p2);

assign and_ln315_2_fu_1197_p2 = (xor_ln315_reg_1807 & and_ln312_2_fu_1185_p2);

assign and_ln315_3_fu_899_p2 = (xor_ln339_reg_1658 & xor_ln315_1_fu_893_p2);

assign and_ln315_fu_830_p2 = (xor_ln315_fu_825_p2 & and_ln312_fu_754_p2);

assign and_ln317_fu_930_p2 = (xor_ln317_fu_925_p2 & and_ln315_1_fu_836_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state16_io = (((m_axi_gmem_AWREADY == 1'b0) & (targetBlock_reg_1905 == 1'd0)) | ((m_axi_gmem_AWREADY == 1'b0) & (targetBlock_reg_1905 == 1'd1)));
end

always @ (*) begin
    ap_block_state22 = (((ap_predicate_op286_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_predicate_op284_writeresp_state22 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state43 = ((or_ln317_2_reg_1873 == 1'd0) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln335_reg_1864 == 1'd1));
end

always @ (*) begin
    ap_predicate_op284_writeresp_state22 = ((targetBlock_reg_1905 == 1'd0) & (icmp_ln335_reg_1864 == 1'd1));
end

always @ (*) begin
    ap_predicate_op286_writeresp_state22 = ((targetBlock_reg_1905 == 1'd1) & (icmp_ln335_reg_1864 == 1'd1));
end

assign biasFlag_1_mid2_fu_1220_p3 = ((select_ln317_4_reg_1764[0:0] == 1'b1) ? 32'd0 : select_ln315_fu_1190_p3);

assign bitcast_ln339_3_fu_1326_p1 = add8122_loc_fu_194;

assign bitcast_ln339_4_fu_1276_p1 = add_loc_fu_190;

assign bitcast_ln339_fu_1266_p1 = gmem_addr_read_reg_1895;

assign bitcast_ln345_2_fu_1338_p1 = add1_reg_1938;

assign bound31_cast_fu_388_p1 = bound31_fu_382_p2;

assign bound31_fu_382_p2 = (tmp_35_cast_fu_378_p1 - p_read4_cast265_fu_366_p1);

assign bound80_fu_408_p2 = ($signed(p_shl10_cast_fu_404_p1) - $signed(cast79_cast_cast_fu_392_p1));

assign cast1_fu_362_p1 = p_read4;

assign cast79_cast_cast_fu_392_p1 = $unsigned(bound31_cast_fu_388_p1);

assign empty_330_fu_515_p2 = (p_shl_cast_fu_511_p1 - p_cast2_fu_499_p1);

assign empty_332_fu_568_p1 = p_mid2154_v_v_fu_556_p3[1:0];

assign empty_333_fu_1151_p2 = ($signed(tmp_41_cast_fu_1147_p1) + $signed(out_r));

assign empty_fu_493_p2 = (kernel_row_cast_fu_489_p1 + row_fu_174);

assign exitcond_flatten28_mid2200_fu_611_p3 = ((icmp_ln312_reg_1671[0:0] == 1'b1) ? icmp_ln330_reg_1632 : icmp_ln317_1_reg_1709);

assign exitcond_flatten77_mid2204_fu_616_p2 = (not_exitcond_flatten134_fu_590_p2 & icmp_ln315_reg_1714);

assign exitcond_flatten_mid2196_fu_606_p3 = ((icmp_ln312_reg_1671[0:0] == 1'b1) ? icmp_ln330_reg_1632 : icmp_ln317_reg_1704);

assign groupIndex_1_fu_1470_p3 = ((icmp_ln346_fu_1459_p2[0:0] == 1'b1) ? add_ln347_fu_1465_p2 : select_ln317_6_reg_1833);

assign grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start = grp_DW_conv_Pipeline_In_Channel_fu_316_ap_start_reg;

assign grp_fu_1347_p0 = (select_ln317_5_reg_1778 + 8'd1);

assign grp_fu_1482_p0 = grp_fu_1482_p00;

assign grp_fu_1482_p00 = p_mid2154_v_v_fu_556_p3;

assign grp_fu_1482_p1 = p_read4_cast_reg_1606;

assign grp_fu_1482_p2 = grp_fu_1482_p20;

assign grp_fu_1482_p20 = select_ln317_5_fu_686_p3;

assign grp_fu_349_p4 = {{empty_333_reg_1859[63:2]}};

assign icmp_ln309_fu_531_p2 = ((indvar_flatten205_fu_186 == tmp_13_reg_1627) ? 1'b1 : 1'b0);

assign icmp_ln312_fu_545_p2 = ((indvar_flatten132_fu_178 == bound80_reg_1622) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_582_p2 = ((indvar_flatten75_fu_170 == bound31_cast_reg_1617) ? 1'b1 : 1'b0);

assign icmp_ln317_1_fu_577_p2 = ((indvar_flatten26_fu_162 == p_read4_cast_reg_1606) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_572_p2 = ((indvar_flatten_fu_158 == cast1_reg_1612) ? 1'b1 : 1'b0);

assign icmp_ln330_1_fu_595_p2 = ((out_ch_fu_150 == p_read4) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_422_p2 = ((p_read4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln330_mid2192_fu_600_p3 = ((icmp_ln312_reg_1671[0:0] == 1'b1) ? icmp_ln330_reg_1632 : icmp_ln330_1_fu_595_p2);

assign icmp_ln335_fu_1156_p2 = (($signed(in_ch_fu_1127_p2) < $signed(32'd80)) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_1459_p2 = ((grp_fu_1347_p2 == 8'd0) ? 1'b1 : 1'b0);

assign in_ch_fu_1127_p2 = (shl_ln335_fu_1115_p2 + shl_ln335_1_fu_1121_p2);

assign kernel_col_mid2149_fu_715_p2 = (not_exitcond_flatten134_reg_1720 & kernel_col_reg_304);

assign kernel_col_mid2_fu_1064_p3 = ((select_ln317_4_reg_1764[0:0] == 1'b1) ? or_ln322_3_fu_1017_p2 : and_ln317_fu_930_p2);

assign kernel_row_cast_fu_489_p1 = kernel_row_reg_292;

assign kernel_row_cast_mid1_fu_936_p1 = or_ln319_2_fu_920_p2;

assign kernel_row_mid2146_fu_710_p2 = (not_exitcond_flatten134_reg_1720 & kernel_row_reg_292);

assign kernel_row_mid2_fu_989_p3 = ((select_ln315_5_reg_1752[0:0] == 1'b1) ? or_ln319_2_fu_920_p2 : and_ln315_fu_830_p2);

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign not_exitcond_flatten134_fu_590_p2 = (icmp_ln312_reg_1671 ^ 1'd1);

assign or_ln312_1_fu_749_p2 = (xor_ln312_fu_744_p2 | icmp_ln312_reg_1671);

assign or_ln312_fu_732_p2 = (icmp_ln312_reg_1671 | exitcond_flatten77_mid2204_reg_1727);

assign or_ln315_1_fu_842_p2 = (or_ln315_reg_1747 | icmp_ln312_reg_1671);

assign or_ln315_fu_642_p2 = (select_ln312_6_fu_635_p3 | exitcond_flatten77_mid2204_fu_616_p2);

assign or_ln317_1_fu_675_p2 = (or_ln317_fu_669_p2 | or_ln315_fu_642_p2);

assign or_ln317_2_fu_1215_p2 = (select_ln317_4_reg_1764 | select_ln317_2_fu_1208_p3);

assign or_ln317_3_fu_681_p2 = (or_ln317_1_fu_675_p2 | icmp_ln312_reg_1671);

assign or_ln317_4_fu_1358_p2 = (select_ln315_5_reg_1752 | select_ln312_6_reg_1736);

assign or_ln317_5_fu_1022_p2 = (or_ln317_1_reg_1773 | icmp_ln312_reg_1671);

assign or_ln317_6_fu_1362_p2 = (or_ln317_4_fu_1358_p2 | or_ln312_reg_1791);

assign or_ln317_fu_669_p2 = (select_ln317_4_fu_662_p3 | select_ln315_5_fu_655_p3);

assign or_ln319_1_fu_915_p2 = (or_ln319_fu_910_p2 | exitcond_flatten77_mid2204_reg_1727);

assign or_ln319_2_fu_920_p2 = (select_ln312_6_reg_1736 | or_ln319_1_fu_915_p2);

assign or_ln319_fu_910_p2 = (xor_ln319_fu_904_p2 | icmp_ln312_reg_1671);

assign or_ln322_1_fu_1007_p2 = (or_ln322_fu_1002_p2 | exitcond_flatten77_mid2204_reg_1727);

assign or_ln322_2_fu_1012_p2 = (select_ln312_6_reg_1736 | or_ln322_1_fu_1007_p2);

assign or_ln322_3_fu_1017_p2 = (select_ln315_5_reg_1752 | or_ln322_2_fu_1012_p2);

assign or_ln322_fu_1002_p2 = (xor_ln322_fu_996_p2 | icmp_ln312_reg_1671);

assign p_cast2_fu_499_p1 = empty_fu_493_p2;

assign p_cast2_mid145_fu_857_p1 = select_ln312_1_fu_766_p3;

assign p_cast2_mid198_fu_777_p1 = add_ln312_fu_726_p2;

assign p_cast2_mid1_fu_946_p1 = p_mid1_fu_940_p2;

assign p_cast8_fu_1245_p1 = tmp_15_fu_1238_p3;

assign p_cast9_fu_1234_p1 = tmp_14_fu_1227_p3;

assign p_mid1106_fu_793_p2 = (p_shl_cast_mid1104_fu_789_p1 - p_cast2_mid198_fu_777_p1);

assign p_mid112_fu_962_p2 = (p_shl_cast_mid1_fu_958_p1 - p_cast2_mid1_fu_946_p1);

assign p_mid153_fu_873_p2 = (p_shl_cast_mid151_fu_869_p1 - p_cast2_mid145_fu_857_p1);

assign p_mid1_fu_940_p2 = (kernel_row_cast_mid1_fu_936_p1 + select_ln312_1_fu_766_p3);

assign p_mid2154_v_v_fu_556_p3 = ((icmp_ln312_fu_545_p2[0:0] == 1'b1) ? add_ln309_1_fu_550_p2 : batch_fu_182);

assign p_mid2156_fu_1168_p0 = p_mid2156_fu_1168_p00;

assign p_mid2156_fu_1168_p00 = empty_332_reg_1699;

assign p_mid2156_fu_1168_p1 = 14'd3920;

assign p_read4_cast265_fu_366_p1 = p_read4;

assign p_read4_cast_fu_358_p1 = p_read4;

assign p_shl10_cast_fu_404_p1 = $signed(p_shl1_fu_396_p3);

assign p_shl1_fu_396_p3 = {{bound31_fu_382_p2}, {3'd0}};

assign p_shl_cast_fu_511_p1 = p_shl_fu_503_p3;

assign p_shl_cast_mid1104_fu_789_p1 = p_shl_mid_fu_781_p3;

assign p_shl_cast_mid151_fu_869_p1 = p_shl_mid2_fu_861_p3;

assign p_shl_cast_mid1_fu_958_p1 = p_shl_mid1_fu_950_p3;

assign p_shl_fu_503_p3 = {{empty_fu_493_p2}, {3'd0}};

assign p_shl_mid1_fu_950_p3 = {{p_mid1_fu_940_p2}, {3'd0}};

assign p_shl_mid2_fu_861_p3 = {{select_ln312_1_fu_766_p3}, {3'd0}};

assign p_shl_mid_fu_781_p3 = {{add_ln312_fu_726_p2}, {3'd0}};

assign row_mid2142_fu_704_p3 = ((icmp_ln312_reg_1671[0:0] == 1'b1) ? 3'd0 : row_fu_174);

assign select_ln312_1_fu_766_p3 = ((exitcond_flatten77_mid2204_reg_1727[0:0] == 1'b1) ? add_ln312_fu_726_p2 : row_mid2142_fu_704_p3);

assign select_ln312_2_fu_799_p3 = ((exitcond_flatten77_mid2204_reg_1727[0:0] == 1'b1) ? p_mid1106_fu_793_p2 : zext_ln338_mid2180_fu_720_p3);

assign select_ln312_3_fu_811_p3 = ((or_ln312_fu_732_p2[0:0] == 1'b1) ? 3'd0 : add_ln327_fu_806_p2);

assign select_ln312_4_fu_621_p3 = ((exitcond_flatten77_mid2204_fu_616_p2[0:0] == 1'b1) ? icmp_ln330_reg_1632 : icmp_ln330_mid2192_fu_600_p3);

assign select_ln312_5_fu_628_p3 = ((exitcond_flatten77_mid2204_fu_616_p2[0:0] == 1'b1) ? icmp_ln330_reg_1632 : exitcond_flatten_mid2196_fu_606_p3);

assign select_ln312_6_fu_635_p3 = ((exitcond_flatten77_mid2204_fu_616_p2[0:0] == 1'b1) ? icmp_ln330_reg_1632 : exitcond_flatten28_mid2200_fu_611_p3);

assign select_ln312_7_fu_1407_p3 = ((icmp_ln312_reg_1671[0:0] == 1'b1) ? 16'd1 : add_ln312_1_fu_1401_p2);

assign select_ln312_fu_736_p3 = ((or_ln312_fu_732_p2[0:0] == 1'b1) ? 3'd0 : col_fu_166);

assign select_ln315_1_fu_846_p3 = ((select_ln312_6_reg_1736[0:0] == 1'b1) ? add_ln315_fu_819_p2 : select_ln312_fu_736_p3);

assign select_ln315_2_fu_879_p3 = ((select_ln312_6_reg_1736[0:0] == 1'b1) ? p_mid153_fu_873_p2 : select_ln312_2_fu_799_p3);

assign select_ln315_3_cast_fu_853_p1 = select_ln315_1_fu_846_p3;

assign select_ln315_3_fu_886_p3 = ((select_ln312_6_reg_1736[0:0] == 1'b1) ? add_ln315_fu_819_p2 : select_ln312_3_fu_811_p3);

assign select_ln315_4_fu_648_p3 = ((select_ln312_6_fu_635_p3[0:0] == 1'b1) ? icmp_ln330_reg_1632 : select_ln312_4_fu_621_p3);

assign select_ln315_5_fu_655_p3 = ((select_ln312_6_fu_635_p3[0:0] == 1'b1) ? icmp_ln330_reg_1632 : select_ln312_5_fu_628_p3);

assign select_ln315_6_fu_1394_p3 = ((or_ln312_reg_1791[0:0] == 1'b1) ? 13'd1 : add_ln315_1_fu_1388_p2);

assign select_ln315_fu_1190_p3 = ((or_ln315_1_reg_1812[0:0] == 1'b1) ? 32'd1 : biasFlag_fu_154);

assign select_ln317_10_fu_1381_p3 = ((or_ln315_1_reg_1812[0:0] == 1'b1) ? 10'd1 : add_ln317_1_fu_1375_p2);

assign select_ln317_1_fu_975_p3 = ((select_ln315_5_reg_1752[0:0] == 1'b1) ? select_ln315_1_fu_846_p3 : select_ln315_3_fu_886_p3);

assign select_ln317_2_fu_1208_p3 = ((select_ln315_5_reg_1752[0:0] == 1'b1) ? tobool87_not_mid118_fu_1202_p2 : and_ln315_2_fu_1197_p2);

assign select_ln317_3_fu_982_p3 = ((select_ln315_5_reg_1752[0:0] == 1'b1) ? or_ln319_2_fu_920_p2 : and_ln315_3_fu_899_p2);

assign select_ln317_4_fu_662_p3 = ((select_ln315_5_fu_655_p3[0:0] == 1'b1) ? icmp_ln330_reg_1632 : select_ln315_4_fu_648_p3);

assign select_ln317_5_fu_686_p3 = ((or_ln317_3_fu_681_p2[0:0] == 1'b1) ? 8'd0 : out_ch_fu_150);

assign select_ln317_6_fu_1026_p3 = ((or_ln317_5_fu_1022_p2[0:0] == 1'b1) ? 32'd0 : groupIndex_fu_146);

assign select_ln317_7_fu_1044_p3 = ((select_ln317_4_reg_1764[0:0] == 1'b1) ? add_ln327_1_fu_1038_p2 : select_ln317_1_fu_975_p3);

assign select_ln317_8_fu_1057_p3 = ((select_ln317_4_reg_1764[0:0] == 1'b1) ? xor_ln339_1_fu_1051_p2 : select_ln317_3_fu_982_p3);

assign select_ln317_9_fu_1367_p3 = ((or_ln317_6_fu_1362_p2[0:0] == 1'b1) ? 9'd1 : add_ln317_fu_1352_p2);

assign select_ln317_fu_968_p3 = ((select_ln315_5_reg_1752[0:0] == 1'b1) ? p_mid112_fu_962_p2 : select_ln315_2_fu_879_p3);

assign sext_ln332_fu_1097_p1 = add_ln332_1_fu_1091_p2;

assign sext_ln339_fu_1249_p1 = $signed(grp_fu_349_p4);

assign sext_ln345_1_fu_1316_p1 = $signed(grp_fu_349_p4);

assign sext_ln345_fu_1306_p1 = $signed(trunc_ln8_fu_1296_p4);

assign shl_ln332_1_fu_1101_p3 = {{add_ln332_1_fu_1091_p2}, {3'd0}};

assign shl_ln335_1_fu_1121_p2 = select_ln317_6_fu_1026_p3 << 32'd4;

assign shl_ln335_fu_1115_p2 = select_ln317_6_fu_1026_p3 << 32'd6;

assign shl_ln4_fu_1280_p3 = {{select_ln317_5_reg_1778}, {2'd0}};

assign shl_ln_fu_1074_p3 = {{grp_fu_1482_p3}, {3'd0}};

assign sub_ln332_1_fu_1109_p2 = ($signed(shl_ln332_1_fu_1101_p3) - $signed(sext_ln332_fu_1097_p1));

assign sub_ln332_fu_1085_p2 = (zext_ln332_1_fu_1081_p1 - zext_ln332_fu_1071_p1);

assign tmp_13_fu_414_p3 = {{bound80_fu_408_p2}, {2'd0}};

assign tmp_14_fu_1227_p3 = {{select_ln317_5_reg_1778}, {4'd0}};

assign tmp_15_fu_1238_p3 = {{select_ln317_5_reg_1778}, {6'd0}};

assign tmp_16_fu_1139_p3 = {{add_ln332_214_fu_1133_p2}, {2'd0}};

assign tmp_35_cast_fu_378_p1 = tmp_s_fu_370_p3;

assign tmp_41_cast_fu_1147_p1 = $signed(tmp_16_fu_1139_p3);

assign tmp_s_fu_370_p3 = {{p_read4}, {3'd0}};

assign tobool87_not263_fu_1174_p2 = ((biasFlag_fu_154 == 32'd0) ? 1'b1 : 1'b0);

assign tobool87_not_mid118_fu_1202_p2 = ((select_ln315_fu_1190_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tobool87_not_mid2186_fu_1180_p2 = (tobool87_not263_fu_1174_p2 & not_exitcond_flatten134_reg_1720);

assign trunc_ln8_fu_1296_p4 = {{add_ln345_fu_1291_p2[63:2]}};

assign xor_ln312_fu_744_p2 = (icmp_ln315_reg_1714 ^ 1'd1);

assign xor_ln315_1_fu_893_p2 = (or_ln315_1_fu_842_p2 ^ 1'd1);

assign xor_ln315_fu_825_p2 = (select_ln312_6_reg_1736 ^ 1'd1);

assign xor_ln317_fu_925_p2 = (select_ln315_5_reg_1752 ^ 1'd1);

assign xor_ln319_fu_904_p2 = (kernel_row_reg_292 ^ 1'd1);

assign xor_ln322_fu_996_p2 = (kernel_col_reg_304 ^ 1'd1);

assign xor_ln339_1_fu_1051_p2 = (or_ln322_3_fu_1017_p2 ^ kernel_row_mid2_fu_989_p3);

assign xor_ln339_fu_525_p2 = (kernel_row_reg_292 ^ kernel_col_reg_304);

assign zext_ln319_fu_773_p1 = select_ln312_1_fu_766_p3;

assign zext_ln327_1_fu_1034_p1 = or_ln322_3_fu_1017_p2;

assign zext_ln327_fu_521_p1 = kernel_col_reg_304;

assign zext_ln332_1_fu_1081_p1 = shl_ln_fu_1074_p3;

assign zext_ln332_fu_1071_p1 = grp_fu_1482_p3;

assign zext_ln338_mid2180_fu_720_p3 = ((icmp_ln312_reg_1671[0:0] == 1'b1) ? 7'd0 : empty_330_reg_1648);

assign zext_ln345_fu_1287_p1 = shl_ln4_fu_1280_p3;

always @ (posedge ap_clk) begin
    p_read4_cast_reg_1606[9:8] <= 2'b00;
    cast1_reg_1612[8] <= 1'b0;
    tmp_13_reg_1627[1:0] <= 2'b00;
    zext_ln327_reg_1653[2:1] <= 2'b00;
    in_ch_reg_1854[3:0] <= 4'b0000;
    add_ln339_4_reg_1890[3:0] <= 4'b0000;
end

endmodule //kernel_attention_DW_conv
