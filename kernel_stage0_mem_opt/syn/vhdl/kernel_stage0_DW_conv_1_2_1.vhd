-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_stage0_DW_conv_1_2_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    kernel : IN STD_LOGIC_VECTOR (63 downto 0);
    bias : IN STD_LOGIC_VECTOR (63 downto 0);
    img_1_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    img_1_ce0 : OUT STD_LOGIC;
    img_1_we0 : OUT STD_LOGIC;
    img_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    img_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_814_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_814_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_814_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_814_p_ce : OUT STD_LOGIC;
    grp_fu_818_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_818_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_818_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_818_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_818_p_ce : OUT STD_LOGIC );
end;


architecture behav of kernel_stage0_DW_conv_1_2_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv17_1B900 : STD_LOGIC_VECTOR (16 downto 0) := "11011100100000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv11_3F0 : STD_LOGIC_VECTOR (10 downto 0) := "01111110000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_1B : STD_LOGIC_VECTOR (9 downto 0) := "0000011011";
    constant ap_const_lv19_3100 : STD_LOGIC_VECTOR (18 downto 0) := "0000011000100000000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv20_49800 : STD_LOGIC_VECTOR (19 downto 0) := "01001001100000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln38_fu_465_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln38_reg_1283 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln41_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1288 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_7_fu_653_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln38_7_reg_1293 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln41_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_reg_1298 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln41_fu_727_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln41_reg_1303 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln41_7_fu_805_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln41_7_reg_1308 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln45_fu_831_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln45_reg_1313 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln45_2_cast_fu_887_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln45_2_cast_reg_1318 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln45_4_fu_925_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln45_4_reg_1323 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln48_fu_933_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln48_reg_1328 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool87_not_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool87_not_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln63_fu_977_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln63_reg_1341 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln56_fu_988_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln56_reg_1346 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln56_1_fu_994_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln56_1_reg_1351 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln72_fu_1006_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln72_reg_1359 : STD_LOGIC_VECTOR (4 downto 0);
    signal in_ch_fu_1022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_ch_reg_1366 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln56_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_sum_fu_1039_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_sum_reg_1371 : STD_LOGIC_VECTOR (19 downto 0);
    signal img_1_addr_reg_1376 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln61_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_reg_1381 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln64_1_fu_1061_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln64_1_reg_1385 : STD_LOGIC_VECTOR (10 downto 0);
    signal gmem_addr_2_reg_1393 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem_addr_2_read_reg_1399 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln71_fu_1171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal groupIndex_1_fu_1205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_done : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_idle : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_ready : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_ce0 : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_we0 : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_ce : STD_LOGIC;
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_ce : STD_LOGIC;
    signal out_ch_reg_212 : STD_LOGIC_VECTOR (4 downto 0);
    signal groupIndex_reg_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_236 : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul137_reg_247 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start_reg : STD_LOGIC := '0';
    signal p_sum_cast_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln71_fu_1161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal biasFlag_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln41_1_fu_681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_col_fu_148 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln48_fu_1072_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_row_fu_152 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_156 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln45_5_fu_1083_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_fu_160 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten49_fu_164 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln41_8_fu_1096_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_fu_168 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten119_fu_172 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_335_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl1_fu_347_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_343_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_fu_355_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_365_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_359_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln41_1_fu_377_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_399_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_405_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln41_fu_373_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_fu_415_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_fu_423_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln45_fu_395_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_149_fu_409_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_fu_441_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_fu_433_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl3_cast_fu_449_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln38_1_fu_491_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_mid1_fu_497_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl1_mid1_fu_509_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_mid1_fu_505_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_mid1_fu_517_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_mid165_fu_521_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_mid_fu_535_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln38_2_fu_547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_389_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln41_2_fu_543_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid191_fu_575_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_mid_fu_597_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_mid_fu_589_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl3_cast_mid1109_fu_605_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_mid1111_fu_609_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_151_fu_453_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln48_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln38_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_fu_483_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln38_1_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln41_fu_661_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln52_mid1_fu_693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln38_3_fu_559_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln41_2_fu_701_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln38_1_fu_527_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln41_3_fu_689_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp2_mid1_fu_713_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln38_4_fu_567_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln41_3_fu_719_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln41_4_fu_555_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid125_fu_731_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln38_5_fu_581_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_150_fu_427_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl3_mid2_fu_761_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_mid2_fu_753_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl3_cast_mid143_fu_769_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_mid145_fu_773_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln38_6_fu_615_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln41_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln38_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_1_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln41_fu_673_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln41_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_1_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln45_fu_813_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_mid1_fu_843_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid1_fu_847_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln41_4_fu_737_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_mid1_fu_861_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_mid1_fu_869_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln45_1_fu_839_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid14_fu_873_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln41_5_fu_745_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln45_2_fu_879_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl3_mid1_fu_899_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_mid1_fu_891_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl3_cast_mid1_fu_907_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_mid16_fu_911_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln41_6_fu_779_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln53_1_fu_937_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln53_fu_943_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln41_2_cast_fu_709_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln53_fu_947_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln45_1_fu_853_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln53_fu_953_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln56_fu_973_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln45_3_fu_917_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln61_fu_1016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln61_fu_1012_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp3_fu_1033_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_cast15_fu_1029_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln64_fu_1056_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln45_1_fu_1077_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln41_1_fu_1090_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln4_fu_1134_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln71_fu_1142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln71_fu_1146_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln5_fu_1151_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln72_1_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln72_1_fu_1180_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln72_fu_1186_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln72_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln73_fu_1199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_271_ce : STD_LOGIC;
    signal grp_fu_1419_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_stage0_DW_conv_1_2_1_Pipeline_In_Channel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln61 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_sum_cast : IN STD_LOGIC_VECTOR (19 downto 0);
        sext_ln63 : IN STD_LOGIC_VECTOR (16 downto 0);
        sext_ln64 : IN STD_LOGIC_VECTOR (10 downto 0);
        kernel : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        img_1_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        img_1_ce0 : OUT STD_LOGIC;
        img_1_we0 : OUT STD_LOGIC;
        img_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_271_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_271_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_271_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_271_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_271_p_ce : OUT STD_LOGIC;
        grp_fu_1419_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1419_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1419_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1419_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_stage0_fadd_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_stage0_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258 : component kernel_stage0_DW_conv_1_2_1_Pipeline_In_Channel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start,
        ap_done => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_done,
        ap_idle => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_idle,
        ap_ready => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_ready,
        sext_ln61 => in_ch_reg_1366,
        p_sum_cast => p_sum_reg_1371,
        sext_ln63 => add_ln63_reg_1341,
        sext_ln64 => add_ln64_1_reg_1385,
        kernel => kernel,
        m_axi_gmem_AWVALID => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        img_1_address0 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_address0,
        img_1_ce0 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_ce0,
        img_1_we0 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_we0,
        img_1_d0 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_d0,
        img_1_q0 => img_1_q0,
        ap_return => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_return,
        grp_fu_271_p_din0 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din0,
        grp_fu_271_p_din1 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din1,
        grp_fu_271_p_opcode => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_opcode,
        grp_fu_271_p_dout0 => grp_fu_818_p_dout0,
        grp_fu_271_p_ce => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_ce,
        grp_fu_1419_p_din0 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_din0,
        grp_fu_1419_p_din1 => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_din1,
        grp_fu_1419_p_dout0 => grp_fu_814_p_dout0,
        grp_fu_1419_p_ce => grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0))) then 
                    grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_ready = ap_const_logic_1)) then 
                    grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    biasFlag_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                biasFlag_fu_144 <= ap_const_lv32_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_2_fu_959_p3 = ap_const_lv1_1) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then 
                biasFlag_fu_144 <= select_ln41_1_fu_681_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_1) and (tmp_2_reg_1333 = ap_const_lv1_0))) then 
                biasFlag_fu_144 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    col_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                col_fu_160 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                col_fu_160 <= select_ln41_7_reg_1308;
            end if; 
        end if;
    end process;

    groupIndex_reg_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_2_fu_959_p3 = ap_const_lv1_0) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then 
                groupIndex_reg_224 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                groupIndex_reg_224 <= groupIndex_1_fu_1205_p3;
            end if; 
        end if;
    end process;

    indvar_flatten119_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten119_fu_172 <= ap_const_lv17_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                indvar_flatten119_fu_172 <= add_ln38_reg_1283;
            end if; 
        end if;
    end process;

    indvar_flatten49_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten49_fu_164 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                indvar_flatten49_fu_164 <= select_ln41_8_fu_1096_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_fu_156 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                indvar_flatten_fu_156 <= select_ln45_5_fu_1083_p3;
            end if; 
        end if;
    end process;

    kernel_col_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_col_fu_148 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                kernel_col_fu_148 <= add_ln48_fu_1072_p2;
            end if; 
        end if;
    end process;

    kernel_row_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_row_fu_152 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                kernel_row_fu_152 <= select_ln45_4_reg_1323;
            end if; 
        end if;
    end process;

    out_ch_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_2_fu_959_p3 = ap_const_lv1_0) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then 
                out_ch_reg_212 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                out_ch_reg_212 <= add_ln72_reg_1359;
            end if; 
        end if;
    end process;

    phi_mul137_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_2_fu_959_p3 = ap_const_lv1_0) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then 
                phi_mul137_reg_247 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                phi_mul137_reg_247 <= add_ln56_reg_1346;
            end if; 
        end if;
    end process;

    phi_mul_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_2_fu_959_p3 = ap_const_lv1_0) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_236 <= ap_const_lv19_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                phi_mul_reg_236 <= add_ln56_1_reg_1351;
            end if; 
        end if;
    end process;

    row_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_fu_168 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then 
                row_fu_168 <= select_ln38_7_reg_1293;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln38_reg_1283 <= add_ln38_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_reg_1333 = ap_const_lv1_0))) then
                add_ln56_1_reg_1351 <= add_ln56_1_fu_994_p2;
                add_ln56_reg_1346 <= add_ln56_fu_988_p2;
                add_ln72_reg_1359 <= add_ln72_fu_1006_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_2_fu_959_p3 = ap_const_lv1_0) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then
                add_ln63_reg_1341 <= add_ln63_fu_977_p2;
                tobool87_not_reg_1337 <= tobool87_not_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0))) then
                add_ln64_1_reg_1385 <= add_ln64_1_fu_1061_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                gmem_addr_2_read_reg_1399 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tobool87_not_reg_1337 = ap_const_lv1_0))) then
                gmem_addr_2_reg_1393 <= sext_ln71_fu_1161_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_459_p2 = ap_const_lv1_0))) then
                icmp_ln41_reg_1288 <= icmp_ln41_fu_477_p2;
                or_ln41_reg_1298 <= or_ln41_fu_667_p2;
                select_ln38_7_reg_1293 <= select_ln38_7_fu_653_p3;
                select_ln41_7_reg_1308 <= select_ln41_7_fu_805_p3;
                select_ln45_2_cast_reg_1318 <= select_ln45_2_cast_fu_887_p1;
                select_ln45_4_reg_1323 <= select_ln45_4_fu_925_p3;
                select_ln45_reg_1313 <= select_ln45_fu_831_p3;
                sext_ln41_reg_1303 <= sext_ln41_fu_727_p1;
                tmp_2_reg_1333 <= or_ln53_fu_953_p2(8 downto 8);
                    zext_ln48_reg_1328(1 downto 0) <= zext_ln48_fu_933_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0))) then
                icmp_ln61_reg_1381 <= icmp_ln61_fu_1050_p2;
                img_1_addr_reg_1376 <= p_sum_cast_fu_1045_p1(20 - 1 downto 0);
                in_ch_reg_1366 <= in_ch_fu_1022_p2;
                p_sum_reg_1371 <= p_sum_fu_1039_p2;
            end if;
        end if;
    end process;
    zext_ln48_reg_1328(10 downto 2) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln38_fu_459_p2, tmp_2_reg_1333, tobool87_not_reg_1337, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_459_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln56_fu_1000_p2 = ap_const_lv1_1) or (tmp_2_reg_1333 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4) and (tobool87_not_reg_1337 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4) and (tobool87_not_reg_1337 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln38_1_fu_491_p2 <= std_logic_vector(unsigned(row_fu_168) + unsigned(ap_const_lv7_1));
    add_ln38_fu_465_p2 <= std_logic_vector(unsigned(indvar_flatten119_fu_172) + unsigned(ap_const_lv17_1));
    add_ln41_1_fu_1090_p2 <= std_logic_vector(unsigned(indvar_flatten49_fu_164) + unsigned(ap_const_lv11_1));
    add_ln41_fu_661_p2 <= std_logic_vector(unsigned(select_ln38_fu_483_p3) + unsigned(ap_const_lv7_1));
    add_ln45_1_fu_1077_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_156) + unsigned(ap_const_lv4_1));
    add_ln45_fu_813_p2 <= std_logic_vector(signed(select_ln41_fu_673_p3) + signed(ap_const_lv2_1));
    add_ln48_fu_1072_p2 <= std_logic_vector(unsigned(select_ln45_reg_1313) + unsigned(ap_const_lv2_1));
    add_ln53_1_fu_937_p2 <= std_logic_vector(unsigned(select_ln45_fu_831_p3) + unsigned(ap_const_lv2_3));
    add_ln53_fu_947_p2 <= std_logic_vector(signed(sext_ln53_fu_943_p1) + signed(select_ln41_2_cast_fu_709_p1));
    add_ln56_1_fu_994_p2 <= std_logic_vector(unsigned(phi_mul_reg_236) + unsigned(ap_const_lv19_3100));
    add_ln56_fu_988_p2 <= std_logic_vector(unsigned(phi_mul137_reg_247) + unsigned(ap_const_lv10_1B));
    add_ln63_fu_977_p2 <= std_logic_vector(signed(sext_ln56_fu_973_p1) + signed(select_ln45_3_fu_917_p3));
    add_ln64_1_fu_1061_p2 <= std_logic_vector(unsigned(add_ln64_fu_1056_p2) + unsigned(zext_ln48_reg_1328));
    add_ln64_fu_1056_p2 <= std_logic_vector(signed(select_ln45_2_cast_reg_1318) + signed(p_cast15_fu_1029_p1));
    add_ln71_fu_1146_p2 <= std_logic_vector(unsigned(zext_ln71_fu_1142_p1) + unsigned(bias));
    add_ln72_1_fu_1180_p2 <= std_logic_vector(unsigned(out_ch_reg_212) + unsigned(ap_const_lv5_9));
    add_ln72_fu_1006_p2 <= std_logic_vector(unsigned(out_ch_reg_212) + unsigned(ap_const_lv5_1));
    add_ln73_fu_1199_p2 <= std_logic_vector(unsigned(groupIndex_reg_224) + unsigned(ap_const_lv32_1));
    and_ln38_1_fu_647_p2 <= (xor_ln38_fu_623_p2 and icmp_ln45_fu_641_p2);
    and_ln38_fu_635_p2 <= (xor_ln38_fu_623_p2 and icmp_ln48_fu_629_p2);
    and_ln41_fu_799_p2 <= (or_ln41_1_fu_793_p2 and and_ln38_fu_635_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state4_on_subcall_done_assign_proc : process(icmp_ln61_reg_1381, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_done = ap_const_logic_0) and (icmp_ln61_reg_1381 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln38_fu_459_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_459_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln38_fu_459_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln38_fu_459_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln71_fu_1171_p1 <= gmem_addr_2_read_reg_1399;
    empty_149_fu_409_p2 <= std_logic_vector(signed(tmp_cast_fu_405_p1) + signed(zext_ln41_fu_373_p1));
    empty_150_fu_427_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_423_p1) - unsigned(zext_ln45_fu_395_p1));
    empty_151_fu_453_p2 <= std_logic_vector(unsigned(p_shl2_fu_433_p3) - unsigned(p_shl3_cast_fu_449_p1));
    empty_fu_359_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_343_p1) - unsigned(p_shl1_cast_fu_355_p1));

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    groupIndex_1_fu_1205_p3 <= 
        add_ln73_fu_1199_p2 when (icmp_ln72_fu_1193_p2(0) = '1') else 
        groupIndex_reg_224;
    grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_ap_start_reg;

    grp_fu_1419_ce_assign_proc : process(ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_1419_ce <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_ce;
        else 
            grp_fu_1419_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_271_ce_assign_proc : process(ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_271_ce <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_ce;
        else 
            grp_fu_271_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_271_p0_assign_proc : process(img_1_q0, ap_CS_fsm_state4, ap_CS_fsm_state13, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_271_p0 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_271_p0 <= img_1_q0;
        else 
            grp_fu_271_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_271_p1_assign_proc : process(ap_CS_fsm_state4, bitcast_ln71_fu_1171_p1, ap_CS_fsm_state13, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_271_p1 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_271_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_271_p1 <= bitcast_ln71_fu_1171_p1;
        else 
            grp_fu_271_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_814_p_ce <= grp_fu_1419_ce;
    grp_fu_814_p_din0 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_din0;
    grp_fu_814_p_din1 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_grp_fu_1419_p_din1;
    grp_fu_818_p_ce <= grp_fu_271_ce;
    grp_fu_818_p_din0 <= grp_fu_271_p0;
    grp_fu_818_p_din1 <= grp_fu_271_p1;
    grp_fu_818_p_opcode <= ap_const_lv2_0;
    icmp_ln38_fu_459_p2 <= "1" when (indvar_flatten119_fu_172 = ap_const_lv17_1B900) else "0";
    icmp_ln41_fu_477_p2 <= "1" when (indvar_flatten49_fu_164 = ap_const_lv11_3F0) else "0";
    icmp_ln45_fu_641_p2 <= "1" when (indvar_flatten_fu_156 = ap_const_lv4_9) else "0";
    icmp_ln48_fu_629_p2 <= "1" when (kernel_col_fu_148 = ap_const_lv2_3) else "0";
    icmp_ln56_fu_1000_p2 <= "1" when (out_ch_reg_212 = ap_const_lv5_18) else "0";
    icmp_ln61_fu_1050_p2 <= "1" when (signed(in_ch_fu_1022_p2) < signed(ap_const_lv32_3)) else "0";
    icmp_ln72_1_fu_1175_p2 <= "1" when (unsigned(add_ln72_reg_1359) < unsigned(ap_const_lv5_18)) else "0";
    icmp_ln72_fu_1193_p2 <= "1" when (select_ln72_fu_1186_p3 = ap_const_lv5_0) else "0";

    img_1_address0_assign_proc : process(ap_CS_fsm_state12, img_1_addr_reg_1376, icmp_ln61_reg_1381, ap_CS_fsm_state4, ap_CS_fsm_state14, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_address0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            img_1_address0 <= img_1_addr_reg_1376;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1))) then 
            img_1_address0 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_address0;
        else 
            img_1_address0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_1_ce0_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state12, icmp_ln61_reg_1381, ap_CS_fsm_state4, ap_CS_fsm_state14, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            img_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1))) then 
            img_1_ce0 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_ce0;
        else 
            img_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_1_d0_assign_proc : process(icmp_ln61_reg_1381, ap_CS_fsm_state4, ap_CS_fsm_state14, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_d0, grp_fu_818_p_dout0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            img_1_d0 <= grp_fu_818_p_dout0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1))) then 
            img_1_d0 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_d0;
        else 
            img_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_1_we0_assign_proc : process(tobool87_not_reg_1337, icmp_ln61_reg_1381, ap_CS_fsm_state4, ap_CS_fsm_state14, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (tobool87_not_reg_1337 = ap_const_lv1_0))) then 
            img_1_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1))) then 
            img_1_we0 <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_img_1_we0;
        else 
            img_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    in_ch_fu_1022_p2 <= std_logic_vector(unsigned(shl_ln61_fu_1016_p2) - unsigned(groupIndex_reg_224));

    m_axi_gmem_ARADDR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state5, tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, gmem_addr_2_reg_1393, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARADDR)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_gmem_ARADDR <= gmem_addr_2_reg_1393;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARADDR <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARADDR;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARBURST_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARBURST)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARBURST <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARBURST;
        else 
            m_axi_gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARCACHE_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARCACHE)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARCACHE <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARCACHE;
        else 
            m_axi_gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARID_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARID)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARID <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARID;
        else 
            m_axi_gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARLEN_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state5, tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLEN)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_gmem_ARLEN <= ap_const_lv32_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARLEN <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLEN;
        else 
            m_axi_gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARLOCK_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLOCK)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARLOCK <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARLOCK;
        else 
            m_axi_gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARPROT_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARPROT)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARPROT <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARPROT;
        else 
            m_axi_gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARQOS_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARQOS)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARQOS <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARQOS;
        else 
            m_axi_gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARREGION_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARREGION)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARREGION <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARREGION;
        else 
            m_axi_gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARSIZE_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARSIZE)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARSIZE <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARSIZE;
        else 
            m_axi_gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARUSER_assign_proc : process(tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARUSER)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARUSER <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARUSER;
        else 
            m_axi_gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARVALID_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state5, tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARVALID)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state12, tmp_2_reg_1333, ap_CS_fsm_state3, icmp_ln56_fu_1000_p2, icmp_ln61_fu_1050_p2, icmp_ln61_reg_1381, ap_CS_fsm_state4, grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_RREADY)
    begin
        if (((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln61_reg_1381 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln61_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln56_fu_1000_p2 = ap_const_lv1_0) and (tmp_2_reg_1333 = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= grp_DW_conv_1_2_1_Pipeline_In_Channel_fu_258_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    or_ln41_1_fu_793_p2 <= (xor_ln41_fu_787_p2 or icmp_ln41_fu_477_p2);
    or_ln41_fu_667_p2 <= (icmp_ln41_fu_477_p2 or and_ln38_1_fu_647_p2);
    or_ln45_1_fu_825_p2 <= (or_ln45_fu_819_p2 or icmp_ln41_fu_477_p2);
    or_ln45_fu_819_p2 <= (and_ln41_fu_799_p2 or and_ln38_1_fu_647_p2);
    or_ln53_fu_953_p2 <= (select_ln45_1_fu_853_p3 or add_ln53_fu_947_p2);
    p_cast15_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul137_reg_247),11));
    p_mid1111_fu_609_p2 <= std_logic_vector(unsigned(p_shl2_mid_fu_589_p3) - unsigned(p_shl3_cast_mid1109_fu_605_p1));
    p_mid125_fu_731_p2 <= std_logic_vector(unsigned(zext_ln41_4_fu_555_p1) + unsigned(ap_const_lv9_1FF));
    p_mid145_fu_773_p2 <= std_logic_vector(unsigned(p_shl2_mid2_fu_753_p3) - unsigned(p_shl3_cast_mid143_fu_769_p1));
    p_mid14_fu_873_p2 <= std_logic_vector(unsigned(p_shl4_cast_mid1_fu_869_p1) - unsigned(zext_ln45_1_fu_839_p1));
    p_mid165_fu_521_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_505_p1) - unsigned(p_shl1_cast_mid1_fu_517_p1));
    p_mid16_fu_911_p2 <= std_logic_vector(unsigned(p_shl2_mid1_fu_891_p3) - unsigned(p_shl3_cast_mid1_fu_907_p1));
    p_mid191_fu_575_p2 <= std_logic_vector(unsigned(zext_ln41_2_fu_543_p1) + unsigned(ap_const_lv9_1FF));
    p_mid1_fu_847_p2 <= std_logic_vector(signed(tmp_cast_mid1_fu_843_p1) + signed(zext_ln41_4_fu_555_p1));
    p_mid_fu_535_p3 <= (add_ln38_1_fu_491_p2 & ap_const_lv1_0);
    p_shl1_cast_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_347_p3),15));
    p_shl1_cast_mid1_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_mid1_fu_509_p3),15));
    p_shl1_fu_347_p3 <= (row_fu_168 & ap_const_lv4_0);
    p_shl1_mid1_fu_509_p3 <= (add_ln38_1_fu_491_p2 & ap_const_lv4_0);
    p_shl2_fu_433_p3 <= (empty_149_fu_409_p2 & ap_const_lv8_0);
    p_shl2_mid1_fu_891_p3 <= (p_mid1_fu_847_p2 & ap_const_lv8_0);
    p_shl2_mid2_fu_753_p3 <= (p_mid125_fu_731_p2 & ap_const_lv8_0);
    p_shl2_mid_fu_589_p3 <= (p_mid191_fu_575_p2 & ap_const_lv8_0);
        p_shl3_cast_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_fu_441_p3),17));

        p_shl3_cast_mid1109_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_mid_fu_597_p3),17));

        p_shl3_cast_mid143_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_mid2_fu_761_p3),17));

        p_shl3_cast_mid1_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_mid1_fu_899_p3),17));

    p_shl3_fu_441_p3 <= (empty_149_fu_409_p2 & ap_const_lv5_0);
    p_shl3_mid1_fu_899_p3 <= (p_mid1_fu_847_p2 & ap_const_lv5_0);
    p_shl3_mid2_fu_761_p3 <= (p_mid125_fu_731_p2 & ap_const_lv5_0);
    p_shl3_mid_fu_597_p3 <= (p_mid191_fu_575_p2 & ap_const_lv5_0);
    p_shl4_cast_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_415_p3),5));
    p_shl4_cast_mid1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_mid1_fu_861_p3),5));
    p_shl4_fu_415_p3 <= (kernel_row_fu_152 & ap_const_lv2_0);
    p_shl4_mid1_fu_861_p3 <= (add_ln45_fu_813_p2 & ap_const_lv2_0);
    p_shl_cast_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_335_p3),15));
    p_shl_cast_mid1_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_497_p3),15));
    p_shl_fu_335_p3 <= (row_fu_168 & ap_const_lv7_0);
    p_shl_mid1_fu_497_p3 <= (add_ln38_1_fu_491_p2 & ap_const_lv7_0);
    p_sum_cast_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum_fu_1039_p2),64));
    p_sum_fu_1039_p2 <= std_logic_vector(unsigned(tmp3_fu_1033_p2) + unsigned(sext_ln41_reg_1303));
    select_ln38_1_fu_527_p3 <= 
        p_mid165_fu_521_p2 when (icmp_ln41_fu_477_p2(0) = '1') else 
        empty_fu_359_p2;
    select_ln38_2_fu_547_p3 <= 
        p_mid_fu_535_p3 when (icmp_ln41_fu_477_p2(0) = '1') else 
        tmp_1_fu_365_p3;
    select_ln38_3_fu_559_p3 <= 
        ap_const_lv8_0 when (icmp_ln41_fu_477_p2(0) = '1') else 
        shl_ln_fu_381_p3;
    select_ln38_4_fu_567_p3 <= 
        p_mid165_fu_521_p2 when (icmp_ln41_fu_477_p2(0) = '1') else 
        tmp2_fu_389_p2;
    select_ln38_5_fu_581_p3 <= 
        p_mid191_fu_575_p2 when (icmp_ln41_fu_477_p2(0) = '1') else 
        empty_149_fu_409_p2;
    select_ln38_6_fu_615_p3 <= 
        p_mid1111_fu_609_p2 when (icmp_ln41_fu_477_p2(0) = '1') else 
        empty_151_fu_453_p2;
    select_ln38_7_fu_653_p3 <= 
        add_ln38_1_fu_491_p2 when (icmp_ln41_fu_477_p2(0) = '1') else 
        row_fu_168;
    select_ln38_fu_483_p3 <= 
        ap_const_lv7_0 when (icmp_ln41_fu_477_p2(0) = '1') else 
        col_fu_160;
    select_ln41_1_fu_681_p3 <= 
        ap_const_lv32_1 when (or_ln41_fu_667_p2(0) = '1') else 
        biasFlag_fu_144;
    select_ln41_2_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln41_2_fu_701_p3),9));
    select_ln41_2_fu_701_p3 <= 
        shl_ln52_mid1_fu_693_p3 when (and_ln38_1_fu_647_p2(0) = '1') else 
        select_ln38_3_fu_559_p3;
    select_ln41_3_fu_719_p3 <= 
        tmp2_mid1_fu_713_p2 when (and_ln38_1_fu_647_p2(0) = '1') else 
        select_ln38_4_fu_567_p3;
    select_ln41_4_fu_737_p3 <= 
        p_mid125_fu_731_p2 when (and_ln38_1_fu_647_p2(0) = '1') else 
        select_ln38_5_fu_581_p3;
    select_ln41_5_fu_745_p3 <= 
        ap_const_lv5_0 when (or_ln41_fu_667_p2(0) = '1') else 
        empty_150_fu_427_p2;
    select_ln41_6_fu_779_p3 <= 
        p_mid145_fu_773_p2 when (and_ln38_1_fu_647_p2(0) = '1') else 
        select_ln38_6_fu_615_p3;
    select_ln41_7_fu_805_p3 <= 
        add_ln41_fu_661_p2 when (and_ln38_1_fu_647_p2(0) = '1') else 
        select_ln38_fu_483_p3;
    select_ln41_8_fu_1096_p3 <= 
        ap_const_lv11_1 when (icmp_ln41_reg_1288(0) = '1') else 
        add_ln41_1_fu_1090_p2;
    select_ln41_fu_673_p3 <= 
        ap_const_lv2_0 when (or_ln41_fu_667_p2(0) = '1') else 
        kernel_row_fu_152;
    select_ln45_1_fu_853_p3 <= 
        p_mid1_fu_847_p2 when (and_ln41_fu_799_p2(0) = '1') else 
        select_ln41_4_fu_737_p3;
        select_ln45_2_cast_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln45_2_fu_879_p3),11));

    select_ln45_2_fu_879_p3 <= 
        p_mid14_fu_873_p2 when (and_ln41_fu_799_p2(0) = '1') else 
        select_ln41_5_fu_745_p3;
    select_ln45_3_fu_917_p3 <= 
        p_mid16_fu_911_p2 when (and_ln41_fu_799_p2(0) = '1') else 
        select_ln41_6_fu_779_p3;
    select_ln45_4_fu_925_p3 <= 
        add_ln45_fu_813_p2 when (and_ln41_fu_799_p2(0) = '1') else 
        select_ln41_fu_673_p3;
    select_ln45_5_fu_1083_p3 <= 
        ap_const_lv4_1 when (or_ln41_reg_1298(0) = '1') else 
        add_ln45_1_fu_1077_p2;
    select_ln45_fu_831_p3 <= 
        ap_const_lv2_0 when (or_ln45_1_fu_825_p2(0) = '1') else 
        kernel_col_fu_148;
    select_ln72_fu_1186_p3 <= 
        add_ln72_reg_1359 when (icmp_ln72_1_fu_1175_p2(0) = '1') else 
        add_ln72_1_fu_1180_p2;
        sext_ln41_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln41_3_fu_719_p3),20));

        sext_ln53_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln53_1_fu_937_p2),9));

        sext_ln56_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln53_fu_947_p2),17));

        sext_ln71_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_fu_1151_p4),64));

    shl_ln4_fu_1134_p3 <= (out_ch_reg_212 & ap_const_lv2_0);
    shl_ln52_mid1_fu_693_p3 <= (add_ln41_fu_661_p2 & ap_const_lv1_0);
    shl_ln61_fu_1016_p2 <= std_logic_vector(shift_left(unsigned(groupIndex_reg_224),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln_fu_381_p3 <= (col_fu_160 & ap_const_lv1_0);
    tmp2_fu_389_p2 <= std_logic_vector(unsigned(empty_fu_359_p2) + unsigned(zext_ln41_1_fu_377_p1));
    tmp2_mid1_fu_713_p2 <= std_logic_vector(unsigned(select_ln38_1_fu_527_p3) + unsigned(zext_ln41_3_fu_689_p1));
    tmp3_fu_1033_p2 <= std_logic_vector(unsigned(zext_ln61_fu_1012_p1) + unsigned(ap_const_lv20_49800));
    tmp_1_fu_365_p3 <= (row_fu_168 & ap_const_lv1_0);
    tmp_2_fu_959_p3 <= or_ln53_fu_953_p2(8 downto 8);
        tmp_cast_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_399_p2),9));

        tmp_cast_mid1_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln41_fu_673_p3),9));

    tmp_fu_399_p2 <= std_logic_vector(unsigned(kernel_row_fu_152) + unsigned(ap_const_lv2_3));
    tobool87_not_fu_967_p2 <= "1" when (select_ln41_1_fu_681_p3 = ap_const_lv32_0) else "0";
    trunc_ln5_fu_1151_p4 <= add_ln71_fu_1146_p2(63 downto 2);
    xor_ln38_fu_623_p2 <= (icmp_ln41_fu_477_p2 xor ap_const_lv1_1);
    xor_ln41_fu_787_p2 <= (icmp_ln45_fu_641_p2 xor ap_const_lv1_1);
    zext_ln41_1_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_fu_160),15));
    zext_ln41_2_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid_fu_535_p3),9));
    zext_ln41_3_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_fu_661_p2),15));
    zext_ln41_4_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln38_2_fu_547_p3),9));
    zext_ln41_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_365_p3),9));
    zext_ln45_1_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_fu_813_p2),5));
    zext_ln45_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_row_fu_152),5));
    zext_ln48_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln45_fu_831_p3),11));
    zext_ln61_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_236),20));
    zext_ln71_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_1134_p3),64));
end behav;
