-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_stage0_BatchNorm_4_5_6_7_11_13_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    X_data : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Y_data : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    running_mean : IN STD_LOGIC_VECTOR (63 downto 0);
    running_var : IN STD_LOGIC_VECTOR (63 downto 0);
    gamma : IN STD_LOGIC_VECTOR (63 downto 0);
    beta : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of kernel_stage0_BatchNorm_4_5_6_7_11_13_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv64_3EB0C6F7A0B5ED8D : STD_LOGIC_VECTOR (63 downto 0) := "0011111010110000110001101111011110100000101101011110110110001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_A80 : STD_LOGIC_VECTOR (11 downto 0) := "101010000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_243 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal p_cast3_mid_reg_909 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast4_mid_reg_914 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast5_mid_reg_919 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast6_mid_reg_924 : STD_LOGIC_VECTOR (61 downto 0);
    signal gmem_addr_reg_932 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln13_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_25_reg_938 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_26_reg_944 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_27_reg_950 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_956 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln16_1_reg_961 : STD_LOGIC_VECTOR (61 downto 0);
    signal gmem_addr_read_reg_966 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_25_read_reg_971 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_232_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_mid2_reg_976 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal gmem_addr_26_read_reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_27_read_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_mid2_fu_229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_mid2_reg_991 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln14_fu_843_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln14_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_237_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_1001 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_done : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_idle : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_ready : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_ce : STD_LOGIC;
    signal grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal sext_ln14_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_1_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_2_fu_667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_3_fu_695_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_fu_112 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln15_fu_791_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_fu_116 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln14_6_fu_705_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_120 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln14_7_fu_803_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvar_flatten135_fu_124 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_fu_423_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln14_1_fu_831_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln14_2_fu_835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_mid2_fu_229_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_232_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_s_fu_315_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast10_fu_323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl2_fu_347_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_fu_359_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_fu_355_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl3_cast_fu_367_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_fu_327_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_175_fu_332_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_176_fu_337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_177_fu_342_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln14_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_371_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_cast3_fu_377_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast4_fu_387_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast5_fu_397_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast6_fu_407_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln15_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln13_fu_441_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln13_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln14_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln14_fu_503_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid1_fu_523_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast10_mid1_fu_531_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl2_mid1_fu_555_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_mid1_fu_567_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_mid1_fu_563_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl3_cast_mid1_fu_575_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp3_mid1_fu_579_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln13_1_fu_449_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_mid118_fu_535_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast3_mid1_fu_593_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln13_2_fu_457_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln14_2_fu_603_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_mid120_fu_540_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast4_mid1_fu_621_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln13_3_fu_464_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln14_3_fu_631_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_mid122_fu_545_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast5_mid1_fu_649_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln13_4_fu_471_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln14_4_fu_659_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_mid124_fu_550_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast6_mid1_fu_677_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln13_5_fu_478_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln14_5_fu_687_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln14_fu_515_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal h_cast_fu_713_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln14_1_fu_585_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_179_fu_717_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl5_fu_731_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_fu_723_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl5_cast_fu_739_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal empty_180_fu_743_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_13_fu_749_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_26_cast_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_182_fu_766_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_181_fu_761_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_1_fu_797_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_232_ce : STD_LOGIC;
    signal grp_fu_237_ce : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_stage0_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln16 : IN STD_LOGIC_VECTOR (61 downto 0);
        sext_ln16_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        bitcast_ln14 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp : IN STD_LOGIC_VECTOR (63 downto 0);
        conv2_mid2 : IN STD_LOGIC_VECTOR (63 downto 0);
        conv3_mid2 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_232_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_232_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_232_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_232_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_232_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_stage0_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_stage0_dadd_64ns_64ns_64_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_stage0_dsqrt_64ns_64ns_64_8_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212 : component kernel_stage0_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start,
        ap_done => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_done,
        ap_idle => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_idle,
        ap_ready => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_ready,
        m_axi_gmem1_AWVALID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        m_axi_gmem2_AWVALID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv32_0,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => m_axi_gmem2_BRESP,
        m_axi_gmem2_BID => m_axi_gmem2_BID,
        m_axi_gmem2_BUSER => m_axi_gmem2_BUSER,
        sext_ln16 => trunc_ln_reg_956,
        sext_ln16_1 => trunc_ln16_1_reg_961,
        bitcast_ln14 => bitcast_ln14_reg_996,
        tmp => tmp_reg_1001,
        conv2_mid2 => reg_243,
        conv3_mid2 => conv3_mid2_reg_991,
        grp_fu_232_p_din0 => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din0,
        grp_fu_232_p_din1 => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din1,
        grp_fu_232_p_opcode => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_opcode,
        grp_fu_232_p_dout0 => grp_fu_232_p2,
        grp_fu_232_p_ce => grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_ce);

    fpext_32ns_64_1_no_dsp_1_U45 : component kernel_stage0_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_226_p0,
        dout => grp_fu_226_p1);

    fpext_32ns_64_1_no_dsp_1_U46 : component kernel_stage0_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => conv3_mid2_fu_229_p0,
        dout => conv3_mid2_fu_229_p1);

    dadd_64ns_64ns_64_2_full_dsp_1_U47 : component kernel_stage0_dadd_64ns_64ns_64_2_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_232_p0,
        din1 => grp_fu_232_p1,
        ce => grp_fu_232_ce,
        dout => grp_fu_232_p2);

    dsqrt_64ns_64ns_64_8_no_dsp_1_U48 : component kernel_stage0_dsqrt_64ns_64ns_64_8_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => add_mid2_reg_976,
        ce => grp_fu_237_ce,
        dout => grp_fu_237_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_ready = ap_const_logic_1)) then 
                    grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_fu_116 <= ap_const_lv5_0;
            elsif (((icmp_ln13_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c_fu_116 <= select_ln14_6_fu_705_p3;
            end if; 
        end if;
    end process;

    h_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_fu_112 <= ap_const_lv7_0;
            elsif (((icmp_ln13_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                h_fu_112 <= add_ln15_fu_791_p2;
            end if; 
        end if;
    end process;

    indvar_flatten135_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten135_fu_124 <= ap_const_lv12_0;
            elsif (((icmp_ln13_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten135_fu_124 <= add_ln13_fu_423_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_120 <= ap_const_lv12_0;
            elsif (((icmp_ln13_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_fu_120 <= select_ln14_7_fu_803_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_mid2_reg_976 <= grp_fu_232_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                bitcast_ln14_reg_996 <= bitcast_ln14_fu_843_p1;
                tmp_reg_1001 <= grp_fu_237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                conv3_mid2_reg_991 <= conv3_mid2_fu_229_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                gmem_addr_25_read_reg_971 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                gmem_addr_25_reg_938 <= sext_ln14_1_fu_639_p1;
                gmem_addr_26_reg_944 <= sext_ln14_2_fu_667_p1;
                gmem_addr_27_reg_950 <= sext_ln14_3_fu_695_p1;
                gmem_addr_reg_932 <= sext_ln14_fu_611_p1;
                trunc_ln16_1_reg_961 <= empty_181_fu_761_p2(63 downto 2);
                trunc_ln_reg_956 <= empty_182_fu_766_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                gmem_addr_26_read_reg_981 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                gmem_addr_27_read_reg_986 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                gmem_addr_read_reg_966 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                p_cast3_mid_reg_909 <= running_mean(63 downto 2);
                p_cast4_mid_reg_914 <= running_var(63 downto 2);
                p_cast5_mid_reg_919 <= gamma(63 downto 2);
                p_cast6_mid_reg_924 <= beta(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_243 <= grp_fu_226_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state19, ap_CS_fsm_state6, ap_CS_fsm_state20, ap_CS_fsm_state2, icmp_ln13_fu_417_p2, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_done, ap_CS_fsm_state23)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln13_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (m_axi_gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (m_axi_gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (m_axi_gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (m_axi_gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln13_fu_423_p2 <= std_logic_vector(unsigned(indvar_flatten135_fu_124) + unsigned(ap_const_lv12_1));
    add_ln14_1_fu_797_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_120) + unsigned(ap_const_lv12_1));
    add_ln14_fu_503_p2 <= std_logic_vector(unsigned(select_ln13_fu_441_p3) + unsigned(ap_const_lv5_1));
    add_ln15_fu_791_p2 <= std_logic_vector(unsigned(select_ln14_fu_515_p3) + unsigned(ap_const_lv7_1));
    and_ln13_fu_497_p2 <= (xor_ln13_fu_485_p2 and icmp_ln15_fu_491_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state10_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_done)
    begin
        if ((grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln13_fu_417_p2)
    begin
        if ((((icmp_ln13_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln13_fu_417_p2)
    begin
        if (((icmp_ln13_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln14_1_fu_831_p1 <= gmem_addr_25_read_reg_971;
    bitcast_ln14_2_fu_835_p1 <= gmem_addr_26_read_reg_981;
    bitcast_ln14_fu_843_p1 <= gmem_addr_read_reg_966;
    conv3_mid2_fu_229_p0 <= gmem_addr_27_read_reg_986;
    empty_175_fu_332_p2 <= std_logic_vector(unsigned(p_cast10_fu_323_p1) + unsigned(running_var));
    empty_176_fu_337_p2 <= std_logic_vector(unsigned(p_cast10_fu_323_p1) + unsigned(gamma));
    empty_177_fu_342_p2 <= std_logic_vector(unsigned(p_cast10_fu_323_p1) + unsigned(beta));
    empty_179_fu_717_p2 <= std_logic_vector(unsigned(h_cast_fu_713_p1) + unsigned(select_ln14_1_fu_585_p3));
    empty_180_fu_743_p2 <= std_logic_vector(unsigned(p_shl4_fu_723_p3) - unsigned(p_shl5_cast_fu_739_p1));
    empty_181_fu_761_p2 <= std_logic_vector(signed(tmp_26_cast_fu_757_p1) + signed(Y_data));
    empty_182_fu_766_p2 <= std_logic_vector(signed(tmp_26_cast_fu_757_p1) + signed(X_data));
    empty_fu_327_p2 <= std_logic_vector(unsigned(p_cast10_fu_323_p1) + unsigned(running_mean));

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_ap_start_reg;

    grp_fu_226_p0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state21, bitcast_ln14_1_fu_831_p1, bitcast_ln14_2_fu_835_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_226_p0 <= bitcast_ln14_2_fu_835_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_226_p0 <= bitcast_ln14_1_fu_831_p1;
        else 
            grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_232_ce_assign_proc : process(grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_ce, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_232_ce <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_ce;
        else 
            grp_fu_232_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_232_p0_assign_proc : process(reg_243, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din0, ap_CS_fsm_state23, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_232_p0 <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_232_p0 <= reg_243;
        else 
            grp_fu_232_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_232_p1_assign_proc : process(grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din1, ap_CS_fsm_state23, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_232_p1 <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_grp_fu_232_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_232_p1 <= ap_const_lv64_3EB0C6F7A0B5ED8D;
        else 
            grp_fu_232_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_237_ce_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (m_axi_gmem_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem_RVALID = ap_const_logic_1)))) then 
            grp_fu_237_ce <= ap_const_logic_1;
        else 
            grp_fu_237_ce <= ap_const_logic_0;
        end if; 
    end process;

    h_cast_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_fu_515_p3),13));
    icmp_ln13_fu_417_p2 <= "1" when (indvar_flatten135_fu_124 = ap_const_lv12_A80) else "0";
    icmp_ln14_fu_435_p2 <= "1" when (indvar_flatten_fu_120 = ap_const_lv12_A80) else "0";
    icmp_ln15_fu_491_p2 <= "1" when (h_fu_112 = ap_const_lv7_70) else "0";
    m_axi_gmem1_ARADDR <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARUSER;

    m_axi_gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state22, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARVALID, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_gmem1_ARVALID <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_ARVALID;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_CS_fsm_state22, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_RREADY, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_gmem1_RREADY <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem1_RREADY;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    m_axi_gmem2_ARADDR <= ap_const_lv64_0;
    m_axi_gmem2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_ARID <= ap_const_lv1_0;
    m_axi_gmem2_ARLEN <= ap_const_lv32_0;
    m_axi_gmem2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_ARUSER <= ap_const_lv1_0;
    m_axi_gmem2_ARVALID <= ap_const_logic_0;
    m_axi_gmem2_AWADDR <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWADDR;
    m_axi_gmem2_AWBURST <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWBURST;
    m_axi_gmem2_AWCACHE <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWCACHE;
    m_axi_gmem2_AWID <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWID;
    m_axi_gmem2_AWLEN <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWLEN;
    m_axi_gmem2_AWLOCK <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWLOCK;
    m_axi_gmem2_AWPROT <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWPROT;
    m_axi_gmem2_AWQOS <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWQOS;
    m_axi_gmem2_AWREGION <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWREGION;
    m_axi_gmem2_AWSIZE <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWSIZE;
    m_axi_gmem2_AWUSER <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWUSER;

    m_axi_gmem2_AWVALID_assign_proc : process(ap_CS_fsm_state22, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWVALID, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_gmem2_AWVALID <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_AWVALID;
        else 
            m_axi_gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem2_BREADY_assign_proc : process(ap_CS_fsm_state22, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_BREADY, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_gmem2_BREADY <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_BREADY;
        else 
            m_axi_gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_RREADY <= ap_const_logic_0;
    m_axi_gmem2_WDATA <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WDATA;
    m_axi_gmem2_WID <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WID;
    m_axi_gmem2_WLAST <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WLAST;
    m_axi_gmem2_WSTRB <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WSTRB;
    m_axi_gmem2_WUSER <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WUSER;

    m_axi_gmem2_WVALID_assign_proc : process(ap_CS_fsm_state22, grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WVALID, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_gmem2_WVALID <= grp_BatchNorm_4_5_6_7_11_13_1_Pipeline_VITIS_LOOP_16_4_fu_212_m_axi_gmem2_WVALID;
        else 
            m_axi_gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_ARADDR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, gmem_addr_reg_932, gmem_addr_25_reg_938, gmem_addr_26_reg_944, gmem_addr_27_reg_950)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                m_axi_gmem_ARADDR <= gmem_addr_27_reg_950;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                m_axi_gmem_ARADDR <= gmem_addr_26_reg_944;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                m_axi_gmem_ARADDR <= gmem_addr_25_reg_938;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                m_axi_gmem_ARADDR <= gmem_addr_reg_932;
            else 
                m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (m_axi_gmem_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (m_axi_gmem_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (m_axi_gmem_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (m_axi_gmem_ARREADY = ap_const_logic_1)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state20) and (m_axi_gmem_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (m_axi_gmem_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (m_axi_gmem_RVALID = ap_const_logic_1)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    or_ln14_fu_509_p2 <= (icmp_ln14_fu_435_p2 or and_ln13_fu_497_p2);
    p_cast10_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_315_p3),64));
    p_cast10_mid1_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid1_fu_523_p3),64));
    p_cast3_fu_377_p4 <= empty_fu_327_p2(63 downto 2);
    p_cast3_mid1_fu_593_p4 <= p_mid118_fu_535_p2(63 downto 2);
    p_cast4_fu_387_p4 <= empty_175_fu_332_p2(63 downto 2);
    p_cast4_mid1_fu_621_p4 <= p_mid120_fu_540_p2(63 downto 2);
    p_cast5_fu_397_p4 <= empty_176_fu_337_p2(63 downto 2);
    p_cast5_mid1_fu_649_p4 <= p_mid122_fu_545_p2(63 downto 2);
    p_cast6_fu_407_p4 <= empty_177_fu_342_p2(63 downto 2);
    p_cast6_mid1_fu_677_p4 <= p_mid124_fu_550_p2(63 downto 2);
    p_mid118_fu_535_p2 <= std_logic_vector(unsigned(p_cast10_mid1_fu_531_p1) + unsigned(running_mean));
    p_mid120_fu_540_p2 <= std_logic_vector(unsigned(p_cast10_mid1_fu_531_p1) + unsigned(running_var));
    p_mid122_fu_545_p2 <= std_logic_vector(unsigned(p_cast10_mid1_fu_531_p1) + unsigned(gamma));
    p_mid124_fu_550_p2 <= std_logic_vector(unsigned(p_cast10_mid1_fu_531_p1) + unsigned(beta));
    p_mid1_fu_523_p3 <= (add_ln14_fu_503_p2 & ap_const_lv2_0);
    p_shl2_cast_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_347_p3),13));
    p_shl2_cast_mid1_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_mid1_fu_555_p3),13));
    p_shl2_fu_347_p3 <= (c_fu_116 & ap_const_lv7_0);
    p_shl2_mid1_fu_555_p3 <= (add_ln14_fu_503_p2 & ap_const_lv7_0);
    p_shl3_cast_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_359_p3),13));
    p_shl3_cast_mid1_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_fu_567_p3),13));
    p_shl3_fu_359_p3 <= (c_fu_116 & ap_const_lv4_0);
    p_shl3_mid1_fu_567_p3 <= (add_ln14_fu_503_p2 & ap_const_lv4_0);
    p_shl4_fu_723_p3 <= (empty_179_fu_717_p2 & ap_const_lv7_0);
        p_shl5_cast_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_fu_731_p3),20));

    p_shl5_fu_731_p3 <= (empty_179_fu_717_p2 & ap_const_lv4_0);
    select_ln13_1_fu_449_p3 <= 
        ap_const_lv13_0 when (icmp_ln14_fu_435_p2(0) = '1') else 
        tmp3_fu_371_p2;
    select_ln13_2_fu_457_p3 <= 
        p_cast3_mid_reg_909 when (icmp_ln14_fu_435_p2(0) = '1') else 
        p_cast3_fu_377_p4;
    select_ln13_3_fu_464_p3 <= 
        p_cast4_mid_reg_914 when (icmp_ln14_fu_435_p2(0) = '1') else 
        p_cast4_fu_387_p4;
    select_ln13_4_fu_471_p3 <= 
        p_cast5_mid_reg_919 when (icmp_ln14_fu_435_p2(0) = '1') else 
        p_cast5_fu_397_p4;
    select_ln13_5_fu_478_p3 <= 
        p_cast6_mid_reg_924 when (icmp_ln14_fu_435_p2(0) = '1') else 
        p_cast6_fu_407_p4;
    select_ln13_fu_441_p3 <= 
        ap_const_lv5_0 when (icmp_ln14_fu_435_p2(0) = '1') else 
        c_fu_116;
    select_ln14_1_fu_585_p3 <= 
        tmp3_mid1_fu_579_p2 when (and_ln13_fu_497_p2(0) = '1') else 
        select_ln13_1_fu_449_p3;
    select_ln14_2_fu_603_p3 <= 
        p_cast3_mid1_fu_593_p4 when (and_ln13_fu_497_p2(0) = '1') else 
        select_ln13_2_fu_457_p3;
    select_ln14_3_fu_631_p3 <= 
        p_cast4_mid1_fu_621_p4 when (and_ln13_fu_497_p2(0) = '1') else 
        select_ln13_3_fu_464_p3;
    select_ln14_4_fu_659_p3 <= 
        p_cast5_mid1_fu_649_p4 when (and_ln13_fu_497_p2(0) = '1') else 
        select_ln13_4_fu_471_p3;
    select_ln14_5_fu_687_p3 <= 
        p_cast6_mid1_fu_677_p4 when (and_ln13_fu_497_p2(0) = '1') else 
        select_ln13_5_fu_478_p3;
    select_ln14_6_fu_705_p3 <= 
        add_ln14_fu_503_p2 when (and_ln13_fu_497_p2(0) = '1') else 
        select_ln13_fu_441_p3;
    select_ln14_7_fu_803_p3 <= 
        ap_const_lv12_1 when (icmp_ln14_fu_435_p2(0) = '1') else 
        add_ln14_1_fu_797_p2;
    select_ln14_fu_515_p3 <= 
        ap_const_lv7_0 when (or_ln14_fu_509_p2(0) = '1') else 
        h_fu_112;
        sext_ln14_1_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln14_3_fu_631_p3),64));

        sext_ln14_2_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln14_4_fu_659_p3),64));

        sext_ln14_3_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln14_5_fu_687_p3),64));

        sext_ln14_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln14_2_fu_603_p3),64));

    tmp3_fu_371_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_355_p1) - unsigned(p_shl3_cast_fu_367_p1));
    tmp3_mid1_fu_579_p2 <= std_logic_vector(unsigned(p_shl2_cast_mid1_fu_563_p1) - unsigned(p_shl3_cast_mid1_fu_575_p1));
    tmp_13_fu_749_p3 <= (empty_180_fu_743_p2 & ap_const_lv2_0);
        tmp_26_cast_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_749_p3),64));

    tmp_s_fu_315_p3 <= (c_fu_116 & ap_const_lv2_0);
    xor_ln13_fu_485_p2 <= (icmp_ln14_fu_435_p2 xor ap_const_lv1_1);
end behav;
