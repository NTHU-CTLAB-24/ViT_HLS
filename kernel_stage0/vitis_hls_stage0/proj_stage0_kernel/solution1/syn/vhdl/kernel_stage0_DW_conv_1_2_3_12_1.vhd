-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_stage0_DW_conv_1_2_3_12_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    kernel : IN STD_LOGIC_VECTOR (63 downto 0);
    bias : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1002_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1002_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1002_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1002_p_ce : OUT STD_LOGIC;
    grp_fu_1006_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1006_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1006_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_1006_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1006_p_ce : OUT STD_LOGIC );
end;


architecture behav of kernel_stage0_DW_conv_1_2_3_12_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (40 downto 0) := "00000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (40 downto 0) := "00000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (40 downto 0) := "00000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (40 downto 0) := "00001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (40 downto 0) := "00010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (40 downto 0) := "00100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (40 downto 0) := "01000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (40 downto 0) := "10000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv17_1B900 : STD_LOGIC_VECTOR (16 downto 0) := "11011100100000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv11_3F0 : STD_LOGIC_VECTOR (10 downto 0) := "01111110000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_1B : STD_LOGIC_VECTOR (9 downto 0) := "0000011011";
    constant ap_const_lv19_3100 : STD_LOGIC_VECTOR (18 downto 0) := "0000011000100000000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal gmem1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal targetBlock_reg_1537 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal gmem1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln60_reg_1510 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal tobool87_not_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln37_fu_539_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln37_reg_1412 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln40_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_1417 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln37_fu_609_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln37_reg_1422 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln37_6_fu_723_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln37_6_reg_1427 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln40_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_reg_1432 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_2_fu_759_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln40_2_reg_1437 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln51_fu_767_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln51_reg_1442 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln44_fu_883_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln44_reg_1447 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln44_2_cast_fu_939_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln44_2_cast_reg_1452 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln44_4_fu_977_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln44_4_reg_1457 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln47_fu_985_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln47_reg_1462 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_1011_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1467 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool87_not_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln62_fu_1029_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln62_reg_1475 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln55_fu_1040_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln55_reg_1480 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln55_1_fu_1046_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln55_1_reg_1485 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln71_fu_1058_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln71_reg_1493 : STD_LOGIC_VECTOR (4 downto 0);
    signal in_ch_fu_1084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_ch_reg_1500 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln55_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_168_fu_1106_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_168_reg_1505 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln60_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln63_1_fu_1122_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln63_1_reg_1514 : STD_LOGIC_VECTOR (10 downto 0);
    signal gmem1_addr_reg_1519 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_read_reg_1527 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln64_fu_1205_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln64_reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal gmem_addr_2_reg_1547 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_1_reg_1553 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_2_read_reg_1560 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_1_read_reg_1565 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln70_fu_1270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln70_1_fu_1274_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add2_reg_1580 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal groupIndex_1_fu_1312_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_idle : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_ready : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out_ap_vld : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out_ap_vld : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce : STD_LOGIC;
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce : STD_LOGIC;
    signal out_ch_reg_286 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state41 : BOOLEAN;
    signal groupIndex_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_310 : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul141_reg_321 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg : STD_LOGIC := '0';
    signal add8122_loc_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_loc_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln64_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln70_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln70_1_fu_1256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state14_io : BOOLEAN;
    signal ap_predicate_op250_writeresp_state20 : BOOLEAN;
    signal ap_predicate_op252_writeresp_state20 : BOOLEAN;
    signal ap_block_state20 : BOOLEAN;
    signal bitcast_ln64_4_fu_1215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln64_3_fu_1266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state26_io : BOOLEAN;
    signal ap_block_state33 : BOOLEAN;
    signal bitcast_ln70_2_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal biasFlag_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln40_1_fu_751_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_col_fu_162 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln47_fu_1132_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_row_fu_166 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_170 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln44_5_fu_1143_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_fu_174 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten58_fu_178 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln40_7_fu_1156_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_fu_182 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten124_fu_186 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_348_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_419_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_fu_431_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_427_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_fu_439_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_9_fu_449_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_473_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_479_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln40_fu_457_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_fu_489_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl5_cast_fu_497_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln44_fu_469_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_164_fu_483_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_fu_515_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl3_fu_507_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_cast_fu_523_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln37_1_fu_565_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_mid1_fu_571_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_mid1_fu_583_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_mid1_fu_579_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_mid1_fu_591_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_mid174_fu_595_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_fu_443_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln37_1_fu_601_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_mid_fu_613_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln37_2_fu_625_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_461_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln40_1_fu_621_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid196_fu_645_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_mid_fu_667_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl3_mid_fu_659_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_cast_mid1114_fu_675_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_mid1116_fu_679_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_166_fu_527_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln47_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_fu_557_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln37_1_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_fu_731_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln51_mid1_fu_771_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln37_3_fu_637_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln40_3_fu_779_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln37_fu_633_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid134_fu_791_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln37_4_fu_651_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_165_fu_501_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl4_mid2_fu_821_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl3_mid2_fu_813_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_cast_mid152_fu_829_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_mid154_fu_833_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln37_5_fu_685_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln40_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_1_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_743_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln40_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln44_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln44_1_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_fu_865_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_mid1_fu_895_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid1_fu_899_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln40_4_fu_797_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_mid1_fu_913_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl5_cast_mid1_fu_921_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln44_1_fu_891_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid113_fu_925_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_5_fu_805_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln44_2_fu_931_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl4_mid1_fu_951_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl3_mid1_fu_943_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_cast_mid1_fu_959_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_mid115_fu_963_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln40_6_fu_839_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln52_1_fu_989_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln52_fu_995_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln40_3_cast_fu_787_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln52_fu_999_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln44_1_fu_905_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln52_fu_1005_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln55_fu_1025_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln44_3_fu_969_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln57_fu_1064_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln57_fu_1068_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln60_fu_1078_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln57_1_fu_1073_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_s_fu_1094_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_11_cast_fu_1102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast15_fu_1090_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln63_fu_1117_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln44_1_fu_1137_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln40_1_fu_1150_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_358_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln4_fu_1219_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln70_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln70_fu_1231_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_1236_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln71_1_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln71_1_fu_1287_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln71_fu_1293_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln71_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln72_fu_1306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_ce : STD_LOGIC;
    signal grp_fu_1590_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_stage0_DW_conv_1_2_3_12_1_Pipeline_In_Channel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln60 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln64 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln62 : IN STD_LOGIC_VECTOR (16 downto 0);
        in_r : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln63 : IN STD_LOGIC_VECTOR (10 downto 0);
        kernel : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        add8122_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add8122_out_ap_vld : OUT STD_LOGIC;
        add_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_348_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_348_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_348_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_348_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_348_p_ce : OUT STD_LOGIC;
        grp_fu_1590_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1590_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1590_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1590_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_stage0_fadd_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_stage0_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332 : component kernel_stage0_DW_conv_1_2_3_12_1_Pipeline_In_Channel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start,
        ap_done => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done,
        ap_idle => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_idle,
        ap_ready => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_ready,
        sext_ln60 => in_ch_reg_1500,
        bitcast_ln64 => bitcast_ln64_reg_1532,
        sext_ln62 => add_ln62_reg_1475,
        in_r => in_r,
        m_axi_gmem0_AWVALID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST => m_axi_gmem0_RLAST,
        m_axi_gmem0_RID => m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM => m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP => m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln63 => add_ln63_1_reg_1514,
        kernel => kernel,
        m_axi_gmem_AWVALID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        add8122_out => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out,
        add8122_out_ap_vld => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out_ap_vld,
        add_out => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out,
        add_out_ap_vld => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out_ap_vld,
        ap_return => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_return,
        grp_fu_348_p_din0 => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0,
        grp_fu_348_p_din1 => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1,
        grp_fu_348_p_opcode => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_opcode,
        grp_fu_348_p_dout0 => grp_fu_1006_p_dout0,
        grp_fu_348_p_ce => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce,
        grp_fu_1590_p_din0 => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din0,
        grp_fu_1590_p_din1 => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din1,
        grp_fu_1590_p_dout0 => grp_fu_1002_p_dout0,
        grp_fu_1590_p_ce => grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_ready = ap_const_logic_1)) then 
                    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    biasFlag_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                biasFlag_fu_158 <= ap_const_lv32_1;
            elsif (((tmp_1_fu_1011_p3 = ap_const_lv1_1) and (icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                biasFlag_fu_158 <= select_ln40_1_fu_751_p3;
            elsif (((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) and (tmp_1_reg_1467 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                biasFlag_fu_158 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    col_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_fu_174 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                col_fu_174 <= select_ln40_2_reg_1437;
            end if; 
        end if;
    end process;

    groupIndex_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1011_p3 = ap_const_lv1_0) and (icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                groupIndex_reg_298 <= ap_const_lv32_0;
            elsif ((not(((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                groupIndex_reg_298 <= groupIndex_1_fu_1312_p3;
            end if; 
        end if;
    end process;

    indvar_flatten124_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten124_fu_186 <= ap_const_lv17_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                indvar_flatten124_fu_186 <= add_ln37_reg_1412;
            end if; 
        end if;
    end process;

    indvar_flatten58_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten58_fu_178 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                indvar_flatten58_fu_178 <= select_ln40_7_fu_1156_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_170 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                indvar_flatten_fu_170 <= select_ln44_5_fu_1143_p3;
            end if; 
        end if;
    end process;

    kernel_col_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_col_fu_162 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                kernel_col_fu_162 <= add_ln47_fu_1132_p2;
            end if; 
        end if;
    end process;

    kernel_row_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_row_fu_166 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                kernel_row_fu_166 <= select_ln44_4_reg_1457;
            end if; 
        end if;
    end process;

    out_ch_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1011_p3 = ap_const_lv1_0) and (icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                out_ch_reg_286 <= ap_const_lv5_0;
            elsif ((not(((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                out_ch_reg_286 <= add_ln71_reg_1493;
            end if; 
        end if;
    end process;

    phi_mul141_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1011_p3 = ap_const_lv1_0) and (icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul141_reg_321 <= ap_const_lv10_0;
            elsif ((not(((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                phi_mul141_reg_321 <= add_ln55_reg_1480;
            end if; 
        end if;
    end process;

    phi_mul_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1011_p3 = ap_const_lv1_0) and (icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_reg_310 <= ap_const_lv19_0;
            elsif ((not(((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                phi_mul_reg_310 <= add_ln55_1_reg_1485;
            end if; 
        end if;
    end process;

    row_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_fu_182 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then 
                row_fu_182 <= select_ln37_6_reg_1427;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                add2_reg_1580 <= grp_fu_1006_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                add8122_loc_fu_194 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln37_reg_1412 <= add_ln37_fu_539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_reg_1467 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln55_1_reg_1485 <= add_ln55_1_fu_1046_p2;
                add_ln55_reg_1480 <= add_ln55_fu_1040_p2;
                add_ln71_reg_1493 <= add_ln71_fu_1058_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1011_p3 = ap_const_lv1_0) and (icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln62_reg_1475 <= add_ln62_fu_1029_p2;
                tobool87_not_reg_1471 <= tobool87_not_fu_1019_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_1111_p2 = ap_const_lv1_1) and (icmp_ln55_fu_1052_p2 = ap_const_lv1_0) and (tmp_1_reg_1467 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln63_1_reg_1514 <= add_ln63_1_fu_1122_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                add_loc_fu_190 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                bitcast_ln64_reg_1532 <= bitcast_ln64_fu_1205_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_fu_1052_p2 = ap_const_lv1_0) and (tmp_1_reg_1467 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                empty_168_reg_1505 <= empty_168_fu_1106_p2;
                icmp_ln60_reg_1510 <= icmp_ln60_fu_1111_p2;
                in_ch_reg_1500 <= in_ch_fu_1084_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                gmem1_addr_1_read_reg_1565 <= m_axi_gmem1_RDATA;
                gmem_addr_2_read_reg_1560 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tobool87_not_reg_1471 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                gmem1_addr_1_reg_1553 <= sext_ln70_1_fu_1256_p1;
                gmem_addr_2_reg_1547 <= sext_ln70_fu_1246_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                gmem1_addr_read_reg_1527 <= m_axi_gmem1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                gmem1_addr_reg_1519 <= sext_ln64_fu_1194_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_533_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln40_reg_1417 <= icmp_ln40_fu_551_p2;
                or_ln40_reg_1432 <= or_ln40_fu_737_p2;
                select_ln37_6_reg_1427 <= select_ln37_6_fu_723_p3;
                select_ln40_2_reg_1437 <= select_ln40_2_fu_759_p3;
                select_ln44_2_cast_reg_1452 <= select_ln44_2_cast_fu_939_p1;
                select_ln44_4_reg_1457 <= select_ln44_4_fu_977_p3;
                select_ln44_reg_1447 <= select_ln44_fu_883_p3;
                    sext_ln37_reg_1422(19 downto 4) <= sext_ln37_fu_609_p1(19 downto 4);
                tmp_1_reg_1467 <= or_ln52_fu_1005_p2(8 downto 8);
                    zext_ln47_reg_1462(1 downto 0) <= zext_ln47_fu_985_p1(1 downto 0);
                    zext_ln51_reg_1442(6 downto 0) <= zext_ln51_fu_767_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                targetBlock_reg_1537 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_return;
            end if;
        end if;
    end process;
    sext_ln37_reg_1422(3 downto 0) <= "0000";
    zext_ln51_reg_1442(19 downto 7) <= "0000000000000";
    zext_ln47_reg_1462(10 downto 2) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_RVALID, m_axi_gmem1_AWREADY, m_axi_gmem1_WREADY, m_axi_gmem1_ARREADY, m_axi_gmem1_RVALID, m_axi_gmem1_BVALID, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state14, targetBlock_reg_1537, ap_CS_fsm_state21, ap_CS_fsm_state20, ap_CS_fsm_state15, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state41, tobool87_not_reg_1471, ap_CS_fsm_state2, icmp_ln37_fu_533_p2, tmp_1_reg_1467, ap_CS_fsm_state3, icmp_ln55_fu_1052_p2, icmp_ln60_fu_1111_p2, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done, ap_block_state14_io, ap_predicate_op250_writeresp_state20, ap_predicate_op252_writeresp_state20, ap_block_state26_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln37_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln55_fu_1052_p2 = ap_const_lv1_1) or (tmp_1_reg_1467 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln60_fu_1111_p2 = ap_const_lv1_0) and (icmp_ln55_fu_1052_p2 = ap_const_lv1_0) and (tmp_1_reg_1467 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (m_axi_gmem1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((m_axi_gmem1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_io) and (targetBlock_reg_1537 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((ap_const_boolean_0 = ap_block_state14_io) and (targetBlock_reg_1537 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (m_axi_gmem1_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if ((not((((ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)) or ((ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)))) and (tobool87_not_reg_1471 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                elsif ((not((((ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)) or ((ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)))) and (tobool87_not_reg_1471 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (m_axi_gmem1_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state26 => 
                if (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if ((not(((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (m_axi_gmem1_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (m_axi_gmem1_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if ((not(((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln37_1_fu_565_p2 <= std_logic_vector(unsigned(row_fu_182) + unsigned(ap_const_lv7_1));
    add_ln37_fu_539_p2 <= std_logic_vector(unsigned(indvar_flatten124_fu_186) + unsigned(ap_const_lv17_1));
    add_ln40_1_fu_1150_p2 <= std_logic_vector(unsigned(indvar_flatten58_fu_178) + unsigned(ap_const_lv11_1));
    add_ln40_fu_731_p2 <= std_logic_vector(unsigned(select_ln37_fu_557_p3) + unsigned(ap_const_lv7_1));
    add_ln44_1_fu_1137_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_170) + unsigned(ap_const_lv4_1));
    add_ln44_fu_865_p2 <= std_logic_vector(signed(select_ln40_fu_743_p3) + signed(ap_const_lv2_1));
    add_ln47_fu_1132_p2 <= std_logic_vector(unsigned(select_ln44_reg_1447) + unsigned(ap_const_lv2_1));
    add_ln52_1_fu_989_p2 <= std_logic_vector(unsigned(select_ln44_fu_883_p3) + unsigned(ap_const_lv2_3));
    add_ln52_fu_999_p2 <= std_logic_vector(signed(sext_ln52_fu_995_p1) + signed(select_ln40_3_cast_fu_787_p1));
    add_ln55_1_fu_1046_p2 <= std_logic_vector(unsigned(phi_mul_reg_310) + unsigned(ap_const_lv19_3100));
    add_ln55_fu_1040_p2 <= std_logic_vector(unsigned(phi_mul141_reg_321) + unsigned(ap_const_lv10_1B));
    add_ln57_1_fu_1073_p2 <= std_logic_vector(unsigned(add_ln57_fu_1068_p2) + unsigned(zext_ln51_reg_1442));
    add_ln57_fu_1068_p2 <= std_logic_vector(signed(sext_ln37_reg_1422) + signed(zext_ln57_fu_1064_p1));
    add_ln62_fu_1029_p2 <= std_logic_vector(signed(sext_ln55_fu_1025_p1) + signed(select_ln44_3_fu_969_p3));
    add_ln63_1_fu_1122_p2 <= std_logic_vector(unsigned(add_ln63_fu_1117_p2) + unsigned(zext_ln47_reg_1462));
    add_ln63_fu_1117_p2 <= std_logic_vector(signed(select_ln44_2_cast_reg_1452) + signed(p_cast15_fu_1090_p1));
    add_ln70_fu_1231_p2 <= std_logic_vector(unsigned(zext_ln70_fu_1227_p1) + unsigned(bias));
    add_ln71_1_fu_1287_p2 <= std_logic_vector(unsigned(out_ch_reg_286) + unsigned(ap_const_lv5_9));
    add_ln71_fu_1058_p2 <= std_logic_vector(unsigned(out_ch_reg_286) + unsigned(ap_const_lv5_1));
    add_ln72_fu_1306_p2 <= std_logic_vector(unsigned(groupIndex_reg_298) + unsigned(ap_const_lv32_1));
    and_ln37_1_fu_717_p2 <= (xor_ln37_fu_693_p2 and icmp_ln44_fu_711_p2);
    and_ln37_fu_705_p2 <= (xor_ln37_fu_693_p2 and icmp_ln47_fu_699_p2);
    and_ln40_fu_859_p2 <= (or_ln40_1_fu_853_p2 and and_ln37_fu_705_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_gmem1_RVALID)
    begin
        if ((m_axi_gmem1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done)
    begin
        if ((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state14_io)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(m_axi_gmem1_WREADY)
    begin
        if ((m_axi_gmem1_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(m_axi_gmem1_BVALID, ap_predicate_op250_writeresp_state20, ap_predicate_op252_writeresp_state20)
    begin
        if ((((ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)) or ((ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)))) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state21_blk_assign_proc : process(m_axi_gmem1_WREADY)
    begin
        if ((m_axi_gmem1_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(ap_block_state26_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state26_io)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem1_RVALID)
    begin
        if (((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem_RVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state34_blk_assign_proc : process(m_axi_gmem1_AWREADY)
    begin
        if ((m_axi_gmem1_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(m_axi_gmem1_WREADY)
    begin
        if ((m_axi_gmem1_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(m_axi_gmem1_BVALID, tobool87_not_reg_1471)
    begin
        if (((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_gmem1_ARREADY)
    begin
        if ((m_axi_gmem1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state14_io_assign_proc : process(m_axi_gmem1_AWREADY, targetBlock_reg_1537)
    begin
                ap_block_state14_io <= (((targetBlock_reg_1537 = ap_const_lv1_0) and (m_axi_gmem1_AWREADY = ap_const_logic_0)) or ((targetBlock_reg_1537 = ap_const_lv1_1) and (m_axi_gmem1_AWREADY = ap_const_logic_0)));
    end process;


    ap_block_state20_assign_proc : process(m_axi_gmem1_BVALID, ap_predicate_op250_writeresp_state20, ap_predicate_op252_writeresp_state20)
    begin
                ap_block_state20 <= (((ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)) or ((ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)));
    end process;


    ap_block_state26_io_assign_proc : process(m_axi_gmem_ARREADY, m_axi_gmem1_ARREADY)
    begin
                ap_block_state26_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state33_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem1_RVALID)
    begin
                ap_block_state33 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state41_assign_proc : process(m_axi_gmem1_BVALID, tobool87_not_reg_1471)
    begin
                ap_block_state41 <= ((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln37_fu_533_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln37_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op250_writeresp_state20_assign_proc : process(targetBlock_reg_1537, icmp_ln60_reg_1510)
    begin
                ap_predicate_op250_writeresp_state20 <= ((icmp_ln60_reg_1510 = ap_const_lv1_1) and (targetBlock_reg_1537 = ap_const_lv1_0));
    end process;


    ap_predicate_op252_writeresp_state20_assign_proc : process(targetBlock_reg_1537, icmp_ln60_reg_1510)
    begin
                ap_predicate_op252_writeresp_state20 <= ((icmp_ln60_reg_1510 = ap_const_lv1_1) and (targetBlock_reg_1537 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln37_fu_533_p2)
    begin
        if (((icmp_ln37_fu_533_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln64_3_fu_1266_p1 <= add8122_loc_fu_194;
    bitcast_ln64_4_fu_1215_p1 <= add_loc_fu_190;
    bitcast_ln64_fu_1205_p1 <= gmem1_addr_read_reg_1527;
    bitcast_ln70_1_fu_1274_p1 <= gmem1_addr_1_read_reg_1565;
    bitcast_ln70_2_fu_1278_p1 <= add2_reg_1580;
    bitcast_ln70_fu_1270_p1 <= gmem_addr_2_read_reg_1560;
    empty_164_fu_483_p2 <= std_logic_vector(signed(tmp_cast_fu_479_p1) + signed(zext_ln40_fu_457_p1));
    empty_165_fu_501_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_497_p1) - unsigned(zext_ln44_fu_469_p1));
    empty_166_fu_527_p2 <= std_logic_vector(unsigned(p_shl3_fu_507_p3) - unsigned(p_shl4_cast_fu_523_p1));
    empty_168_fu_1106_p2 <= std_logic_vector(signed(tmp_11_cast_fu_1102_p1) + signed(out_r));
    empty_fu_443_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_427_p1) - unsigned(p_shl2_cast_fu_439_p1));

    gmem1_blk_n_AR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state26, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_AW_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state14, targetBlock_reg_1537, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((targetBlock_reg_1537 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((targetBlock_reg_1537 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            gmem1_blk_n_AW <= m_axi_gmem1_AWREADY;
        else 
            gmem1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_B_assign_proc : process(m_axi_gmem1_BVALID, targetBlock_reg_1537, ap_CS_fsm_state20, icmp_ln60_reg_1510, ap_CS_fsm_state41, tobool87_not_reg_1471)
    begin
        if ((((tobool87_not_reg_1471 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((icmp_ln60_reg_1510 = ap_const_lv1_1) and (targetBlock_reg_1537 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((icmp_ln60_reg_1510 = ap_const_lv1_1) and (targetBlock_reg_1537 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            gmem1_blk_n_B <= m_axi_gmem1_BVALID;
        else 
            gmem1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(m_axi_gmem1_RVALID, ap_CS_fsm_state33, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    groupIndex_1_fu_1312_p3 <= 
        add_ln72_fu_1306_p2 when (icmp_ln71_fu_1300_p2(0) = '1') else 
        groupIndex_reg_298;
    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg;
    grp_fu_1002_p_ce <= grp_fu_1590_ce;
    grp_fu_1002_p_din0 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din0;
    grp_fu_1002_p_din1 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din1;
    grp_fu_1006_p_ce <= grp_fu_348_ce;
    grp_fu_1006_p_din0 <= grp_fu_348_p0;
    grp_fu_1006_p_din1 <= grp_fu_348_p1;
    grp_fu_1006_p_opcode <= ap_const_lv2_0;

    grp_fu_1590_ce_assign_proc : process(ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_1590_ce <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce;
        else 
            grp_fu_1590_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_348_ce_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state34, ap_CS_fsm_state13, ap_CS_fsm_state35, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_348_ce <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_logic_1 = ap_CS_fsm_state34) and (m_axi_gmem1_AWREADY = ap_const_logic_1)))) then 
            grp_fu_348_ce <= ap_const_logic_1;
        else 
            grp_fu_348_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_348_p0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state13, bitcast_ln70_1_fu_1274_p1, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_348_p0 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_348_p0 <= bitcast_ln70_1_fu_1274_p1;
        else 
            grp_fu_348_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_348_p1_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state13, bitcast_ln70_fu_1270_p1, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_348_p1 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_348_p1 <= bitcast_ln70_fu_1270_p1;
        else 
            grp_fu_348_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_358_p4 <= empty_168_reg_1505(63 downto 2);
    icmp_ln37_fu_533_p2 <= "1" when (indvar_flatten124_fu_186 = ap_const_lv17_1B900) else "0";
    icmp_ln40_fu_551_p2 <= "1" when (indvar_flatten58_fu_178 = ap_const_lv11_3F0) else "0";
    icmp_ln44_fu_711_p2 <= "1" when (indvar_flatten_fu_170 = ap_const_lv4_9) else "0";
    icmp_ln47_fu_699_p2 <= "1" when (kernel_col_fu_162 = ap_const_lv2_3) else "0";
    icmp_ln55_fu_1052_p2 <= "1" when (out_ch_reg_286 = ap_const_lv5_18) else "0";
    icmp_ln60_fu_1111_p2 <= "1" when (signed(in_ch_fu_1084_p2) < signed(ap_const_lv32_3)) else "0";
    icmp_ln71_1_fu_1282_p2 <= "1" when (unsigned(add_ln71_reg_1493) < unsigned(ap_const_lv5_18)) else "0";
    icmp_ln71_fu_1300_p2 <= "1" when (select_ln71_fu_1293_p3 = ap_const_lv5_0) else "0";
    in_ch_fu_1084_p2 <= std_logic_vector(unsigned(shl_ln60_fu_1078_p2) - unsigned(groupIndex_reg_298));
    m_axi_gmem0_ARADDR <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARADDR;
    m_axi_gmem0_ARBURST <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARBURST;
    m_axi_gmem0_ARCACHE <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARCACHE;
    m_axi_gmem0_ARID <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARID;
    m_axi_gmem0_ARLEN <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLEN;
    m_axi_gmem0_ARLOCK <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLOCK;
    m_axi_gmem0_ARPROT <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARPROT;
    m_axi_gmem0_ARQOS <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARQOS;
    m_axi_gmem0_ARREGION <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARREGION;
    m_axi_gmem0_ARSIZE <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARSIZE;
    m_axi_gmem0_ARUSER <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARUSER;

    m_axi_gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem0_ARVALID <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID;
        else 
            m_axi_gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_RREADY_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem0_RREADY <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= ap_const_lv32_0;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv4_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;

    m_axi_gmem1_ARADDR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state26, ap_CS_fsm_state4, gmem1_addr_1_reg_1553, sext_ln64_fu_1194_p1, ap_block_state26_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_1_reg_1553;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (m_axi_gmem1_ARREADY = ap_const_logic_1))) then 
            m_axi_gmem1_ARADDR <= sext_ln64_fu_1194_p1;
        else 
            m_axi_gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem1_ARBURST <= ap_const_lv2_0;
    m_axi_gmem1_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem1_ARID <= ap_const_lv1_0;
    m_axi_gmem1_ARLEN <= ap_const_lv32_1;
    m_axi_gmem1_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem1_ARPROT <= ap_const_lv3_0;
    m_axi_gmem1_ARQOS <= ap_const_lv4_0;
    m_axi_gmem1_ARREGION <= ap_const_lv4_0;
    m_axi_gmem1_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem1_ARUSER <= ap_const_lv1_0;

    m_axi_gmem1_ARVALID_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state26, ap_CS_fsm_state4, ap_block_state26_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (m_axi_gmem1_ARREADY = ap_const_logic_1)))) then 
            m_axi_gmem1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem1_AWADDR_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state14, targetBlock_reg_1537, ap_CS_fsm_state34, gmem1_addr_reg_1519, gmem1_addr_1_reg_1553, ap_block_state14_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (m_axi_gmem1_AWREADY = ap_const_logic_1))) then 
            m_axi_gmem1_AWADDR <= gmem1_addr_1_reg_1553;
        elsif ((((ap_const_boolean_0 = ap_block_state14_io) and (targetBlock_reg_1537 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_boolean_0 = ap_block_state14_io) and (targetBlock_reg_1537 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem1_AWADDR <= gmem1_addr_reg_1519;
        else 
            m_axi_gmem1_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_1;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;

    m_axi_gmem1_AWVALID_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state14, targetBlock_reg_1537, ap_CS_fsm_state34, ap_block_state14_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state14_io) and (targetBlock_reg_1537 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_boolean_0 = ap_block_state14_io) and (targetBlock_reg_1537 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_logic_1 = ap_CS_fsm_state34) and (m_axi_gmem1_AWREADY = ap_const_logic_1)))) then 
            m_axi_gmem1_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem1_BREADY_assign_proc : process(m_axi_gmem1_BVALID, ap_CS_fsm_state20, ap_CS_fsm_state41, tobool87_not_reg_1471, ap_predicate_op250_writeresp_state20, ap_predicate_op252_writeresp_state20)
    begin
        if (((not((((ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)) or ((ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)))) and (ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not((((ap_predicate_op252_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)) or ((ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (m_axi_gmem1_BVALID = ap_const_logic_0)))) and (ap_predicate_op250_writeresp_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not(((tobool87_not_reg_1471 = ap_const_lv1_0) and (m_axi_gmem1_BVALID = ap_const_logic_0))) and (tobool87_not_reg_1471 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41)))) then 
            m_axi_gmem1_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem1_RREADY_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem1_RVALID, ap_CS_fsm_state33, ap_CS_fsm_state11)
    begin
        if (((not(((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((m_axi_gmem1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_gmem1_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem1_WDATA_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state36, bitcast_ln64_4_fu_1215_p1, bitcast_ln64_3_fu_1266_p1, bitcast_ln70_2_fu_1278_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            m_axi_gmem1_WDATA <= bitcast_ln70_2_fu_1278_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            m_axi_gmem1_WDATA <= bitcast_ln64_3_fu_1266_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            m_axi_gmem1_WDATA <= bitcast_ln64_4_fu_1215_p1;
        else 
            m_axi_gmem1_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_F;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;

    m_axi_gmem1_WVALID_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state36)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state36) and (m_axi_gmem1_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (m_axi_gmem1_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (m_axi_gmem1_WREADY = ap_const_logic_1)))) then 
            m_axi_gmem1_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state13, gmem_addr_2_reg_1547, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR, ap_block_state26_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            m_axi_gmem_ARADDR <= gmem_addr_2_reg_1547;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARADDR <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARBURST_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARBURST <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST;
        else 
            m_axi_gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARCACHE_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARCACHE <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE;
        else 
            m_axi_gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARID_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARID <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID;
        else 
            m_axi_gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARLEN_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN, ap_block_state26_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            m_axi_gmem_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARLEN <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN;
        else 
            m_axi_gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARLOCK_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARLOCK <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK;
        else 
            m_axi_gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARPROT_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARPROT <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT;
        else 
            m_axi_gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARQOS_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARQOS <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS;
        else 
            m_axi_gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARREGION_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARREGION <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION;
        else 
            m_axi_gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARSIZE_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARSIZE <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE;
        else 
            m_axi_gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARUSER_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARUSER <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER;
        else 
            m_axi_gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID, ap_block_state26_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_ARVALID <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem1_RVALID, ap_CS_fsm_state33, ap_CS_fsm_state12, ap_CS_fsm_state13, grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY)
    begin
        if ((not(((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_RREADY <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    or_ln40_1_fu_853_p2 <= (xor_ln40_fu_847_p2 or icmp_ln40_fu_551_p2);
    or_ln40_fu_737_p2 <= (icmp_ln40_fu_551_p2 or and_ln37_1_fu_717_p2);
    or_ln44_1_fu_877_p2 <= (or_ln44_fu_871_p2 or icmp_ln40_fu_551_p2);
    or_ln44_fu_871_p2 <= (and_ln40_fu_859_p2 or and_ln37_1_fu_717_p2);
    or_ln52_fu_1005_p2 <= (select_ln44_1_fu_905_p3 or add_ln52_fu_999_p2);
    p_cast15_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul141_reg_321),11));
    p_mid1116_fu_679_p2 <= std_logic_vector(unsigned(p_shl3_mid_fu_659_p3) - unsigned(p_shl4_cast_mid1114_fu_675_p1));
    p_mid113_fu_925_p2 <= std_logic_vector(unsigned(p_shl5_cast_mid1_fu_921_p1) - unsigned(zext_ln44_1_fu_891_p1));
    p_mid115_fu_963_p2 <= std_logic_vector(unsigned(p_shl3_mid1_fu_943_p3) - unsigned(p_shl4_cast_mid1_fu_959_p1));
    p_mid134_fu_791_p2 <= std_logic_vector(unsigned(zext_ln37_fu_633_p1) + unsigned(ap_const_lv9_1FF));
    p_mid154_fu_833_p2 <= std_logic_vector(unsigned(p_shl3_mid2_fu_813_p3) - unsigned(p_shl4_cast_mid152_fu_829_p1));
    p_mid174_fu_595_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_579_p1) - unsigned(p_shl2_cast_mid1_fu_591_p1));
    p_mid196_fu_645_p2 <= std_logic_vector(unsigned(zext_ln40_1_fu_621_p1) + unsigned(ap_const_lv9_1FF));
    p_mid1_fu_899_p2 <= std_logic_vector(signed(tmp_cast_mid1_fu_895_p1) + signed(zext_ln37_fu_633_p1));
    p_mid_fu_613_p3 <= (add_ln37_1_fu_565_p2 & ap_const_lv1_0);
    p_shl2_cast_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_431_p3),15));
    p_shl2_cast_mid1_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_mid1_fu_583_p3),15));
    p_shl2_fu_431_p3 <= (row_fu_182 & ap_const_lv4_0);
    p_shl2_mid1_fu_583_p3 <= (add_ln37_1_fu_565_p2 & ap_const_lv4_0);
    p_shl3_fu_507_p3 <= (empty_164_fu_483_p2 & ap_const_lv8_0);
    p_shl3_mid1_fu_943_p3 <= (p_mid1_fu_899_p2 & ap_const_lv8_0);
    p_shl3_mid2_fu_813_p3 <= (p_mid134_fu_791_p2 & ap_const_lv8_0);
    p_shl3_mid_fu_659_p3 <= (p_mid196_fu_645_p2 & ap_const_lv8_0);
        p_shl4_cast_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_fu_515_p3),17));

        p_shl4_cast_mid1114_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_mid_fu_667_p3),17));

        p_shl4_cast_mid152_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_mid2_fu_821_p3),17));

        p_shl4_cast_mid1_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_mid1_fu_951_p3),17));

    p_shl4_fu_515_p3 <= (empty_164_fu_483_p2 & ap_const_lv5_0);
    p_shl4_mid1_fu_951_p3 <= (p_mid1_fu_899_p2 & ap_const_lv5_0);
    p_shl4_mid2_fu_821_p3 <= (p_mid134_fu_791_p2 & ap_const_lv5_0);
    p_shl4_mid_fu_667_p3 <= (p_mid196_fu_645_p2 & ap_const_lv5_0);
    p_shl5_cast_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_489_p3),5));
    p_shl5_cast_mid1_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_mid1_fu_913_p3),5));
    p_shl5_fu_489_p3 <= (kernel_row_fu_166 & ap_const_lv2_0);
    p_shl5_mid1_fu_913_p3 <= (add_ln44_fu_865_p2 & ap_const_lv2_0);
    p_shl_cast_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_419_p3),15));
    p_shl_cast_mid1_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_571_p3),15));
    p_shl_fu_419_p3 <= (row_fu_182 & ap_const_lv7_0);
    p_shl_mid1_fu_571_p3 <= (add_ln37_1_fu_565_p2 & ap_const_lv7_0);
    select_ln37_1_fu_601_p3 <= 
        p_mid174_fu_595_p2 when (icmp_ln40_fu_551_p2(0) = '1') else 
        empty_fu_443_p2;
    select_ln37_2_fu_625_p3 <= 
        p_mid_fu_613_p3 when (icmp_ln40_fu_551_p2(0) = '1') else 
        tmp_9_fu_449_p3;
    select_ln37_3_fu_637_p3 <= 
        ap_const_lv8_0 when (icmp_ln40_fu_551_p2(0) = '1') else 
        shl_ln_fu_461_p3;
    select_ln37_4_fu_651_p3 <= 
        p_mid196_fu_645_p2 when (icmp_ln40_fu_551_p2(0) = '1') else 
        empty_164_fu_483_p2;
    select_ln37_5_fu_685_p3 <= 
        p_mid1116_fu_679_p2 when (icmp_ln40_fu_551_p2(0) = '1') else 
        empty_166_fu_527_p2;
    select_ln37_6_fu_723_p3 <= 
        add_ln37_1_fu_565_p2 when (icmp_ln40_fu_551_p2(0) = '1') else 
        row_fu_182;
    select_ln37_fu_557_p3 <= 
        ap_const_lv7_0 when (icmp_ln40_fu_551_p2(0) = '1') else 
        col_fu_174;
    select_ln40_1_fu_751_p3 <= 
        ap_const_lv32_1 when (or_ln40_fu_737_p2(0) = '1') else 
        biasFlag_fu_158;
    select_ln40_2_fu_759_p3 <= 
        add_ln40_fu_731_p2 when (and_ln37_1_fu_717_p2(0) = '1') else 
        select_ln37_fu_557_p3;
    select_ln40_3_cast_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_3_fu_779_p3),9));
    select_ln40_3_fu_779_p3 <= 
        shl_ln51_mid1_fu_771_p3 when (and_ln37_1_fu_717_p2(0) = '1') else 
        select_ln37_3_fu_637_p3;
    select_ln40_4_fu_797_p3 <= 
        p_mid134_fu_791_p2 when (and_ln37_1_fu_717_p2(0) = '1') else 
        select_ln37_4_fu_651_p3;
    select_ln40_5_fu_805_p3 <= 
        ap_const_lv5_0 when (or_ln40_fu_737_p2(0) = '1') else 
        empty_165_fu_501_p2;
    select_ln40_6_fu_839_p3 <= 
        p_mid154_fu_833_p2 when (and_ln37_1_fu_717_p2(0) = '1') else 
        select_ln37_5_fu_685_p3;
    select_ln40_7_fu_1156_p3 <= 
        ap_const_lv11_1 when (icmp_ln40_reg_1417(0) = '1') else 
        add_ln40_1_fu_1150_p2;
    select_ln40_fu_743_p3 <= 
        ap_const_lv2_0 when (or_ln40_fu_737_p2(0) = '1') else 
        kernel_row_fu_166;
    select_ln44_1_fu_905_p3 <= 
        p_mid1_fu_899_p2 when (and_ln40_fu_859_p2(0) = '1') else 
        select_ln40_4_fu_797_p3;
        select_ln44_2_cast_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln44_2_fu_931_p3),11));

    select_ln44_2_fu_931_p3 <= 
        p_mid113_fu_925_p2 when (and_ln40_fu_859_p2(0) = '1') else 
        select_ln40_5_fu_805_p3;
    select_ln44_3_fu_969_p3 <= 
        p_mid115_fu_963_p2 when (and_ln40_fu_859_p2(0) = '1') else 
        select_ln40_6_fu_839_p3;
    select_ln44_4_fu_977_p3 <= 
        add_ln44_fu_865_p2 when (and_ln40_fu_859_p2(0) = '1') else 
        select_ln40_fu_743_p3;
    select_ln44_5_fu_1143_p3 <= 
        ap_const_lv4_1 when (or_ln40_reg_1432(0) = '1') else 
        add_ln44_1_fu_1137_p2;
    select_ln44_fu_883_p3 <= 
        ap_const_lv2_0 when (or_ln44_1_fu_877_p2(0) = '1') else 
        kernel_col_fu_162;
    select_ln71_fu_1293_p3 <= 
        add_ln71_reg_1493 when (icmp_ln71_1_fu_1282_p2(0) = '1') else 
        add_ln71_1_fu_1287_p2;
        sext_ln37_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln37_1_fu_601_p3),20));

        sext_ln52_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln52_1_fu_989_p2),9));

        sext_ln55_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln52_fu_999_p2),17));

        sext_ln64_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_358_p4),64));

        sext_ln70_1_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_358_p4),64));

        sext_ln70_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_1236_p4),64));

    shl_ln4_fu_1219_p3 <= (out_ch_reg_286 & ap_const_lv2_0);
    shl_ln51_mid1_fu_771_p3 <= (add_ln40_fu_731_p2 & ap_const_lv1_0);
    shl_ln60_fu_1078_p2 <= std_logic_vector(shift_left(unsigned(groupIndex_reg_298),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln_fu_461_p3 <= (col_fu_174 & ap_const_lv1_0);
        tmp_11_cast_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1094_p3),64));

    tmp_1_fu_1011_p3 <= or_ln52_fu_1005_p2(8 downto 8);
    tmp_9_fu_449_p3 <= (row_fu_182 & ap_const_lv1_0);
        tmp_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_473_p2),9));

        tmp_cast_mid1_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln40_fu_743_p3),9));

    tmp_fu_473_p2 <= std_logic_vector(unsigned(kernel_row_fu_166) + unsigned(ap_const_lv2_3));
    tmp_s_fu_1094_p3 <= (add_ln57_1_fu_1073_p2 & ap_const_lv2_0);
    tobool87_not_fu_1019_p2 <= "1" when (select_ln40_1_fu_751_p3 = ap_const_lv32_0) else "0";
    trunc_ln1_fu_1236_p4 <= add_ln70_fu_1231_p2(63 downto 2);
    xor_ln37_fu_693_p2 <= (icmp_ln40_fu_551_p2 xor ap_const_lv1_1);
    xor_ln40_fu_847_p2 <= (icmp_ln44_fu_711_p2 xor ap_const_lv1_1);
    zext_ln37_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_2_fu_625_p3),9));
    zext_ln40_1_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid_fu_613_p3),9));
    zext_ln40_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_449_p3),9));
    zext_ln44_1_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_fu_865_p2),5));
    zext_ln44_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_row_fu_166),5));
    zext_ln47_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_fu_883_p3),11));
    zext_ln51_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_2_fu_759_p3),20));
    zext_ln57_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_310),20));
    zext_ln70_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_1219_p3),64));
end behav;
