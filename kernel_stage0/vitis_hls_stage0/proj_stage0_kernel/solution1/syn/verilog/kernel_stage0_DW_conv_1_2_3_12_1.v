// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_stage0_DW_conv_1_2_3_12_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        in_r,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        kernel,
        bias,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        out_r,
        grp_fu_1002_p_din0,
        grp_fu_1002_p_din1,
        grp_fu_1002_p_dout0,
        grp_fu_1002_p_ce,
        grp_fu_1006_p_din0,
        grp_fu_1006_p_din1,
        grp_fu_1006_p_opcode,
        grp_fu_1006_p_dout0,
        grp_fu_1006_p_ce
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_state2 = 41'd2;
parameter    ap_ST_fsm_state3 = 41'd4;
parameter    ap_ST_fsm_state4 = 41'd8;
parameter    ap_ST_fsm_state5 = 41'd16;
parameter    ap_ST_fsm_state6 = 41'd32;
parameter    ap_ST_fsm_state7 = 41'd64;
parameter    ap_ST_fsm_state8 = 41'd128;
parameter    ap_ST_fsm_state9 = 41'd256;
parameter    ap_ST_fsm_state10 = 41'd512;
parameter    ap_ST_fsm_state11 = 41'd1024;
parameter    ap_ST_fsm_state12 = 41'd2048;
parameter    ap_ST_fsm_state13 = 41'd4096;
parameter    ap_ST_fsm_state14 = 41'd8192;
parameter    ap_ST_fsm_state15 = 41'd16384;
parameter    ap_ST_fsm_state16 = 41'd32768;
parameter    ap_ST_fsm_state17 = 41'd65536;
parameter    ap_ST_fsm_state18 = 41'd131072;
parameter    ap_ST_fsm_state19 = 41'd262144;
parameter    ap_ST_fsm_state20 = 41'd524288;
parameter    ap_ST_fsm_state21 = 41'd1048576;
parameter    ap_ST_fsm_state22 = 41'd2097152;
parameter    ap_ST_fsm_state23 = 41'd4194304;
parameter    ap_ST_fsm_state24 = 41'd8388608;
parameter    ap_ST_fsm_state25 = 41'd16777216;
parameter    ap_ST_fsm_state26 = 41'd33554432;
parameter    ap_ST_fsm_state27 = 41'd67108864;
parameter    ap_ST_fsm_state28 = 41'd134217728;
parameter    ap_ST_fsm_state29 = 41'd268435456;
parameter    ap_ST_fsm_state30 = 41'd536870912;
parameter    ap_ST_fsm_state31 = 41'd1073741824;
parameter    ap_ST_fsm_state32 = 41'd2147483648;
parameter    ap_ST_fsm_state33 = 41'd4294967296;
parameter    ap_ST_fsm_state34 = 41'd8589934592;
parameter    ap_ST_fsm_state35 = 41'd17179869184;
parameter    ap_ST_fsm_state36 = 41'd34359738368;
parameter    ap_ST_fsm_state37 = 41'd68719476736;
parameter    ap_ST_fsm_state38 = 41'd137438953472;
parameter    ap_ST_fsm_state39 = 41'd274877906944;
parameter    ap_ST_fsm_state40 = 41'd549755813888;
parameter    ap_ST_fsm_state41 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [63:0] in_r;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] kernel;
input  [63:0] bias;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [31:0] m_axi_gmem1_WDATA;
output  [3:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [31:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [63:0] out_r;
output  [31:0] grp_fu_1002_p_din0;
output  [31:0] grp_fu_1002_p_din1;
input  [31:0] grp_fu_1002_p_dout0;
output   grp_fu_1002_p_ce;
output  [31:0] grp_fu_1006_p_din0;
output  [31:0] grp_fu_1006_p_din1;
output  [1:0] grp_fu_1006_p_opcode;
input  [31:0] grp_fu_1006_p_dout0;
output   grp_fu_1006_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem0_ARVALID;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg[0:0] m_axi_gmem_ARID;
reg[31:0] m_axi_gmem_ARLEN;
reg[2:0] m_axi_gmem_ARSIZE;
reg[1:0] m_axi_gmem_ARBURST;
reg[1:0] m_axi_gmem_ARLOCK;
reg[3:0] m_axi_gmem_ARCACHE;
reg[2:0] m_axi_gmem_ARPROT;
reg[3:0] m_axi_gmem_ARQOS;
reg[3:0] m_axi_gmem_ARREGION;
reg[0:0] m_axi_gmem_ARUSER;
reg m_axi_gmem_RREADY;
reg m_axi_gmem1_AWVALID;
reg[63:0] m_axi_gmem1_AWADDR;
reg m_axi_gmem1_WVALID;
reg[31:0] m_axi_gmem1_WDATA;
reg m_axi_gmem1_ARVALID;
reg[63:0] m_axi_gmem1_ARADDR;
reg m_axi_gmem1_RREADY;
reg m_axi_gmem1_BREADY;

(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state26;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state33;
reg    gmem1_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    gmem1_blk_n_R;
wire    ap_CS_fsm_state11;
reg    gmem1_blk_n_AW;
wire    ap_CS_fsm_state14;
reg   [0:0] targetBlock_reg_1537;
reg    gmem1_blk_n_W;
wire    ap_CS_fsm_state21;
reg    gmem1_blk_n_B;
wire    ap_CS_fsm_state20;
reg   [0:0] icmp_ln60_reg_1510;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state41;
reg   [0:0] tobool87_not_reg_1471;
wire   [16:0] add_ln37_fu_539_p2;
reg   [16:0] add_ln37_reg_1412;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln40_fu_551_p2;
reg   [0:0] icmp_ln40_reg_1417;
wire   [0:0] icmp_ln37_fu_533_p2;
wire  signed [19:0] sext_ln37_fu_609_p1;
reg  signed [19:0] sext_ln37_reg_1422;
wire   [6:0] select_ln37_6_fu_723_p3;
reg   [6:0] select_ln37_6_reg_1427;
wire   [0:0] or_ln40_fu_737_p2;
reg   [0:0] or_ln40_reg_1432;
wire   [6:0] select_ln40_2_fu_759_p3;
reg   [6:0] select_ln40_2_reg_1437;
wire   [19:0] zext_ln51_fu_767_p1;
reg   [19:0] zext_ln51_reg_1442;
wire   [1:0] select_ln44_fu_883_p3;
reg   [1:0] select_ln44_reg_1447;
wire  signed [10:0] select_ln44_2_cast_fu_939_p1;
reg  signed [10:0] select_ln44_2_cast_reg_1452;
wire   [1:0] select_ln44_4_fu_977_p3;
reg   [1:0] select_ln44_4_reg_1457;
wire   [10:0] zext_ln47_fu_985_p1;
reg   [10:0] zext_ln47_reg_1462;
wire   [0:0] tmp_1_fu_1011_p3;
reg   [0:0] tmp_1_reg_1467;
wire   [0:0] tobool87_not_fu_1019_p2;
wire   [16:0] add_ln62_fu_1029_p2;
reg   [16:0] add_ln62_reg_1475;
wire   [9:0] add_ln55_fu_1040_p2;
reg   [9:0] add_ln55_reg_1480;
wire    ap_CS_fsm_state3;
wire   [18:0] add_ln55_1_fu_1046_p2;
reg   [18:0] add_ln55_1_reg_1485;
wire   [4:0] add_ln71_fu_1058_p2;
reg   [4:0] add_ln71_reg_1493;
wire   [31:0] in_ch_fu_1084_p2;
reg   [31:0] in_ch_reg_1500;
wire   [0:0] icmp_ln55_fu_1052_p2;
wire   [63:0] empty_168_fu_1106_p2;
reg   [63:0] empty_168_reg_1505;
wire   [0:0] icmp_ln60_fu_1111_p2;
wire   [10:0] add_ln63_1_fu_1122_p2;
reg   [10:0] add_ln63_1_reg_1514;
reg   [63:0] gmem1_addr_reg_1519;
reg   [31:0] gmem1_addr_read_reg_1527;
wire   [31:0] bitcast_ln64_fu_1205_p1;
reg   [31:0] bitcast_ln64_reg_1532;
wire    ap_CS_fsm_state12;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_return;
wire    ap_CS_fsm_state13;
reg   [63:0] gmem_addr_2_reg_1547;
reg   [63:0] gmem1_addr_1_reg_1553;
reg   [31:0] gmem_addr_2_read_reg_1560;
reg   [31:0] gmem1_addr_1_read_reg_1565;
wire   [31:0] bitcast_ln70_fu_1270_p1;
wire   [31:0] bitcast_ln70_1_fu_1274_p1;
reg   [31:0] add2_reg_1580;
wire    ap_CS_fsm_state35;
wire   [31:0] groupIndex_1_fu_1312_p3;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_idle;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_ready;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWVALID;
wire   [63:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWADDR;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWID;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLEN;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWBURST;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWPROT;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWQOS;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWREGION;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWUSER;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WVALID;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WDATA;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WSTRB;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WLAST;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WID;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WUSER;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID;
wire   [63:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARADDR;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARID;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLEN;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARBURST;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARPROT;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARQOS;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARREGION;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARUSER;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_BREADY;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWVALID;
wire   [63:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWADDR;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWID;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLEN;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWSIZE;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWBURST;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLOCK;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWCACHE;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWPROT;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWQOS;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWREGION;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWUSER;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WVALID;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WDATA;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WSTRB;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WLAST;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WID;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WUSER;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID;
wire   [63:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE;
wire   [2:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS;
wire   [3:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION;
wire   [0:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_BREADY;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out_ap_vld;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out_ap_vld;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1;
wire   [1:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_opcode;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din0;
wire   [31:0] grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din1;
wire    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce;
reg   [4:0] out_ch_reg_286;
reg    ap_block_state41;
reg   [31:0] groupIndex_reg_298;
reg   [18:0] phi_mul_reg_310;
reg   [9:0] phi_mul141_reg_321;
reg    grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg;
reg   [31:0] add8122_loc_fu_194;
reg   [31:0] add_loc_fu_190;
wire  signed [63:0] sext_ln64_fu_1194_p1;
wire  signed [63:0] sext_ln70_fu_1246_p1;
wire  signed [63:0] sext_ln70_1_fu_1256_p1;
reg    ap_block_state14_io;
reg    ap_predicate_op250_writeresp_state20;
reg    ap_predicate_op252_writeresp_state20;
reg    ap_block_state20;
wire   [31:0] bitcast_ln64_4_fu_1215_p1;
wire   [31:0] bitcast_ln64_3_fu_1266_p1;
reg    ap_block_state26_io;
reg    ap_block_state33;
wire   [31:0] bitcast_ln70_2_fu_1278_p1;
reg   [31:0] biasFlag_fu_158;
wire   [31:0] select_ln40_1_fu_751_p3;
reg   [1:0] kernel_col_fu_162;
wire   [1:0] add_ln47_fu_1132_p2;
reg   [1:0] kernel_row_fu_166;
reg   [3:0] indvar_flatten_fu_170;
wire   [3:0] select_ln44_5_fu_1143_p3;
reg   [6:0] col_fu_174;
reg   [10:0] indvar_flatten58_fu_178;
wire   [10:0] select_ln40_7_fu_1156_p3;
reg   [6:0] row_fu_182;
reg   [16:0] indvar_flatten124_fu_186;
reg   [31:0] grp_fu_348_p0;
reg   [31:0] grp_fu_348_p1;
wire   [13:0] p_shl_fu_419_p3;
wire   [10:0] p_shl2_fu_431_p3;
wire   [14:0] p_shl_cast_fu_427_p1;
wire   [14:0] p_shl2_cast_fu_439_p1;
wire   [7:0] tmp_9_fu_449_p3;
wire   [1:0] tmp_fu_473_p2;
wire  signed [8:0] tmp_cast_fu_479_p1;
wire   [8:0] zext_ln40_fu_457_p1;
wire   [3:0] p_shl5_fu_489_p3;
wire   [4:0] p_shl5_cast_fu_497_p1;
wire   [4:0] zext_ln44_fu_469_p1;
wire   [8:0] empty_164_fu_483_p2;
wire   [13:0] p_shl4_fu_515_p3;
wire   [16:0] p_shl3_fu_507_p3;
wire  signed [16:0] p_shl4_cast_fu_523_p1;
wire   [6:0] add_ln37_1_fu_565_p2;
wire   [13:0] p_shl_mid1_fu_571_p3;
wire   [10:0] p_shl2_mid1_fu_583_p3;
wire   [14:0] p_shl_cast_mid1_fu_579_p1;
wire   [14:0] p_shl2_cast_mid1_fu_591_p1;
wire   [14:0] p_mid174_fu_595_p2;
wire   [14:0] empty_fu_443_p2;
wire   [14:0] select_ln37_1_fu_601_p3;
wire   [7:0] p_mid_fu_613_p3;
wire   [7:0] select_ln37_2_fu_625_p3;
wire   [7:0] shl_ln_fu_461_p3;
wire   [8:0] zext_ln40_1_fu_621_p1;
wire   [8:0] p_mid196_fu_645_p2;
wire   [13:0] p_shl4_mid_fu_667_p3;
wire   [16:0] p_shl3_mid_fu_659_p3;
wire  signed [16:0] p_shl4_cast_mid1114_fu_675_p1;
wire   [16:0] p_mid1116_fu_679_p2;
wire   [16:0] empty_166_fu_527_p2;
wire   [0:0] icmp_ln47_fu_699_p2;
wire   [0:0] xor_ln37_fu_693_p2;
wire   [0:0] icmp_ln44_fu_711_p2;
wire   [6:0] select_ln37_fu_557_p3;
wire   [0:0] and_ln37_1_fu_717_p2;
wire   [6:0] add_ln40_fu_731_p2;
wire   [7:0] shl_ln51_mid1_fu_771_p3;
wire   [7:0] select_ln37_3_fu_637_p3;
wire   [7:0] select_ln40_3_fu_779_p3;
wire   [8:0] zext_ln37_fu_633_p1;
wire   [8:0] p_mid134_fu_791_p2;
wire   [8:0] select_ln37_4_fu_651_p3;
wire   [4:0] empty_165_fu_501_p2;
wire   [13:0] p_shl4_mid2_fu_821_p3;
wire   [16:0] p_shl3_mid2_fu_813_p3;
wire  signed [16:0] p_shl4_cast_mid152_fu_829_p1;
wire   [16:0] p_mid154_fu_833_p2;
wire   [16:0] select_ln37_5_fu_685_p3;
wire   [0:0] xor_ln40_fu_847_p2;
wire   [0:0] and_ln37_fu_705_p2;
wire   [0:0] or_ln40_1_fu_853_p2;
wire  signed [1:0] select_ln40_fu_743_p3;
wire   [0:0] and_ln40_fu_859_p2;
wire   [0:0] or_ln44_fu_871_p2;
wire   [0:0] or_ln44_1_fu_877_p2;
wire   [1:0] add_ln44_fu_865_p2;
wire  signed [8:0] tmp_cast_mid1_fu_895_p1;
wire   [8:0] p_mid1_fu_899_p2;
wire   [8:0] select_ln40_4_fu_797_p3;
wire   [3:0] p_shl5_mid1_fu_913_p3;
wire   [4:0] p_shl5_cast_mid1_fu_921_p1;
wire   [4:0] zext_ln44_1_fu_891_p1;
wire   [4:0] p_mid113_fu_925_p2;
wire   [4:0] select_ln40_5_fu_805_p3;
wire   [4:0] select_ln44_2_fu_931_p3;
wire   [13:0] p_shl4_mid1_fu_951_p3;
wire   [16:0] p_shl3_mid1_fu_943_p3;
wire  signed [16:0] p_shl4_cast_mid1_fu_959_p1;
wire   [16:0] p_mid115_fu_963_p2;
wire   [16:0] select_ln40_6_fu_839_p3;
wire   [1:0] add_ln52_1_fu_989_p2;
wire  signed [8:0] sext_ln52_fu_995_p1;
wire   [8:0] select_ln40_3_cast_fu_787_p1;
wire  signed [8:0] add_ln52_fu_999_p2;
wire   [8:0] select_ln44_1_fu_905_p3;
wire   [8:0] or_ln52_fu_1005_p2;
wire  signed [16:0] sext_ln55_fu_1025_p1;
wire   [16:0] select_ln44_3_fu_969_p3;
wire   [19:0] zext_ln57_fu_1064_p1;
wire   [19:0] add_ln57_fu_1068_p2;
wire   [31:0] shl_ln60_fu_1078_p2;
wire   [19:0] add_ln57_1_fu_1073_p2;
wire   [21:0] tmp_s_fu_1094_p3;
wire  signed [63:0] tmp_11_cast_fu_1102_p1;
wire   [10:0] p_cast15_fu_1090_p1;
wire   [10:0] add_ln63_fu_1117_p2;
wire   [3:0] add_ln44_1_fu_1137_p2;
wire   [10:0] add_ln40_1_fu_1150_p2;
wire   [61:0] grp_fu_358_p4;
wire   [6:0] shl_ln4_fu_1219_p3;
wire   [63:0] zext_ln70_fu_1227_p1;
wire   [63:0] add_ln70_fu_1231_p2;
wire   [61:0] trunc_ln1_fu_1236_p4;
wire   [0:0] icmp_ln71_1_fu_1282_p2;
wire   [4:0] add_ln71_1_fu_1287_p2;
wire   [4:0] select_ln71_fu_1293_p3;
wire   [0:0] icmp_ln71_fu_1300_p2;
wire   [31:0] add_ln72_fu_1306_p2;
reg    grp_fu_348_ce;
reg    grp_fu_1590_ce;
reg   [40:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
reg    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
reg    ap_ST_fsm_state41_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
#0 grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg = 1'b0;
end

kernel_stage0_DW_conv_1_2_3_12_1_Pipeline_In_Channel grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start),
    .ap_done(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done),
    .ap_idle(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_idle),
    .ap_ready(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_ready),
    .sext_ln60(in_ch_reg_1500),
    .bitcast_ln64(bitcast_ln64_reg_1532),
    .sext_ln62(add_ln62_reg_1475),
    .in_r(in_r),
    .m_axi_gmem0_AWVALID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(m_axi_gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(m_axi_gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(m_axi_gmem0_RDATA),
    .m_axi_gmem0_RLAST(m_axi_gmem0_RLAST),
    .m_axi_gmem0_RID(m_axi_gmem0_RID),
    .m_axi_gmem0_RFIFONUM(m_axi_gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(m_axi_gmem0_RUSER),
    .m_axi_gmem0_RRESP(m_axi_gmem0_RRESP),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .sext_ln63(add_ln63_1_reg_1514),
    .kernel(kernel),
    .m_axi_gmem_AWVALID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .add8122_out(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out),
    .add8122_out_ap_vld(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out_ap_vld),
    .add_out(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out),
    .add_out_ap_vld(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out_ap_vld),
    .ap_return(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_return),
    .grp_fu_348_p_din0(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0),
    .grp_fu_348_p_din1(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1),
    .grp_fu_348_p_opcode(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_opcode),
    .grp_fu_348_p_dout0(grp_fu_1006_p_dout0),
    .grp_fu_348_p_ce(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce),
    .grp_fu_1590_p_din0(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din0),
    .grp_fu_1590_p_din1(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din1),
    .grp_fu_1590_p_dout0(grp_fu_1002_p_dout0),
    .grp_fu_1590_p_ce(grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg <= 1'b1;
        end else if ((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_ready == 1'b1)) begin
            grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        biasFlag_fu_158 <= 32'd1;
    end else if (((tmp_1_fu_1011_p3 == 1'd1) & (icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        biasFlag_fu_158 <= select_ln40_1_fu_751_p3;
    end else if (((icmp_ln55_fu_1052_p2 == 1'd1) & (tmp_1_reg_1467 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        biasFlag_fu_158 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_fu_174 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        col_fu_174 <= select_ln40_2_reg_1437;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1011_p3 == 1'd0) & (icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        groupIndex_reg_298 <= 32'd0;
    end else if ((~((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
        groupIndex_reg_298 <= groupIndex_1_fu_1312_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten124_fu_186 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        indvar_flatten124_fu_186 <= add_ln37_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten58_fu_178 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        indvar_flatten58_fu_178 <= select_ln40_7_fu_1156_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_170 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        indvar_flatten_fu_170 <= select_ln44_5_fu_1143_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_col_fu_162 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        kernel_col_fu_162 <= add_ln47_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_row_fu_166 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        kernel_row_fu_166 <= select_ln44_4_reg_1457;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1011_p3 == 1'd0) & (icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_ch_reg_286 <= 5'd0;
    end else if ((~((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
        out_ch_reg_286 <= add_ln71_reg_1493;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1011_p3 == 1'd0) & (icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul141_reg_321 <= 10'd0;
    end else if ((~((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
        phi_mul141_reg_321 <= add_ln55_reg_1480;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1011_p3 == 1'd0) & (icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_310 <= 19'd0;
    end else if ((~((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
        phi_mul_reg_310 <= add_ln55_1_reg_1485;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_fu_182 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
        row_fu_182 <= select_ln37_6_reg_1427;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add2_reg_1580 <= grp_fu_1006_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        add8122_loc_fu_194 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add8122_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln37_reg_1412 <= add_ln37_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_reg_1467 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln55_1_reg_1485 <= add_ln55_1_fu_1046_p2;
        add_ln55_reg_1480 <= add_ln55_fu_1040_p2;
        add_ln71_reg_1493 <= add_ln71_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1011_p3 == 1'd0) & (icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln62_reg_1475 <= add_ln62_fu_1029_p2;
        tobool87_not_reg_1471 <= tobool87_not_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_1111_p2 == 1'd1) & (icmp_ln55_fu_1052_p2 == 1'd0) & (tmp_1_reg_1467 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln63_1_reg_1514 <= add_ln63_1_fu_1122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        add_loc_fu_190 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_add_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bitcast_ln64_reg_1532 <= bitcast_ln64_fu_1205_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_1052_p2 == 1'd0) & (tmp_1_reg_1467 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_168_reg_1505 <= empty_168_fu_1106_p2;
        icmp_ln60_reg_1510 <= icmp_ln60_fu_1111_p2;
        in_ch_reg_1500 <= in_ch_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        gmem1_addr_1_read_reg_1565 <= m_axi_gmem1_RDATA;
        gmem_addr_2_read_reg_1560 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tobool87_not_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        gmem1_addr_1_reg_1553 <= sext_ln70_1_fu_1256_p1;
        gmem_addr_2_reg_1547 <= sext_ln70_fu_1246_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        gmem1_addr_read_reg_1527 <= m_axi_gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        gmem1_addr_reg_1519 <= sext_ln64_fu_1194_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln40_reg_1417 <= icmp_ln40_fu_551_p2;
        or_ln40_reg_1432 <= or_ln40_fu_737_p2;
        select_ln37_6_reg_1427 <= select_ln37_6_fu_723_p3;
        select_ln40_2_reg_1437 <= select_ln40_2_fu_759_p3;
        select_ln44_2_cast_reg_1452 <= select_ln44_2_cast_fu_939_p1;
        select_ln44_4_reg_1457 <= select_ln44_4_fu_977_p3;
        select_ln44_reg_1447 <= select_ln44_fu_883_p3;
        sext_ln37_reg_1422[19 : 4] <= sext_ln37_fu_609_p1[19 : 4];
        tmp_1_reg_1467 <= or_ln52_fu_1005_p2[32'd8];
        zext_ln47_reg_1462[1 : 0] <= zext_ln47_fu_985_p1[1 : 0];
        zext_ln51_reg_1442[6 : 0] <= zext_ln51_fu_767_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        targetBlock_reg_1537 <= grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_return;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem1_RVALID == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state14_io)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem1_WREADY == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op252_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)) | ((ap_predicate_op250_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)))) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem1_WREADY == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state26_io)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

always @ (*) begin
    if (((m_axi_gmem1_RVALID == 1'b0) | (m_axi_gmem_RVALID == 1'b0))) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem1_AWREADY == 1'b0)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

assign ap_ST_fsm_state35_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem1_WREADY == 1'b0)) begin
        ap_ST_fsm_state36_blk = 1'b1;
    end else begin
        ap_ST_fsm_state36_blk = 1'b0;
    end
end

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

always @ (*) begin
    if (((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0))) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem1_ARREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln37_fu_533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_fu_533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state26))) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | ((targetBlock_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((targetBlock_reg_1537 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((tobool87_not_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_state41)) | ((icmp_ln60_reg_1510 == 1'd1) & (targetBlock_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln60_reg_1510 == 1'd1) & (targetBlock_reg_1537 == 1'd1) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state33))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state21))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_1590_ce = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_ce;
    end else begin
        grp_fu_1590_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_348_ce = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state34) & (m_axi_gmem1_AWREADY == 1'b1)))) begin
        grp_fu_348_ce = 1'b1;
    end else begin
        grp_fu_348_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_348_p0 = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_348_p0 = bitcast_ln70_1_fu_1274_p1;
    end else begin
        grp_fu_348_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_348_p1 = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_348_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_348_p1 = bitcast_ln70_fu_1270_p1;
    end else begin
        grp_fu_348_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem0_ARVALID = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARVALID;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem0_RREADY = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_RREADY;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state26_io) & (1'b1 == ap_CS_fsm_state26))) begin
        m_axi_gmem1_ARADDR = gmem1_addr_1_reg_1553;
    end else if (((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem1_ARREADY == 1'b1))) begin
        m_axi_gmem1_ARADDR = sext_ln64_fu_1194_p1;
    end else begin
        m_axi_gmem1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state26_io) & (1'b1 == ap_CS_fsm_state26)) | ((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem1_ARREADY == 1'b1)))) begin
        m_axi_gmem1_ARVALID = 1'b1;
    end else begin
        m_axi_gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (m_axi_gmem1_AWREADY == 1'b1))) begin
        m_axi_gmem1_AWADDR = gmem1_addr_1_reg_1553;
    end else if ((((1'b0 == ap_block_state14_io) & (targetBlock_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state14_io) & (targetBlock_reg_1537 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        m_axi_gmem1_AWADDR = gmem1_addr_reg_1519;
    end else begin
        m_axi_gmem1_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state14_io) & (targetBlock_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state14_io) & (targetBlock_reg_1537 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state34) & (m_axi_gmem1_AWREADY == 1'b1)))) begin
        m_axi_gmem1_AWVALID = 1'b1;
    end else begin
        m_axi_gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op252_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)) | ((ap_predicate_op250_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0))) & (ap_predicate_op252_writeresp_state20 == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | (~(((ap_predicate_op252_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)) | ((ap_predicate_op250_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0))) & (ap_predicate_op250_writeresp_state20 == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | (~((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0)) & (tobool87_not_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_state41)))) begin
        m_axi_gmem1_BREADY = 1'b1;
    end else begin
        m_axi_gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((~((m_axi_gmem1_RVALID == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | ((m_axi_gmem1_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem1_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        m_axi_gmem1_WDATA = bitcast_ln70_2_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        m_axi_gmem1_WDATA = bitcast_ln64_3_fu_1266_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        m_axi_gmem1_WDATA = bitcast_ln64_4_fu_1215_p1;
    end else begin
        m_axi_gmem1_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state36) & (m_axi_gmem1_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (m_axi_gmem1_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (m_axi_gmem1_WREADY == 1'b1)))) begin
        m_axi_gmem1_WVALID = 1'b1;
    end else begin
        m_axi_gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state26_io) & (1'b1 == ap_CS_fsm_state26))) begin
        m_axi_gmem_ARADDR = gmem_addr_2_reg_1547;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARADDR = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARADDR;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARBURST = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARBURST;
    end else begin
        m_axi_gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARCACHE = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARCACHE;
    end else begin
        m_axi_gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARID = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARID;
    end else begin
        m_axi_gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state26_io) & (1'b1 == ap_CS_fsm_state26))) begin
        m_axi_gmem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARLEN = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLEN;
    end else begin
        m_axi_gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARLOCK = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARLOCK;
    end else begin
        m_axi_gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARPROT = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARPROT;
    end else begin
        m_axi_gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARQOS = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARQOS;
    end else begin
        m_axi_gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARREGION = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARREGION;
    end else begin
        m_axi_gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARSIZE = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARSIZE;
    end else begin
        m_axi_gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARUSER = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARUSER;
    end else begin
        m_axi_gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state26_io) & (1'b1 == ap_CS_fsm_state26))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_ARVALID = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_ARVALID;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_gmem1_RVALID == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_gmem_RREADY = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem_RREADY;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln37_fu_533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln55_fu_1052_p2 == 1'd1) | (tmp_1_reg_1467 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln60_fu_1111_p2 == 1'd0) & (icmp_ln55_fu_1052_p2 == 1'd0) & (tmp_1_reg_1467 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem1_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_gmem1_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_io) & (targetBlock_reg_1537 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((1'b0 == ap_block_state14_io) & (targetBlock_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (m_axi_gmem1_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if ((~(((ap_predicate_op252_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)) | ((ap_predicate_op250_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0))) & (tobool87_not_reg_1471 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else if ((~(((ap_predicate_op252_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)) | ((ap_predicate_op250_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0))) & (tobool87_not_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (m_axi_gmem1_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b0 == ap_block_state26_io) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if ((~((m_axi_gmem1_RVALID == 1'b0) | (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (m_axi_gmem1_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (m_axi_gmem1_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if ((~((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_1_fu_565_p2 = (row_fu_182 + 7'd1);

assign add_ln37_fu_539_p2 = (indvar_flatten124_fu_186 + 17'd1);

assign add_ln40_1_fu_1150_p2 = (indvar_flatten58_fu_178 + 11'd1);

assign add_ln40_fu_731_p2 = (select_ln37_fu_557_p3 + 7'd1);

assign add_ln44_1_fu_1137_p2 = (indvar_flatten_fu_170 + 4'd1);

assign add_ln44_fu_865_p2 = ($signed(select_ln40_fu_743_p3) + $signed(2'd1));

assign add_ln47_fu_1132_p2 = (select_ln44_reg_1447 + 2'd1);

assign add_ln52_1_fu_989_p2 = ($signed(select_ln44_fu_883_p3) + $signed(2'd3));

assign add_ln52_fu_999_p2 = ($signed(sext_ln52_fu_995_p1) + $signed(select_ln40_3_cast_fu_787_p1));

assign add_ln55_1_fu_1046_p2 = (phi_mul_reg_310 + 19'd12544);

assign add_ln55_fu_1040_p2 = (phi_mul141_reg_321 + 10'd27);

assign add_ln57_1_fu_1073_p2 = (add_ln57_fu_1068_p2 + zext_ln51_reg_1442);

assign add_ln57_fu_1068_p2 = ($signed(sext_ln37_reg_1422) + $signed(zext_ln57_fu_1064_p1));

assign add_ln62_fu_1029_p2 = ($signed(sext_ln55_fu_1025_p1) + $signed(select_ln44_3_fu_969_p3));

assign add_ln63_1_fu_1122_p2 = (add_ln63_fu_1117_p2 + zext_ln47_reg_1462);

assign add_ln63_fu_1117_p2 = ($signed(select_ln44_2_cast_reg_1452) + $signed(p_cast15_fu_1090_p1));

assign add_ln70_fu_1231_p2 = (zext_ln70_fu_1227_p1 + bias);

assign add_ln71_1_fu_1287_p2 = (out_ch_reg_286 + 5'd9);

assign add_ln71_fu_1058_p2 = (out_ch_reg_286 + 5'd1);

assign add_ln72_fu_1306_p2 = (groupIndex_reg_298 + 32'd1);

assign and_ln37_1_fu_717_p2 = (xor_ln37_fu_693_p2 & icmp_ln44_fu_711_p2);

assign and_ln37_fu_705_p2 = (xor_ln37_fu_693_p2 & icmp_ln47_fu_699_p2);

assign and_ln40_fu_859_p2 = (or_ln40_1_fu_853_p2 & and_ln37_fu_705_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

always @ (*) begin
    ap_block_state14_io = (((targetBlock_reg_1537 == 1'd0) & (m_axi_gmem1_AWREADY == 1'b0)) | ((targetBlock_reg_1537 == 1'd1) & (m_axi_gmem1_AWREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state20 = (((ap_predicate_op252_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)) | ((ap_predicate_op250_writeresp_state20 == 1'b1) & (m_axi_gmem1_BVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state26_io = ((m_axi_gmem1_ARREADY == 1'b0) | (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state33 = ((m_axi_gmem1_RVALID == 1'b0) | (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state41 = ((tobool87_not_reg_1471 == 1'd0) & (m_axi_gmem1_BVALID == 1'b0));
end

always @ (*) begin
    ap_predicate_op250_writeresp_state20 = ((icmp_ln60_reg_1510 == 1'd1) & (targetBlock_reg_1537 == 1'd0));
end

always @ (*) begin
    ap_predicate_op252_writeresp_state20 = ((icmp_ln60_reg_1510 == 1'd1) & (targetBlock_reg_1537 == 1'd1));
end

assign bitcast_ln64_3_fu_1266_p1 = add8122_loc_fu_194;

assign bitcast_ln64_4_fu_1215_p1 = add_loc_fu_190;

assign bitcast_ln64_fu_1205_p1 = gmem1_addr_read_reg_1527;

assign bitcast_ln70_1_fu_1274_p1 = gmem1_addr_1_read_reg_1565;

assign bitcast_ln70_2_fu_1278_p1 = add2_reg_1580;

assign bitcast_ln70_fu_1270_p1 = gmem_addr_2_read_reg_1560;

assign empty_164_fu_483_p2 = ($signed(tmp_cast_fu_479_p1) + $signed(zext_ln40_fu_457_p1));

assign empty_165_fu_501_p2 = (p_shl5_cast_fu_497_p1 - zext_ln44_fu_469_p1);

assign empty_166_fu_527_p2 = ($signed(p_shl3_fu_507_p3) - $signed(p_shl4_cast_fu_523_p1));

assign empty_168_fu_1106_p2 = ($signed(tmp_11_cast_fu_1102_p1) + $signed(out_r));

assign empty_fu_443_p2 = (p_shl_cast_fu_427_p1 - p_shl2_cast_fu_439_p1);

assign groupIndex_1_fu_1312_p3 = ((icmp_ln71_fu_1300_p2[0:0] == 1'b1) ? add_ln72_fu_1306_p2 : groupIndex_reg_298);

assign grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_ap_start_reg;

assign grp_fu_1002_p_ce = grp_fu_1590_ce;

assign grp_fu_1002_p_din0 = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din0;

assign grp_fu_1002_p_din1 = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_grp_fu_1590_p_din1;

assign grp_fu_1006_p_ce = grp_fu_348_ce;

assign grp_fu_1006_p_din0 = grp_fu_348_p0;

assign grp_fu_1006_p_din1 = grp_fu_348_p1;

assign grp_fu_1006_p_opcode = 2'd0;

assign grp_fu_358_p4 = {{empty_168_reg_1505[63:2]}};

assign icmp_ln37_fu_533_p2 = ((indvar_flatten124_fu_186 == 17'd112896) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_551_p2 = ((indvar_flatten58_fu_178 == 11'd1008) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_711_p2 = ((indvar_flatten_fu_170 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_699_p2 = ((kernel_col_fu_162 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1052_p2 = ((out_ch_reg_286 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_1111_p2 = (($signed(in_ch_fu_1084_p2) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln71_1_fu_1282_p2 = ((add_ln71_reg_1493 < 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1300_p2 = ((select_ln71_fu_1293_p3 == 5'd0) ? 1'b1 : 1'b0);

assign in_ch_fu_1084_p2 = (shl_ln60_fu_1078_p2 - groupIndex_reg_298);

assign m_axi_gmem0_ARADDR = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARADDR;

assign m_axi_gmem0_ARBURST = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARBURST;

assign m_axi_gmem0_ARCACHE = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARCACHE;

assign m_axi_gmem0_ARID = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARID;

assign m_axi_gmem0_ARLEN = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLEN;

assign m_axi_gmem0_ARLOCK = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARLOCK;

assign m_axi_gmem0_ARPROT = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARPROT;

assign m_axi_gmem0_ARQOS = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARQOS;

assign m_axi_gmem0_ARREGION = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARREGION;

assign m_axi_gmem0_ARSIZE = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARSIZE;

assign m_axi_gmem0_ARUSER = grp_DW_conv_1_2_3_12_1_Pipeline_In_Channel_fu_332_m_axi_gmem0_ARUSER;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 32'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd1;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd1;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 4'd15;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln40_1_fu_853_p2 = (xor_ln40_fu_847_p2 | icmp_ln40_fu_551_p2);

assign or_ln40_fu_737_p2 = (icmp_ln40_fu_551_p2 | and_ln37_1_fu_717_p2);

assign or_ln44_1_fu_877_p2 = (or_ln44_fu_871_p2 | icmp_ln40_fu_551_p2);

assign or_ln44_fu_871_p2 = (and_ln40_fu_859_p2 | and_ln37_1_fu_717_p2);

assign or_ln52_fu_1005_p2 = (select_ln44_1_fu_905_p3 | add_ln52_fu_999_p2);

assign p_cast15_fu_1090_p1 = phi_mul141_reg_321;

assign p_mid1116_fu_679_p2 = ($signed(p_shl3_mid_fu_659_p3) - $signed(p_shl4_cast_mid1114_fu_675_p1));

assign p_mid113_fu_925_p2 = (p_shl5_cast_mid1_fu_921_p1 - zext_ln44_1_fu_891_p1);

assign p_mid115_fu_963_p2 = ($signed(p_shl3_mid1_fu_943_p3) - $signed(p_shl4_cast_mid1_fu_959_p1));

assign p_mid134_fu_791_p2 = ($signed(zext_ln37_fu_633_p1) + $signed(9'd511));

assign p_mid154_fu_833_p2 = ($signed(p_shl3_mid2_fu_813_p3) - $signed(p_shl4_cast_mid152_fu_829_p1));

assign p_mid174_fu_595_p2 = (p_shl_cast_mid1_fu_579_p1 - p_shl2_cast_mid1_fu_591_p1);

assign p_mid196_fu_645_p2 = ($signed(zext_ln40_1_fu_621_p1) + $signed(9'd511));

assign p_mid1_fu_899_p2 = ($signed(tmp_cast_mid1_fu_895_p1) + $signed(zext_ln37_fu_633_p1));

assign p_mid_fu_613_p3 = {{add_ln37_1_fu_565_p2}, {1'd0}};

assign p_shl2_cast_fu_439_p1 = p_shl2_fu_431_p3;

assign p_shl2_cast_mid1_fu_591_p1 = p_shl2_mid1_fu_583_p3;

assign p_shl2_fu_431_p3 = {{row_fu_182}, {4'd0}};

assign p_shl2_mid1_fu_583_p3 = {{add_ln37_1_fu_565_p2}, {4'd0}};

assign p_shl3_fu_507_p3 = {{empty_164_fu_483_p2}, {8'd0}};

assign p_shl3_mid1_fu_943_p3 = {{p_mid1_fu_899_p2}, {8'd0}};

assign p_shl3_mid2_fu_813_p3 = {{p_mid134_fu_791_p2}, {8'd0}};

assign p_shl3_mid_fu_659_p3 = {{p_mid196_fu_645_p2}, {8'd0}};

assign p_shl4_cast_fu_523_p1 = $signed(p_shl4_fu_515_p3);

assign p_shl4_cast_mid1114_fu_675_p1 = $signed(p_shl4_mid_fu_667_p3);

assign p_shl4_cast_mid152_fu_829_p1 = $signed(p_shl4_mid2_fu_821_p3);

assign p_shl4_cast_mid1_fu_959_p1 = $signed(p_shl4_mid1_fu_951_p3);

assign p_shl4_fu_515_p3 = {{empty_164_fu_483_p2}, {5'd0}};

assign p_shl4_mid1_fu_951_p3 = {{p_mid1_fu_899_p2}, {5'd0}};

assign p_shl4_mid2_fu_821_p3 = {{p_mid134_fu_791_p2}, {5'd0}};

assign p_shl4_mid_fu_667_p3 = {{p_mid196_fu_645_p2}, {5'd0}};

assign p_shl5_cast_fu_497_p1 = p_shl5_fu_489_p3;

assign p_shl5_cast_mid1_fu_921_p1 = p_shl5_mid1_fu_913_p3;

assign p_shl5_fu_489_p3 = {{kernel_row_fu_166}, {2'd0}};

assign p_shl5_mid1_fu_913_p3 = {{add_ln44_fu_865_p2}, {2'd0}};

assign p_shl_cast_fu_427_p1 = p_shl_fu_419_p3;

assign p_shl_cast_mid1_fu_579_p1 = p_shl_mid1_fu_571_p3;

assign p_shl_fu_419_p3 = {{row_fu_182}, {7'd0}};

assign p_shl_mid1_fu_571_p3 = {{add_ln37_1_fu_565_p2}, {7'd0}};

assign select_ln37_1_fu_601_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? p_mid174_fu_595_p2 : empty_fu_443_p2);

assign select_ln37_2_fu_625_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? p_mid_fu_613_p3 : tmp_9_fu_449_p3);

assign select_ln37_3_fu_637_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? 8'd0 : shl_ln_fu_461_p3);

assign select_ln37_4_fu_651_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? p_mid196_fu_645_p2 : empty_164_fu_483_p2);

assign select_ln37_5_fu_685_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? p_mid1116_fu_679_p2 : empty_166_fu_527_p2);

assign select_ln37_6_fu_723_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? add_ln37_1_fu_565_p2 : row_fu_182);

assign select_ln37_fu_557_p3 = ((icmp_ln40_fu_551_p2[0:0] == 1'b1) ? 7'd0 : col_fu_174);

assign select_ln40_1_fu_751_p3 = ((or_ln40_fu_737_p2[0:0] == 1'b1) ? 32'd1 : biasFlag_fu_158);

assign select_ln40_2_fu_759_p3 = ((and_ln37_1_fu_717_p2[0:0] == 1'b1) ? add_ln40_fu_731_p2 : select_ln37_fu_557_p3);

assign select_ln40_3_cast_fu_787_p1 = select_ln40_3_fu_779_p3;

assign select_ln40_3_fu_779_p3 = ((and_ln37_1_fu_717_p2[0:0] == 1'b1) ? shl_ln51_mid1_fu_771_p3 : select_ln37_3_fu_637_p3);

assign select_ln40_4_fu_797_p3 = ((and_ln37_1_fu_717_p2[0:0] == 1'b1) ? p_mid134_fu_791_p2 : select_ln37_4_fu_651_p3);

assign select_ln40_5_fu_805_p3 = ((or_ln40_fu_737_p2[0:0] == 1'b1) ? 5'd0 : empty_165_fu_501_p2);

assign select_ln40_6_fu_839_p3 = ((and_ln37_1_fu_717_p2[0:0] == 1'b1) ? p_mid154_fu_833_p2 : select_ln37_5_fu_685_p3);

assign select_ln40_7_fu_1156_p3 = ((icmp_ln40_reg_1417[0:0] == 1'b1) ? 11'd1 : add_ln40_1_fu_1150_p2);

assign select_ln40_fu_743_p3 = ((or_ln40_fu_737_p2[0:0] == 1'b1) ? 2'd0 : kernel_row_fu_166);

assign select_ln44_1_fu_905_p3 = ((and_ln40_fu_859_p2[0:0] == 1'b1) ? p_mid1_fu_899_p2 : select_ln40_4_fu_797_p3);

assign select_ln44_2_cast_fu_939_p1 = $signed(select_ln44_2_fu_931_p3);

assign select_ln44_2_fu_931_p3 = ((and_ln40_fu_859_p2[0:0] == 1'b1) ? p_mid113_fu_925_p2 : select_ln40_5_fu_805_p3);

assign select_ln44_3_fu_969_p3 = ((and_ln40_fu_859_p2[0:0] == 1'b1) ? p_mid115_fu_963_p2 : select_ln40_6_fu_839_p3);

assign select_ln44_4_fu_977_p3 = ((and_ln40_fu_859_p2[0:0] == 1'b1) ? add_ln44_fu_865_p2 : select_ln40_fu_743_p3);

assign select_ln44_5_fu_1143_p3 = ((or_ln40_reg_1432[0:0] == 1'b1) ? 4'd1 : add_ln44_1_fu_1137_p2);

assign select_ln44_fu_883_p3 = ((or_ln44_1_fu_877_p2[0:0] == 1'b1) ? 2'd0 : kernel_col_fu_162);

assign select_ln71_fu_1293_p3 = ((icmp_ln71_1_fu_1282_p2[0:0] == 1'b1) ? add_ln71_reg_1493 : add_ln71_1_fu_1287_p2);

assign sext_ln37_fu_609_p1 = $signed(select_ln37_1_fu_601_p3);

assign sext_ln52_fu_995_p1 = $signed(add_ln52_1_fu_989_p2);

assign sext_ln55_fu_1025_p1 = add_ln52_fu_999_p2;

assign sext_ln64_fu_1194_p1 = $signed(grp_fu_358_p4);

assign sext_ln70_1_fu_1256_p1 = $signed(grp_fu_358_p4);

assign sext_ln70_fu_1246_p1 = $signed(trunc_ln1_fu_1236_p4);

assign shl_ln4_fu_1219_p3 = {{out_ch_reg_286}, {2'd0}};

assign shl_ln51_mid1_fu_771_p3 = {{add_ln40_fu_731_p2}, {1'd0}};

assign shl_ln60_fu_1078_p2 = groupIndex_reg_298 << 32'd2;

assign shl_ln_fu_461_p3 = {{col_fu_174}, {1'd0}};

assign tmp_11_cast_fu_1102_p1 = $signed(tmp_s_fu_1094_p3);

assign tmp_1_fu_1011_p3 = or_ln52_fu_1005_p2[32'd8];

assign tmp_9_fu_449_p3 = {{row_fu_182}, {1'd0}};

assign tmp_cast_fu_479_p1 = $signed(tmp_fu_473_p2);

assign tmp_cast_mid1_fu_895_p1 = select_ln40_fu_743_p3;

assign tmp_fu_473_p2 = ($signed(kernel_row_fu_166) + $signed(2'd3));

assign tmp_s_fu_1094_p3 = {{add_ln57_1_fu_1073_p2}, {2'd0}};

assign tobool87_not_fu_1019_p2 = ((select_ln40_1_fu_751_p3 == 32'd0) ? 1'b1 : 1'b0);

assign trunc_ln1_fu_1236_p4 = {{add_ln70_fu_1231_p2[63:2]}};

assign xor_ln37_fu_693_p2 = (icmp_ln40_fu_551_p2 ^ 1'd1);

assign xor_ln40_fu_847_p2 = (icmp_ln44_fu_711_p2 ^ 1'd1);

assign zext_ln37_fu_633_p1 = select_ln37_2_fu_625_p3;

assign zext_ln40_1_fu_621_p1 = p_mid_fu_613_p3;

assign zext_ln40_fu_457_p1 = tmp_9_fu_449_p3;

assign zext_ln44_1_fu_891_p1 = add_ln44_fu_865_p2;

assign zext_ln44_fu_469_p1 = kernel_row_fu_166;

assign zext_ln47_fu_985_p1 = select_ln44_fu_883_p3;

assign zext_ln51_fu_767_p1 = select_ln40_2_fu_759_p3;

assign zext_ln57_fu_1064_p1 = phi_mul_reg_310;

assign zext_ln70_fu_1227_p1 = shl_ln4_fu_1219_p3;

always @ (posedge ap_clk) begin
    sext_ln37_reg_1422[3:0] <= 4'b0000;
    zext_ln51_reg_1442[19:7] <= 13'b0000000000000;
    zext_ln47_reg_1462[10:2] <= 9'b000000000;
end

endmodule //kernel_stage0_DW_conv_1_2_3_12_1
