#ifndef _KRNL_STAGE1_2_H_
#define _KRNL_STAGE1_2_H_

// Includes
#include <ap_int.h>
#include <hls_stream.h>
#include <hls_math.h>
#include <iostream>

extern "C"
{
    void kernel_EMO(float* X_data,
                    float* msp_conv_weight, float* msp_conv_bias, float* msp_norm_weight, float* msp_norm_bias, float* msp_norm_running_mean, float* msp_norm_running_var,
                    float* dw_conv_weight, float* dw_norm_gamma, float* dw_norm_beta, float* dw_norm_mean, float* dw_norm_var,
                    float* se_conv_reduce_weight, float* se_conv_reduce_bias, float* se_conv_expand_weight, float* se_conv_expand_bias,
                    float* proj_conv_weight,
                    
                    float* norm_1_1_weight, float* norm_1_1_bias, float* norm_1_1_running_mean, float* norm_1_1_running_var,
                    float* v_conv_1_1_weight, float* v_conv_1_1_bias,
                    float* dw_conv_1_1_filter, float* dw_norm_1_1_gamma, float* dw_norm_1_1_beta, float* dw_norm_1_1_mean, float* dw_norm_1_1_var,
                    float* proj_1_1_weight,
                    float* norm_1_2_weight, float* norm_1_2_bias, float* norm_1_2_running_mean, float* norm_1_2_running_var,
                    float* v_conv_1_2_weight, float* v_conv_1_2_bias,
                    float* dw_conv_1_2_filter, float* dw_norm_1_2_gamma, float* dw_norm_1_2_beta, float* dw_norm_1_2_mean, float* dw_norm_1_2_var,
                    float* proj_1_2_weight,

                    float* norm_2_1_weight, float* norm_2_1_bias, float* norm_2_1_running_mean, float* norm_2_1_running_var,
                    float* v_conv_2_1_weight, float* v_conv_2_1_bias,
                    float* dw_conv_2_1_filter, float* dw_norm_2_1_gamma, float* dw_norm_2_1_beta, float* dw_norm_2_1_mean, float* dw_norm_2_1_var,
                    float* proj_2_1_weight,
                    float* norm_2_2_weight, float* norm_2_2_bias, float* norm_2_2_running_mean, float* norm_2_2_running_var,
                    float* v_conv_2_2_weight, float* v_conv_2_2_bias,
                    float* dw_conv_2_2_filter, float* dw_norm_2_2_gamma, float* dw_norm_2_2_beta, float* dw_norm_2_2_mean, float* dw_norm_2_2_var,
                    float* proj_2_2_weight,

                    float* Y_msp_conv, float* Y_msp_norm, float* Y_dw_conv, float* Y_dw_norm, float* Y_dw_act,
                    float* Y_se_mean, float* Y_se_reduce, float* Y_se_act, float* Y_se_expand, float* Y_se_sigmoid, float* Y_se, float* Y_proj,
                    float* Y_norm_1_1, float* Y_v_conv_1_1, float* Y_v_act_1_1, float* Y_dw_conv_1_1, float* Y_dw_norm_1_1, float* Y_dw_act_1_1, float* Y_proj_1_1,
                    float* Y_norm_1_2, float* Y_v_conv_1_2, float* Y_v_act_1_2, float* Y_dw_conv_1_2, float* Y_dw_norm_1_2, float* Y_dw_act_1_2, float* Y_proj_1_2,
                    float* Y_dw_skip_1_2, float* Y_skip_1_2,
                    float* Y_norm_2_1, float* Y_v_conv_2_1, float* Y_v_act_2_1, float* Y_dw_conv_2_1, float* Y_dw_norm_2_1, float* Y_dw_act_2_1, float* Y_proj_2_1,
                    float* Y_norm_2_2, float* Y_v_conv_2_2, float* Y_v_act_2_2, float* Y_dw_conv_2_2, float* Y_dw_norm_2_2, float* Y_dw_act_2_2, float* Y_proj_2_2,
                    float* Y_dw_skip_2_2, float* Y_skip_2_2,

                    float* norm_0_weight_3, float* norm_0_bias_3, float* v_conv_0_weight_3, float* v_conv_0_bias_3,
                    float* dw_conv_0_filter_3, float* dw_norm_0_weight_3, float* dw_norm_0_bias_3, float* dw_norm_0_mean_3, float* dw_norm_0_var_3,
                    float* proj_0_weight_3, float* Y_norm_0_3, float* Y_v_conv_0_3, float* Y_v_act_0_3, float* Y_dw_conv_0_3, float* Y_dw_norm_0_3, float* Y_dw_act_0_3,
                    float* result_30, float *afterNorm_3,
                    float *norm1_mean_3, float *norm1_var_3, float *norm1_weight_3, float *norm1_bias_3, 
                    float *afterRearrangeX_3,
                    float *afterConv1_3,
                    float *kernel1_3,
                    float *bias1_3,
                    float *in_q_3,
                    float *in_k_3,
                    float *afterQKMultiplication_3,
                    float *afterSoftmax_3,
                    float *afterRearrangeX2_3,
                    float *afterQKXMultiplication_3,
                    float *afterRearrangeQKX_3,
                    float *afterConv2_3,
                    float *kernel2_3,
                    float *bias2_3,
                    float *afterAct2_3,
                    float *buffer_out_3,
                    float *buffer_result_3,
                    float* dw_conv_1_filter_3, float* dw_norm_1_weight_3, float* dw_norm_1_bias_3, float* dw_norm_1_mean_3, float* dw_norm_1_var_3,
                    float* proj_1_weight_3,
                    float* Y_dw_conv_1_3, float* Y_dw_norm_1_3, float* Y_dw_act_1_3, float* Y_proj_1_3,
                    float* Y_dw_skip_1_3, float* Y_skip_1_3,

                    float* norm_0_weight_4, float* norm_0_bias_4, float* v_conv_0_weight_4, float* v_conv_0_bias_4,
                    float* dw_conv_0_filter_4, float* dw_norm_0_weight_4, float* dw_norm_0_bias_4, float* dw_norm_0_mean_4, float* dw_norm_0_var_4,
                    float* proj_0_weight_4, float* Y_norm_0_4, float* Y_v_conv_0_4, float* Y_v_act_0_4, float* Y_dw_conv_0_4, float* Y_dw_norm_0_4, float* Y_dw_act_0_4,
                    float* result_40, float *afterNorm_4,
                    float *norm1_mean_4, float *norm1_var_4, float *norm1_weight_4, float *norm1_bias_4, 
                    float *afterRearrangeX_4,
                    float *afterConv1_4,
                    float *kernel1_4,
                    float *bias1_4,
                    float *in_q_4,
                    float *in_k_4,
                    float *afterQKMultiplication_4,
                    float *afterSoftmax_4,
                    float *afterRearrangeX2_4,
                    float *afterQKXMultiplication_4,
                    float *afterRearrangeQKX_4,
                    float *afterConv2_4,
                    float *kernel2_4,
                    float *bias2_4,
                    float *afterAct2_4,
                    float *buffer_out_4,
                    float *buffer_result_4,
                    float* dw_conv_1_filter_4, float* dw_norm_1_weight_4, float* dw_norm_1_bias_4, float* dw_norm_1_mean_4, float* dw_norm_1_var_4,
                    float* proj_1_weight_4,
                    float* Y_dw_conv_1_4, float* Y_dw_norm_1_4, float* Y_dw_act_1_4, float* Y_proj_1_4,
                    float* Y_dw_skip_1_4, float* Y_skip_1_4
                    );

    void kernel_stage0(float* X_data, float* msp_conv_weight, float* msp_conv_bias, float* msp_norm_weight, float* msp_norm_bias, float* msp_norm_running_mean, float* msp_norm_running_var,
                       float* dw_conv_weight, float* dw_norm_gamma, float* dw_norm_beta, float* dw_norm_mean, float* dw_norm_var,
                       float* se_conv_reduce_weight, float* se_conv_reduce_bias, float* se_conv_expand_weight, float* se_conv_expand_bias,
                       float* proj_conv_weight, float* Y_msp_conv, float* Y_msp_norm, float* Y_dw_conv, float* Y_dw_norm, float* Y_dw_act, float* Y_se_mean, float* Y_se_reduce, 
                       float* Y_se_act, float* Y_se_expand, float* Y_se_sigmoid, float* Y_se, float* Y_proj
                       );
    void kernel_stage1(float *X_data,
                       float* norm_1_1_weight, float* norm_1_1_bias, float* norm_1_1_running_mean, float* norm_1_1_running_var,
                       float* v_conv_1_1_weight, float* v_conv_1_1_bias,
                       float* dw_conv_1_1_filter, float* dw_norm_1_1_gamma, float* dw_norm_1_1_beta, float* dw_norm_1_1_mean, float* dw_norm_1_1_var,
                       float* proj_1_1_weight,
                       float* norm_1_2_weight, float* norm_1_2_bias, float* norm_1_2_running_mean, float* norm_1_2_running_var,
                       float* v_conv_1_2_weight, float* v_conv_1_2_bias,
                       float* dw_conv_1_2_filter, float* dw_norm_1_2_gamma, float* dw_norm_1_2_beta, float* dw_norm_1_2_mean, float* dw_norm_1_2_var,
                       float* proj_1_2_weight,
                       float* Y_norm_1_1, float* Y_v_conv_1_1, float* Y_v_act_1_1, float* Y_dw_conv_1_1, float* Y_dw_norm_1_1, float* Y_dw_act_1_1, float* Y_proj_1_1,
                       float* Y_norm_1_2, float* Y_v_conv_1_2, float* Y_v_act_1_2, float* Y_dw_conv_1_2, float* Y_dw_norm_1_2, float* Y_dw_act_1_2, float* Y_proj_1_2,
                       float* Y_dw_skip_1_2, float* Y_skip_1_2
                       );
    void kernel_stage2(float* X_data, 
                       float* norm_2_1_weight, float* norm_2_1_bias, float* norm_2_1_running_mean, float* norm_2_1_running_var,
                       float* v_conv_2_1_weight, float* v_conv_2_1_bias,
                       float* dw_conv_2_1_filter, float* dw_norm_2_1_gamma, float* dw_norm_2_1_beta, float* dw_norm_2_1_mean, float* dw_norm_2_1_var,
                       float* proj_2_1_weight,
                       float* norm_2_2_weight, float* norm_2_2_bias, float* norm_2_2_running_mean, float* norm_2_2_running_var,
                       float* v_conv_2_2_weight, float* v_conv_2_2_bias,
                       float* dw_conv_2_2_filter, float* dw_norm_2_2_gamma, float* dw_norm_2_2_beta, float* dw_norm_2_2_mean, float* dw_norm_2_2_var,
                       float* proj_2_2_weight,
                       float* Y_norm_2_1, float* Y_v_conv_2_1, float* Y_v_act_2_1, float* Y_dw_conv_2_1, float* Y_dw_norm_2_1, float* Y_dw_act_2_1, float* Y_proj_2_1,
                       float* Y_norm_2_2, float* Y_v_conv_2_2, float* Y_v_act_2_2, float* Y_dw_conv_2_2, float* Y_dw_norm_2_2, float* Y_dw_act_2_2, float* Y_proj_2_2,
                       float* Y_dw_skip_2_2, float* Y_skip_2_2
                       );
    void kernel_stage3(float* X_data, float* norm_0_weight_3, float* norm_0_bias_3, float* v_conv_0_weight_3, float* v_conv_0_bias_3,
                        float* dw_conv_0_filter_3, float* dw_norm_0_weight_3, float* dw_norm_0_bias_3, float* dw_norm_0_mean_3, float* dw_norm_0_var_3,
                        float* proj_0_weight_3, float* Y_norm_0_3, float* Y_v_conv_0_3, float* Y_v_act_0_3, float* Y_dw_conv_0_3, float* Y_dw_norm_0_3, float* Y_dw_act_0_3,
                        float* result_30, float *afterNorm_3,
                        float *norm1_mean_3, float *norm1_var_3, float *norm1_weight_3, float *norm1_bias_3, 
                        float *afterRearrangeX_3,
                        float *afterConv1_3,
                        float *kernel1_3,
                        float *bias1_3,
                        float *in_q_3,
                        float *in_k_3,
                        float *afterQKMultiplication_3,
                        float *afterSoftmax_3,
                        float *afterRearrangeX2_3,
                        float *afterQKXMultiplication_3,
                        float *afterRearrangeQKX_3,
                        float *afterConv2_3,
                        float *kernel2_3,
                        float *bias2_3,
                        float *afterAct2_3,
                        float *buffer_out_3,
                        float *buffer_result_3,
                        float* dw_conv_1_filter_3, float* dw_norm_1_weight_3, float* dw_norm_1_bias_3, float* dw_norm_1_mean_3, float* dw_norm_1_var_3,
                        float* proj_1_weight_3,
                        float* Y_dw_conv_1_3, float* Y_dw_norm_1_3, float* Y_dw_act_1_3, float* Y_proj_1_3,
                        float* Y_dw_skip_1_3, float* Y_skip_1_3);
    void kernel_stage4(float *X_data, float *norm_0_weight_4, float *norm_0_bias_4, float *v_conv_0_weight_4, float *v_conv_0_bias_4,
                       float *dw_conv_0_filter_4, float *dw_norm_0_weight_4, float *dw_norm_0_bias_4, float *dw_norm_0_mean_4, float *dw_norm_0_var_4,
                       float *proj_0_weight_4, float *Y_norm_0_4, float *Y_v_conv_0_4, float *Y_v_act_0_4, float *Y_dw_conv_0_4, float *Y_dw_norm_0_4, float *Y_dw_act_0_4,
                       float *result_40, float *afterNorm_4,
                       float *norm1_mean_4, float *norm1_var_4, float *norm1_weight_4, float *norm1_bias_4,
                       float *afterRearrangeX_4,
                       float *afterConv1_4,
                       float *kernel1_4,
                       float *bias1_4,
                       float *in_q_4,
                       float *in_k_4,
                       float *afterQKMultiplication_4,
                       float *afterSoftmax_4,
                       float *afterRearrangeX2_4,
                       float *afterQKXMultiplication_4,
                       float *afterRearrangeQKX_4,
                       float *afterConv2_4,
                       float *kernel2_4,
                       float *bias2_4,
                       float *afterAct2_4,
                       float *buffer_out_4,
                       float *buffer_result_4,
                       float *dw_conv_1_filter_4, float *dw_norm_1_weight_4, float *dw_norm_1_bias_4, float *dw_norm_1_mean_4, float *dw_norm_1_var_4,
                       float *proj_1_weight_4,
                       float *Y_dw_conv_1_4, float *Y_dw_norm_1_4, float *Y_dw_act_1_4, float *Y_proj_1_4,
                       float *Y_dw_skip_1_4, float *Y_skip_1_4);
    void kernel_attention_3(float *buffer_DataIn_1,
                            float *afterNorm,
                            float *norm1_mean, float *norm1_var, float *norm1_weight, float *norm1_bias, 
                            float *afterRearrangeX,
                            float *afterConv1,
                            float *kernel1,
                            float *bias1,
                            float *in_q,
                            float *in_k,
                            float *afterQKMultiplication,
                            float *afterSoftmax,
                            float *afterRearrangeX2,
                            float *afterQKXMultiplication,
                            float *afterRearrangeQKX,
                            float *afterConv2,
                            float *kernel2,
                            float *bias2,
                            float *afterAct2,
                            float *buffer_out,
                            float *buffer_result
                       );
    void kernel_attention_4(float *buffer_DataIn_1,
                            float *afterNorm,
                            float *norm1_mean, float *norm1_var, float *norm1_weight, float *norm1_bias,
                            float *afterRearrangeX,
                            float *afterConv1,
                            float *kernel1,
                            float *bias1,
                            float *in_q,
                            float *in_k,
                            float *afterQKMultiplication,
                            float *afterSoftmax,
                            float *afterRearrangeX2,
                            float *afterQKXMultiplication,
                            float *afterRearrangeQKX,
                            float *afterConv2,
                            float *kernel2,
                            float *bias2,
                            float *afterAct2,
                            float *buffer_out,
                            float *buffer_result);

    void DW_conv(float *in, float *kernel, float *bias, int *shape_para, int *conv_para, float *out);
    void BatchNorm(float *X_data, float *Y_data, int *X_num, float *mean, float *var, float *gamma, float *beta);
    void LayerNorm(float* X_data, float* Y_data, int* X_num, float* mean_buf, float* var_buf, float* gamma, float* beta);
    void ReLU(float *X_data, float *Y_data, int *X_num, int zp);
    void SiLU(float *X_data, float *Y_data, int *X_num);
    void GeLU(float* X_data, float* Y_data, int* X_num);
    void Pointwise_conv(float *buffer_DataIn_1, float *out, float *buffer_kernel, float *buffer_bias,
                        int batch_size, int channel_in, int channel_out, int height_in, int width_in,
                        bool is_conv_bias);
    void Compute_skip(float *in1, float *in2, float *out, int *X_num);
    void clear_data_3(
        float *afterNorm, float *afterRearrangeX, float *afterConv1,
        float *in_q, float *in_k,
        float *afterQKMultiplication, float *afterSoftmax, float *afterRearrangeX2, float *afterQKXMultiplication,
        float *afterRearrangeQKX, float *afterConv2, float *afterAct2,
        float *buffer_out, float *buffer_result,
        float *Y_dw_conv_1, float *Y_dw_norm_1, float *Y_dw_act_1, float *Y_proj_1, float *Y_dw_skip_1
    );
    void clear_data_4(
    float *afterNorm, float *afterRearrangeX, float *afterConv1,
    float *in_q, float *in_k,
    float *afterQKMultiplication, float *afterSoftmax, float *afterRearrangeX2, float *afterQKXMultiplication,
    float *afterRearrangeQKX, float *afterConv2, float *afterAct2,
    float *buffer_out, float *buffer_result,
    float *Y_dw_conv_1, float *Y_dw_norm_1, float *Y_dw_act_1, float *Y_proj_1, float *Y_dw_skip_1
    );
    void split_data_to7(float *origin, float *l1, float *l2, float *l3, float *l4, float *l5, float *l6, float *l7, int n);

}

#endif
